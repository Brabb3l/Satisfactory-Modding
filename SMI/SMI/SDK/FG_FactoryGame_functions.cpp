// Satisfactory SDK (V0.1.12 - Build 99303)

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "FG_FactoryGame_parameters.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Functions
//---------------------------------------------------------------------------

// Function FactoryGame.FGActorRepresentation.OnRep_ShouldShowOnMap
// ()

void UFGActorRepresentation::OnRep_ShouldShowOnMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.OnRep_ShouldShowOnMap");

	UFGActorRepresentation_OnRep_ShouldShowOnMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGActorRepresentation.OnRep_ShouldShowInCompass
// ()

void UFGActorRepresentation::OnRep_ShouldShowInCompass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.OnRep_ShouldShowInCompass");

	UFGActorRepresentation_OnRep_ShouldShowInCompass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGActorRepresentation.OnRep_RepresentationTexture
// ()

void UFGActorRepresentation::OnRep_RepresentationTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.OnRep_RepresentationTexture");

	UFGActorRepresentation_OnRep_RepresentationTexture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGActorRepresentation.OnRep_RepresentationText
// ()

void UFGActorRepresentation::OnRep_RepresentationText()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.OnRep_RepresentationText");

	UFGActorRepresentation_OnRep_RepresentationText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGActorRepresentation.OnRep_RepresentationColor
// ()

void UFGActorRepresentation::OnRep_RepresentationColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.OnRep_RepresentationColor");

	UFGActorRepresentation_OnRep_RepresentationColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGActorRepresentation.OnRep_FogOfWarRevealType
// ()

void UFGActorRepresentation::OnRep_FogOfWarRevealType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.OnRep_FogOfWarRevealType");

	UFGActorRepresentation_OnRep_FogOfWarRevealType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGActorRepresentation.OnRep_FogOfWarRevealRadius
// ()

void UFGActorRepresentation::OnRep_FogOfWarRevealRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.OnRep_FogOfWarRevealRadius");

	UFGActorRepresentation_OnRep_FogOfWarRevealRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGActorRepresentation.IsActorStatic
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentation::IsActorStatic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.IsActorStatic");

	UFGActorRepresentation_IsActorStatic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetShouldShowOnMap
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentation::GetShouldShowOnMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetShouldShowOnMap");

	UFGActorRepresentation_GetShouldShowOnMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetShouldShowInCompass
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentation::GetShouldShowInCompass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetShouldShowInCompass");

	UFGActorRepresentation_GetShouldShowInCompass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetRepresentationType
// ()
// Parameters:
// ERepresentationType            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ERepresentationType UFGActorRepresentation::GetRepresentationType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetRepresentationType");

	UFGActorRepresentation_GetRepresentationType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetRepresentationTexture
// ()
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFGActorRepresentation::GetRepresentationTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetRepresentationTexture");

	UFGActorRepresentation_GetRepresentationTexture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetRepresentationText
// ()
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGActorRepresentation::GetRepresentationText()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetRepresentationText");

	UFGActorRepresentation_GetRepresentationText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetRepresentationColor
// ()
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor UFGActorRepresentation::GetRepresentationColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetRepresentationColor");

	UFGActorRepresentation_GetRepresentationColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetRealActor
// ()
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UFGActorRepresentation::GetRealActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetRealActor");

	UFGActorRepresentation_GetRealActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetIsTemporary
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentation::GetIsTemporary()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetIsTemporary");

	UFGActorRepresentation_GetIsTemporary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetFogOfWarRevealType
// ()
// Parameters:
// EFogOfWarRevealType            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFogOfWarRevealType UFGActorRepresentation::GetFogOfWarRevealType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetFogOfWarRevealType");

	UFGActorRepresentation_GetFogOfWarRevealType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetFogOfWarRevealRadius
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGActorRepresentation::GetFogOfWarRevealRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetFogOfWarRevealRadius");

	UFGActorRepresentation_GetFogOfWarRevealRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetActorRotation
// ()
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator UFGActorRepresentation::GetActorRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetActorRotation");

	UFGActorRepresentation_GetActorRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetActorLocation
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UFGActorRepresentation::GetActorLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetActorLocation");

	UFGActorRepresentation_GetActorLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.UpdateRepresentation
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentationInterface::UpdateRepresentation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.UpdateRepresentation");

	UFGActorRepresentationInterface_UpdateRepresentation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.SetActorRepresentationText
// ()
// Parameters:
// struct FText                   newText                        (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGActorRepresentationInterface::SetActorRepresentationText(const struct FText& newText)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.SetActorRepresentationText");

	UFGActorRepresentationInterface_SetActorRepresentationText_Params params;
	params.newText = newText;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.RemoveAsRepresentation
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentationInterface::RemoveAsRepresentation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.RemoveAsRepresentation");

	UFGActorRepresentationInterface_RemoveAsRepresentation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.IsActorStatic
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentationInterface::IsActorStatic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.IsActorStatic");

	UFGActorRepresentationInterface_IsActorStatic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetRealActorRotation
// ()
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator UFGActorRepresentationInterface::GetRealActorRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetRealActorRotation");

	UFGActorRepresentationInterface_GetRealActorRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetRealActorLocation
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UFGActorRepresentationInterface::GetRealActorLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetRealActorLocation");

	UFGActorRepresentationInterface_GetRealActorLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetActorShouldShowOnMap
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentationInterface::GetActorShouldShowOnMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetActorShouldShowOnMap");

	UFGActorRepresentationInterface_GetActorShouldShowOnMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetActorShouldShowInCompass
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentationInterface::GetActorShouldShowInCompass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetActorShouldShowInCompass");

	UFGActorRepresentationInterface_GetActorShouldShowInCompass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetActorRepresentationType
// ()
// Parameters:
// ERepresentationType            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ERepresentationType UFGActorRepresentationInterface::GetActorRepresentationType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetActorRepresentationType");

	UFGActorRepresentationInterface_GetActorRepresentationType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetActorRepresentationTexture
// ()
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFGActorRepresentationInterface::GetActorRepresentationTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetActorRepresentationTexture");

	UFGActorRepresentationInterface_GetActorRepresentationTexture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetActorRepresentationText
// ()
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGActorRepresentationInterface::GetActorRepresentationText()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetActorRepresentationText");

	UFGActorRepresentationInterface_GetActorRepresentationText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetActorRepresentationColor
// ()
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor UFGActorRepresentationInterface::GetActorRepresentationColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetActorRepresentationColor");

	UFGActorRepresentationInterface_GetActorRepresentationColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetActorFogOfWarRevealType
// ()
// Parameters:
// EFogOfWarRevealType            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFogOfWarRevealType UFGActorRepresentationInterface::GetActorFogOfWarRevealType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetActorFogOfWarRevealType");

	UFGActorRepresentationInterface_GetActorFogOfWarRevealType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetActorFogOfWarRevealRadius
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGActorRepresentationInterface::GetActorFogOfWarRevealRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetActorFogOfWarRevealRadius");

	UFGActorRepresentationInterface_GetActorFogOfWarRevealRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.AddAsRepresentation
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentationInterface::AddAsRepresentation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.AddAsRepresentation");

	UFGActorRepresentationInterface_AddAsRepresentation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationManager.UpdateRepresentation
// ()
// Parameters:
// class AActor*                  realActor                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isLocal                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGActorRepresentationManager::UpdateRepresentation(class AActor* realActor, bool isLocal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.UpdateRepresentation");

	AFGActorRepresentationManager_UpdateRepresentation_Params params;
	params.realActor = realActor;
	params.isLocal = isLocal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationManager.RemoveRepresentationOfActor
// ()
// Parameters:
// class AActor*                  realActor                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGActorRepresentationManager::RemoveRepresentationOfActor(class AActor* realActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.RemoveRepresentationOfActor");

	AFGActorRepresentationManager_RemoveRepresentationOfActor_Params params;
	params.realActor = realActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationManager.OnRep_ReplicatedRepresentations
// ()

void AFGActorRepresentationManager::OnRep_ReplicatedRepresentations()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.OnRep_ReplicatedRepresentations");

	AFGActorRepresentationManager_OnRep_ReplicatedRepresentations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGActorRepresentationManager.GetAllActorRepresentations
// ()
// Parameters:
// TArray<class UFGActorRepresentation*> out_AllRepresentations         (Parm, OutParm, ZeroConstructor, ReferenceParm)

void AFGActorRepresentationManager::GetAllActorRepresentations(TArray<class UFGActorRepresentation*>* out_AllRepresentations)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.GetAllActorRepresentations");

	AFGActorRepresentationManager_GetAllActorRepresentations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_AllRepresentations != nullptr)
		*out_AllRepresentations = params.out_AllRepresentations;
}


// Function FactoryGame.FGActorRepresentationManager.Get
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGActorRepresentationManager* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGActorRepresentationManager* AFGActorRepresentationManager::Get(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.Get");

	AFGActorRepresentationManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationManager.CreateAndAddNewRepresentationNoActor
// ()
// Parameters:
// struct FVector                 Location                       (Parm, IsPlainOldData)
// class UTexture2D*              compassTexture                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            compassColor                   (Parm, IsPlainOldData)
// float                          LifeTime                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           shouldShowInCompass            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           shouldShowOnMap                (Parm, ZeroConstructor, IsPlainOldData)
// ERepresentationType            representationType             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isLocal                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGActorRepresentationManager::CreateAndAddNewRepresentationNoActor(const struct FVector& Location, class UTexture2D* compassTexture, const struct FLinearColor& compassColor, float LifeTime, bool shouldShowInCompass, bool shouldShowOnMap, ERepresentationType representationType, bool isLocal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.CreateAndAddNewRepresentationNoActor");

	AFGActorRepresentationManager_CreateAndAddNewRepresentationNoActor_Params params;
	params.Location = Location;
	params.compassTexture = compassTexture;
	params.compassColor = compassColor;
	params.LifeTime = LifeTime;
	params.shouldShowInCompass = shouldShowInCompass;
	params.shouldShowOnMap = shouldShowOnMap;
	params.representationType = representationType;
	params.isLocal = isLocal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationManager.CreateAndAddNewRepresentation
// ()
// Parameters:
// class AActor*                  realActor                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isLocal                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGActorRepresentationManager::CreateAndAddNewRepresentation(class AActor* realActor, bool isLocal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.CreateAndAddNewRepresentation");

	AFGActorRepresentationManager_CreateAndAddNewRepresentation_Params params;
	params.realActor = realActor;
	params.isLocal = isLocal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAggroTargetInterface.UnregisterAttacker
// ()
// Parameters:
// class AFGEnemyController*      forController                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGAggroTargetInterface::UnregisterAttacker(class AFGEnemyController* forController)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAggroTargetInterface.UnregisterAttacker");

	UFGAggroTargetInterface_UnregisterAttacker_Params params;
	params.forController = forController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAggroTargetInterface.ShouldAutoregisterAsTargetable
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGAggroTargetInterface::ShouldAutoregisterAsTargetable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAggroTargetInterface.ShouldAutoregisterAsTargetable");

	UFGAggroTargetInterface_ShouldAutoregisterAsTargetable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAggroTargetInterface.RegisterIncomingAttacker
// ()
// Parameters:
// class AFGEnemyController*      forController                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGAggroTargetInterface::RegisterIncomingAttacker(class AFGEnemyController* forController)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAggroTargetInterface.RegisterIncomingAttacker");

	UFGAggroTargetInterface_RegisterIncomingAttacker_Params params;
	params.forController = forController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAggroTargetInterface.IsAlive
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGAggroTargetInterface::IsAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAggroTargetInterface.IsAlive");

	UFGAggroTargetInterface_IsAlive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAggroTargetInterface.GetTargetComponent
// ()
// Parameters:
// class UPrimitiveComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPrimitiveComponent* UFGAggroTargetInterface::GetTargetComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAggroTargetInterface.GetTargetComponent");

	UFGAggroTargetInterface_GetTargetComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAggroTargetInterface.GetEnemyTargetDesirability
// ()
// Parameters:
// class AFGEnemyController*      forController                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGAggroTargetInterface::GetEnemyTargetDesirability(class AFGEnemyController* forController)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAggroTargetInterface.GetEnemyTargetDesirability");

	UFGAggroTargetInterface_GetEnemyTargetDesirability_Params params;
	params.forController = forController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAggroTargetInterface.GetAttackLocation
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UFGAggroTargetInterface::GetAttackLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAggroTargetInterface.GetAttackLocation");

	UFGAggroTargetInterface_GetAttackLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAggroTargetInterface.GetActor
// ()
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UFGAggroTargetInterface::GetActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAggroTargetInterface.GetActor");

	UFGAggroTargetInterface_GetActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAISystem.UnpardonActor
// ()
// Parameters:
// class AActor*                  inActor                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGAISystem::UnpardonActor(class AActor* inActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.UnpardonActor");

	UFGAISystem_UnpardonActor_Params params;
	params.inActor = inActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAISystem.RemoveFromTargetableList
// ()
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface> aggroTarget                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGAISystem::RemoveFromTargetableList(const TScriptInterface<class UFGAggroTargetInterface>& aggroTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.RemoveFromTargetableList");

	UFGAISystem_RemoveFromTargetableList_Params params;
	params.aggroTarget = aggroTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAISystem.PlayerDestroyed
// ()
// Parameters:
// class AActor*                  destroyedPlayer                (Parm, ZeroConstructor, IsPlainOldData)

void UFGAISystem::PlayerDestroyed(class AActor* destroyedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.PlayerDestroyed");

	UFGAISystem_PlayerDestroyed_Params params;
	params.destroyedPlayer = destroyedPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAISystem.PardonActor
// ()
// Parameters:
// class AActor*                  inActor                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGAISystem::PardonActor(class AActor* inActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.PardonActor");

	UFGAISystem_PardonActor_Params params;
	params.inActor = inActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAISystem.IsActorPardoned
// ()
// Parameters:
// class AActor*                  inActor                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGAISystem::IsActorPardoned(class AActor* inActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.IsActorPardoned");

	UFGAISystem_IsActorPardoned_Params params;
	params.inActor = inActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAISystem.GetAggroTargetList
// ()
// Parameters:
// TArray<TScriptInterface<class UFGAggroTargetInterface>> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<TScriptInterface<class UFGAggroTargetInterface>> UFGAISystem::GetAggroTargetList()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.GetAggroTargetList");

	UFGAISystem_GetAggroTargetList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAISystem.CreatureDestroyed
// ()
// Parameters:
// class AActor*                  destroyedEnemy                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGAISystem::CreatureDestroyed(class AActor* destroyedEnemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.CreatureDestroyed");

	UFGAISystem_CreatureDestroyed_Params params;
	params.destroyedEnemy = destroyedEnemy;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAISystem.ClearAllPardonedActors
// ()

void UFGAISystem::ClearAllPardonedActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.ClearAllPardonedActors");

	UFGAISystem_ClearAllPardonedActors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAISystem.AggroTargetDestroyed
// ()
// Parameters:
// class AActor*                  DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGAISystem::AggroTargetDestroyed(class AActor* DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.AggroTargetDestroyed");

	UFGAISystem_AggroTargetDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAISystem.AddToTargetableList
// ()
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface> aggroTarget                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGAISystem::AddToTargetableList(const TScriptInterface<class UFGAggroTargetInterface>& aggroTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.AddToTargetableList");

	UFGAISystem_AddToTargetableList_Params params;
	params.aggroTarget = aggroTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAmbientSettings.ShouldIgnoreListenerRotation
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGAmbientSettings::ShouldIgnoreListenerRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAmbientSettings.ShouldIgnoreListenerRotation");

	UFGAmbientSettings_ShouldIgnoreListenerRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAmbientSettings.OnExitOuterVolume
// ()
// Parameters:
// class UAkComponent*            ambientComponent               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGAmbientSettings::OnExitOuterVolume(class UAkComponent* ambientComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAmbientSettings.OnExitOuterVolume");

	UFGAmbientSettings_OnExitOuterVolume_Params params;
	params.ambientComponent = ambientComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAmbientSettings.OnExitInnerVolume
// ()
// Parameters:
// class UAkComponent*            ambientComponent               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGAmbientSettings::OnExitInnerVolume(class UAkComponent* ambientComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAmbientSettings.OnExitInnerVolume");

	UFGAmbientSettings_OnExitInnerVolume_Params params;
	params.ambientComponent = ambientComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAmbientSettings.OnEnterOuterVolume
// ()
// Parameters:
// class UAkComponent*            ambientComponent               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGAmbientSettings::OnEnterOuterVolume(class UAkComponent* ambientComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAmbientSettings.OnEnterOuterVolume");

	UFGAmbientSettings_OnEnterOuterVolume_Params params;
	params.ambientComponent = ambientComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAmbientSettings.OnEnterInnerVolume
// ()
// Parameters:
// class UAkComponent*            ambientComponent               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGAmbientSettings::OnEnterInnerVolume(class UAkComponent* ambientComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAmbientSettings.OnEnterInnerVolume");

	UFGAmbientSettings_OnEnterInnerVolume_Params params;
	params.ambientComponent = ambientComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAmbientSettings.GetEnterOuterVolumeEvent
// ()
// Parameters:
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* UFGAmbientSettings::GetEnterOuterVolumeEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAmbientSettings.GetEnterOuterVolumeEvent");

	UFGAmbientSettings_GetEnterOuterVolumeEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAmbientSettings.GetEnterInnerVolumeEvent
// ()
// Parameters:
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* UFGAmbientSettings::GetEnterInnerVolumeEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAmbientSettings.GetEnterInnerVolumeEvent");

	UFGAmbientSettings_GetEnterInnerVolumeEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAmbientSoundSpline.GetSplineComponent
// ()
// Parameters:
// class USplineComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USplineComponent* AFGAmbientSoundSpline::GetSplineComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAmbientSoundSpline.GetSplineComponent");

	AFGAmbientSoundSpline_GetSplineComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterAnimInstance.OnRadialDamageTaken
// ()

void UFGCharacterAnimInstance::OnRadialDamageTaken()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.OnRadialDamageTaken");

	UFGCharacterAnimInstance_OnRadialDamageTaken_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterAnimInstance.OnPointDamageTaken
// ()
// Parameters:
// struct FVector                 shootDIrection                 (Parm, IsPlainOldData)

void UFGCharacterAnimInstance::OnPointDamageTaken(const struct FVector& shootDIrection)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.OnPointDamageTaken");

	UFGCharacterAnimInstance_OnPointDamageTaken_Params params;
	params.shootDIrection = shootDIrection;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterAnimInstance.OnAnyDamageTaken
// ()

void UFGCharacterAnimInstance::OnAnyDamageTaken()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.OnAnyDamageTaken");

	UFGCharacterAnimInstance_OnAnyDamageTaken_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterAnimInstance.GetVelocityDirection
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGCharacterAnimInstance::GetVelocityDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.GetVelocityDirection");

	UFGCharacterAnimInstance_GetVelocityDirection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterAnimInstance.GetVelocity
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UFGCharacterAnimInstance::GetVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.GetVelocity");

	UFGCharacterAnimInstance_GetVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterAnimInstance.GetDesiredWalkRotation
// ()
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator UFGCharacterAnimInstance::GetDesiredWalkRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.GetDesiredWalkRotation");

	UFGCharacterAnimInstance_GetDesiredWalkRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterAnimInstance.GetDesiredRunLeanRotation
// ()
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator UFGCharacterAnimInstance::GetDesiredRunLeanRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.GetDesiredRunLeanRotation");

	UFGCharacterAnimInstance_GetDesiredRunLeanRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterAnimInstance.GetCachedCharacter
// ()
// Parameters:
// class AFGCharacterBase*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterBase* UFGCharacterAnimInstance::GetCachedCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.GetCachedCharacter");

	UFGCharacterAnimInstance_GetCachedCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterAnimInstance.GetAccelerationVectorLength
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGCharacterAnimInstance::GetAccelerationVectorLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.GetAccelerationVectorLength");

	UFGCharacterAnimInstance_GetAccelerationVectorLength_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHologram.Server_SetSnapToGuideLines
// ()
// Parameters:
// bool                           IsEnabled                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGHologram::Server_SetSnapToGuideLines(bool IsEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.Server_SetSnapToGuideLines");

	AFGHologram_Server_SetSnapToGuideLines_Params params;
	params.IsEnabled = IsEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHologram.OnRep_PlacementMaterial
// ()

void AFGHologram::OnRep_PlacementMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.OnRep_PlacementMaterial");

	AFGHologram_OnRep_PlacementMaterial_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHologram.OnRep_InitialScrollModeValue
// ()

void AFGHologram::OnRep_InitialScrollModeValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.OnRep_InitialScrollModeValue");

	AFGHologram_OnRep_InitialScrollModeValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHologram.IsChanged
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGHologram::IsChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.IsChanged");

	AFGHologram_IsChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHologram.GetNoSnapMode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGHologram::GetNoSnapMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.GetNoSnapMode");

	AFGHologram_GetNoSnapMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHologram.GetConstructDisqualifiers
// ()
// Parameters:
// TArray<class UClass*>          out_constructResults           (Parm, OutParm, ZeroConstructor)

void AFGHologram::GetConstructDisqualifiers(TArray<class UClass*>* out_constructResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.GetConstructDisqualifiers");

	AFGHologram_GetConstructDisqualifiers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_constructResults != nullptr)
		*out_constructResults = params.out_constructResults;
}


// Function FactoryGame.FGHologram.Client_PlaySnapSound
// ()

void AFGHologram::Client_PlaySnapSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.Client_PlaySnapSound");

	AFGHologram_Client_PlaySnapSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHologram.CanConstruct
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGHologram::CanConstruct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.CanConstruct");

	AFGHologram_CanConstruct_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHologram.AddValidHitClass
// ()
// Parameters:
// class UClass*                  hitClass                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGHologram::AddValidHitClass(class UClass* hitClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.AddValidHitClass");

	AFGHologram_AddValidHitClass_Params params;
	params.hitClass = hitClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableHologram.ReceiveConfigureComponents
// ()
// Parameters:
// class AFGBuildable*            inBuildable                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableHologram::ReceiveConfigureComponents(class AFGBuildable* inBuildable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableHologram.ReceiveConfigureComponents");

	AFGBuildableHologram_ReceiveConfigureComponents_Params params;
	params.inBuildable = inBuildable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableHologram.ReceiveConfigureActor
// ()
// Parameters:
// class AFGBuildable*            inBuildable                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableHologram::ReceiveConfigureActor(class AFGBuildable* inBuildable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableHologram.ReceiveConfigureActor");

	AFGBuildableHologram_ReceiveConfigureActor_Params params;
	params.inBuildable = inBuildable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAttack.GetStopsMovement
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGAttack::GetStopsMovement(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttack.GetStopsMovement");

	UFGAttack_GetStopsMovement_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttack.GetDamageType
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGAttack::GetDamageType(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttack.GetDamageType");

	UFGAttack_GetDamageType_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttack.GetDamage
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGAttack::GetDamage(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttack.GetDamage");

	UFGAttack_GetDamage_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttack.GetAttackRange
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGAttack::GetAttackRange(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttack.GetAttackRange");

	UFGAttack_GetAttackRange_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttack.GetAttackMontage
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* UFGAttack::GetAttackMontage(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttack.GetAttackMontage");

	UFGAttack_GetAttackMontage_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttack.GetAttackAngle
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGAttack::GetAttackAngle(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttack.GetAttackAngle");

	UFGAttack_GetAttackAngle_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttack.GetAttackActivationDistance
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGAttack::GetAttackActivationDistance(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttack.GetAttackActivationDistance");

	UFGAttack_GetAttackActivationDistance_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttackMeleeJump.GetPreJumpMontage
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* UFGAttackMeleeJump::GetPreJumpMontage(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttackMeleeJump.GetPreJumpMontage");

	UFGAttackMeleeJump_GetPreJumpMontage_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttackMeleeJump.GetJumpVelocity
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UFGAttackMeleeJump::GetJumpVelocity(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttackMeleeJump.GetJumpVelocity");

	UFGAttackMeleeJump_GetJumpVelocity_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttackMeleeJump.GetJumpRange
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGAttackMeleeJump::GetJumpRange(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttackMeleeJump.GetJumpRange");

	UFGAttackMeleeJump_GetJumpRange_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttackRanged.SpawnProjectile
// ()
// Parameters:
// class AActor*                  targetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// class AFGEnemy*                sourceActor                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGAttackRanged::SpawnProjectile(class AActor* targetActor, class AFGEnemy* sourceActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttackRanged.SpawnProjectile");

	UFGAttackRanged_SpawnProjectile_Params params;
	params.targetActor = targetActor;
	params.sourceActor = sourceActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAttentionPingActor.SpawnAttentionPingEffects
// ()

void AFGAttentionPingActor::SpawnAttentionPingEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttentionPingActor.SpawnAttentionPingEffects");

	AFGAttentionPingActor_SpawnAttentionPingEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAttentionPingActor.OnRep_PlayerSlotIdx
// ()

void AFGAttentionPingActor::OnRep_PlayerSlotIdx()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttentionPingActor.OnRep_PlayerSlotIdx");

	AFGAttentionPingActor_OnRep_PlayerSlotIdx_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAttentionPingActor.GetPlayerSlotIdx
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGAttentionPingActor::GetPlayerSlotIdx()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttentionPingActor.GetPlayerSlotIdx");

	AFGAttentionPingActor_GetPlayerSlotIdx_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMessageBase.GetMessageDefaultObject
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UFGMessageBase::GetMessageDefaultObject(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMessageBase.GetMessageDefaultObject");

	UFGMessageBase_GetMessageDefaultObject_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAudioMessage.StartPlayback
// ()

void UFGAudioMessage::StartPlayback()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAudioMessage.StartPlayback");

	UFGAudioMessage_StartPlayback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAudioMessage.PlayNextDialogue
// ()

void UFGAudioMessage::PlayNextDialogue()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAudioMessage.PlayNextDialogue");

	UFGAudioMessage_PlayNextDialogue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAudioMessage.GetCurrentDialogue
// ()
// Parameters:
// struct FAudioSubtitlePair      ReturnValue                    (Parm, OutParm, ReturnParm)

struct FAudioSubtitlePair UFGAudioMessage::GetCurrentDialogue()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAudioMessage.GetCurrentDialogue");

	UFGAudioMessage_GetCurrentDialogue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAudioMessage.ContinuePlayback
// ()

void UFGAudioMessage::ContinuePlayback()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAudioMessage.ContinuePlayback");

	UFGAudioMessage_ContinuePlayback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAudioMessage.CancelPlayback
// ()

void UFGAudioMessage::CancelPlayback()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAudioMessage.CancelPlayback");

	UFGAudioMessage_CancelPlayback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAudioMessage.AssignOnConcludedDelegate
// ()
// Parameters:
// struct FScriptDelegate         concludedDelegate              (Parm, ZeroConstructor)

void UFGAudioMessage::AssignOnConcludedDelegate(const struct FScriptDelegate& concludedDelegate)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAudioMessage.AssignOnConcludedDelegate");

	UFGAudioMessage_AssignOnConcludedDelegate_Params params;
	params.concludedDelegate = concludedDelegate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBaseUI.SetPopup
// ()
// Parameters:
// class UFGPopupWidget*          inPopup                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGBaseUI::SetPopup(class UFGPopupWidget* inPopup)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBaseUI.SetPopup");

	UFGBaseUI_SetPopup_Params params;
	params.inPopup = inPopup;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBaseUI.PopPopupQueue
// ()

void UFGBaseUI::PopPopupQueue()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBaseUI.PopPopupQueue");

	UFGBaseUI_PopPopupQueue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBaseUI.GetPopup
// ()
// Parameters:
// class UFGPopupWidget*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPopupWidget* UFGBaseUI::GetPopup()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBaseUI.GetPopup");

	UFGBaseUI_GetPopup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBaseUI.CreatePopupWidget
// ()
// Parameters:
// struct FPopupData              PopupData                      (Parm)
// class UFGPopupWidget*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPopupWidget* UFGBaseUI::CreatePopupWidget(const struct FPopupData& PopupData)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBaseUI.CreatePopupWidget");

	UFGBaseUI_CreatePopupWidget_Params params;
	params.PopupData = PopupData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBaseUI.ClosePopup
// ()

void UFGBaseUI::ClosePopup()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBaseUI.ClosePopup");

	UFGBaseUI_ClosePopup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBaseUI.AddPopup
// ()
// Parameters:
// struct FText                   Title                          (Parm)
// struct FText                   Body                           (Parm)
// struct FScriptDelegate         ConfirmClickDelegate           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<EPopupId>          PopupID                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  PopupClass                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGBaseUI::AddPopup(const struct FText& Title, const struct FText& Body, const struct FScriptDelegate& ConfirmClickDelegate, TEnumAsByte<EPopupId> PopupID, class UClass* PopupClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBaseUI.AddPopup");

	UFGBaseUI_AddPopup_Params params;
	params.Title = Title;
	params.Body = Body;
	params.ConfirmClickDelegate = ConfirmClickDelegate;
	params.PopupID = PopupID;
	params.PopupClass = PopupClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.UpdateUseState
// ()
// Parameters:
// struct FUseState               State                          (Parm, OutParm, ReferenceParm)
// class UClass*                  newState                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::UpdateUseState(class UClass* newState, struct FUseState* State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.UpdateUseState");

	UFGBlueprintFunctionLibrary_UpdateUseState_Params params;
	params.newState = newState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (State != nullptr)
		*State = params.State;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.TravelToMainMenu
// ()
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::TravelToMainMenu(class APlayerController* PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.TravelToMainMenu");

	UFGBlueprintFunctionLibrary_TravelToMainMenu_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.ShowOutline
// ()
// Parameters:
// class UPrimitiveComponent*     comp                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// EOutlineColor                  Color                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::ShowOutline(class UPrimitiveComponent* comp, EOutlineColor Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.ShowOutline");

	UFGBlueprintFunctionLibrary_ShowOutline_Params params;
	params.comp = comp;
	params.Color = Color;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.RemoveGenericTickObjectFromSignificanceManager
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::RemoveGenericTickObjectFromSignificanceManager(class UObject* WorldContextObject, class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.RemoveGenericTickObjectFromSignificanceManager");

	UFGBlueprintFunctionLibrary_RemoveGenericTickObjectFromSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.RemoveGainSignificanceObjectFromSignificanceManager
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::RemoveGainSignificanceObjectFromSignificanceManager(class UObject* WorldContextObject, class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.RemoveGainSignificanceObjectFromSignificanceManager");

	UFGBlueprintFunctionLibrary_RemoveGainSignificanceObjectFromSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.RemoveFactoryObjectFromSignificanceManager
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::RemoveFactoryObjectFromSignificanceManager(class UObject* WorldContextObject, class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.RemoveFactoryObjectFromSignificanceManager");

	UFGBlueprintFunctionLibrary_RemoveFactoryObjectFromSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.RemoveConveyorBeltFromSignificanceManager
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::RemoveConveyorBeltFromSignificanceManager(class UObject* WorldContextObject, class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.RemoveConveyorBeltFromSignificanceManager");

	UFGBlueprintFunctionLibrary_RemoveConveyorBeltFromSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.RemoveAudioVolumeFromSignificanceManager
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::RemoveAudioVolumeFromSignificanceManager(class UObject* WorldContextObject, class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.RemoveAudioVolumeFromSignificanceManager");

	UFGBlueprintFunctionLibrary_RemoveAudioVolumeFromSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.RemoveAmbientSoundSplineFromSignificanceManager
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::RemoveAmbientSoundSplineFromSignificanceManager(class UObject* WorldContextObject, class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.RemoveAmbientSoundSplineFromSignificanceManager");

	UFGBlueprintFunctionLibrary_RemoveAmbientSoundSplineFromSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.LogX
// ()
// Parameters:
// float                          Base                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGBlueprintFunctionLibrary::LogX(float Base, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.LogX");

	UFGBlueprintFunctionLibrary_LogX_Params params;
	params.Base = Base;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.LinearColorToHex
// ()
// Parameters:
// struct FLinearColor            inColor                        (Parm, IsPlainOldData)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGBlueprintFunctionLibrary::LinearColorToHex(const struct FLinearColor& inColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.LinearColorToHex");

	UFGBlueprintFunctionLibrary_LinearColorToHex_Params params;
	params.inColor = inColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.IsLocationNearABase
// ()
// Parameters:
// class UObject*                 WorldContext                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 InLocation                     (Parm, IsPlainOldData)
// float                          closeDistance                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::IsLocationNearABase(class UObject* WorldContext, const struct FVector& InLocation, float closeDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.IsLocationNearABase");

	UFGBlueprintFunctionLibrary_IsLocationNearABase_Params params;
	params.WorldContext = WorldContext;
	params.InLocation = InLocation;
	params.closeDistance = closeDistance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.IsLocallyHumanControlled
// ()
// Parameters:
// class APawn*                   Pawn                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::IsLocallyHumanControlled(class APawn* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.IsLocallyHumanControlled");

	UFGBlueprintFunctionLibrary_IsLocallyHumanControlled_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.IsInAlwaysLoadedLevel
// ()
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::IsInAlwaysLoadedLevel(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.IsInAlwaysLoadedLevel");

	UFGBlueprintFunctionLibrary_IsInAlwaysLoadedLevel_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.IsGameWorld
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::IsGameWorld(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.IsGameWorld");

	UFGBlueprintFunctionLibrary_IsGameWorld_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.IsEditorWorld
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::IsEditorWorld(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.IsEditorWorld");

	UFGBlueprintFunctionLibrary_IsEditorWorld_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.IsAlphaBuild
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::IsAlphaBuild()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.IsAlphaBuild");

	UFGBlueprintFunctionLibrary_IsAlphaBuild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.ImpactEffectIsWithinDistance
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 SpawnLocation                  (Parm, IsPlainOldData)
// float                          visibleCullDistance            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::ImpactEffectIsWithinDistance(class UObject* WorldContext, class APawn* Instigator, const struct FVector& SpawnLocation, float visibleCullDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.ImpactEffectIsWithinDistance");

	UFGBlueprintFunctionLibrary_ImpactEffectIsWithinDistance_Params params;
	params.WorldContext = WorldContext;
	params.Instigator = Instigator;
	params.SpawnLocation = SpawnLocation;
	params.visibleCullDistance = visibleCullDistance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.ImpactEffectIsRelevant
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 SpawnLocation                  (Parm, IsPlainOldData)
// float                          visibleCullDistance            (Parm, ZeroConstructor, IsPlainOldData)
// float                          alwaysSuccessDistance          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           skipLOSCheck                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::ImpactEffectIsRelevant(class UObject* WorldContext, class APawn* Instigator, const struct FVector& SpawnLocation, float visibleCullDistance, float alwaysSuccessDistance, bool skipLOSCheck)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.ImpactEffectIsRelevant");

	UFGBlueprintFunctionLibrary_ImpactEffectIsRelevant_Params params;
	params.WorldContext = WorldContext;
	params.Instigator = Instigator;
	params.SpawnLocation = SpawnLocation;
	params.visibleCullDistance = visibleCullDistance;
	params.alwaysSuccessDistance = alwaysSuccessDistance;
	params.skipLOSCheck = skipLOSCheck;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.HideOutline
// ()
// Parameters:
// class UPrimitiveComponent*     comp                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGBlueprintFunctionLibrary::HideOutline(class UPrimitiveComponent* comp)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.HideOutline");

	UFGBlueprintFunctionLibrary_HideOutline_Params params;
	params.comp = comp;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetVersionString
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGBlueprintFunctionLibrary::GetVersionString()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetVersionString");

	UFGBlueprintFunctionLibrary_GetVersionString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetOuterActor
// ()
// Parameters:
// class UObject*                 Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UFGBlueprintFunctionLibrary::GetOuterActor(class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetOuterActor");

	UFGBlueprintFunctionLibrary_GetOuterActor_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetLanguage
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGBlueprintFunctionLibrary::GetLanguage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetLanguage");

	UFGBlueprintFunctionLibrary_GetLanguage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetAvailableSubCategoriesForCategory
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  buildCategory                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_subCategories              (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGBlueprintFunctionLibrary::GetAvailableSubCategoriesForCategory(class UObject* WorldContext, class UClass* buildCategory, TArray<class UClass*>* out_subCategories)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetAvailableSubCategoriesForCategory");

	UFGBlueprintFunctionLibrary_GetAvailableSubCategoriesForCategory_Params params;
	params.WorldContext = WorldContext;
	params.buildCategory = buildCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_subCategories != nullptr)
		*out_subCategories = params.out_subCategories;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetAvailableRecipesInSubCategory
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  subCategory                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_recipes                    (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGBlueprintFunctionLibrary::GetAvailableRecipesInSubCategory(class UObject* WorldContext, class UClass* subCategory, TArray<class UClass*>* out_recipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetAvailableRecipesInSubCategory");

	UFGBlueprintFunctionLibrary_GetAvailableRecipesInSubCategory_Params params;
	params.WorldContext = WorldContext;
	params.subCategory = subCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_recipes != nullptr)
		*out_recipes = params.out_recipes;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetAvailableRecipesInCategory
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  buildCategory                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_recipes                    (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGBlueprintFunctionLibrary::GetAvailableRecipesInCategory(class UObject* WorldContext, class UClass* buildCategory, TArray<class UClass*>* out_recipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetAvailableRecipesInCategory");

	UFGBlueprintFunctionLibrary_GetAvailableRecipesInCategory_Params params;
	params.WorldContext = WorldContext;
	params.buildCategory = buildCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_recipes != nullptr)
		*out_recipes = params.out_recipes;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetAllWidgetsOfClassInHierarchy
// ()
// Parameters:
// class UWidget*                 hierarchyContext               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UClass*                  WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UWidget*>         FoundWidgets                   (Parm, OutParm, ZeroConstructor)

void UFGBlueprintFunctionLibrary::GetAllWidgetsOfClassInHierarchy(class UWidget* hierarchyContext, class UClass* WidgetClass, TArray<class UWidget*>* FoundWidgets)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetAllWidgetsOfClassInHierarchy");

	UFGBlueprintFunctionLibrary_GetAllWidgetsOfClassInHierarchy_Params params;
	params.hierarchyContext = hierarchyContext;
	params.WidgetClass = WidgetClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (FoundWidgets != nullptr)
		*FoundWidgets = params.FoundWidgets;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetAllDescriptorsSorted
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_descriptors                (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGBlueprintFunctionLibrary::GetAllDescriptorsSorted(class UObject* WorldContext, TArray<class UClass*>* out_descriptors)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetAllDescriptorsSorted");

	UFGBlueprintFunctionLibrary_GetAllDescriptorsSorted_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_descriptors != nullptr)
		*out_descriptors = params.out_descriptors;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetAllBuildCategories
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_buildCategories            (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGBlueprintFunctionLibrary::GetAllBuildCategories(class UObject* WorldContext, TArray<class UClass*>* out_buildCategories)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetAllBuildCategories");

	UFGBlueprintFunctionLibrary_GetAllBuildCategories_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_buildCategories != nullptr)
		*out_buildCategories = params.out_buildCategories;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.CreateSessionAndTravelToMap
// ()
// Parameters:
// class APlayerController*       Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  mapName                        (Parm, ZeroConstructor)
// class FString                  options                        (Parm, ZeroConstructor)
// class FString                  SessionName                    (Parm, ZeroConstructor)
// TEnumAsByte<ESessionVisibility> sessionVisibility              (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::CreateSessionAndTravelToMap(class APlayerController* Player, const class FString& mapName, const class FString& options, const class FString& SessionName, TEnumAsByte<ESessionVisibility> sessionVisibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.CreateSessionAndTravelToMap");

	UFGBlueprintFunctionLibrary_CreateSessionAndTravelToMap_Params params;
	params.Player = Player;
	params.mapName = mapName;
	params.options = options;
	params.SessionName = SessionName;
	params.sessionVisibility = sessionVisibility;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.CmS2KmH
// ()
// Parameters:
// float                          CmS                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGBlueprintFunctionLibrary::CmS2KmH(float CmS)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.CmS2KmH");

	UFGBlueprintFunctionLibrary_CmS2KmH_Params params;
	params.CmS = CmS;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.ClosePopup
// ()
// Parameters:
// class APlayerController*       Controller                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::ClosePopup(class APlayerController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.ClosePopup");

	UFGBlueprintFunctionLibrary_ClosePopup_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.Cheat_GetAllDescriptors
// ()
// Parameters:
// TArray<class UClass*>          out_descriptors                (Parm, OutParm, ZeroConstructor)

void UFGBlueprintFunctionLibrary::Cheat_GetAllDescriptors(TArray<class UClass*>* out_descriptors)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.Cheat_GetAllDescriptors");

	UFGBlueprintFunctionLibrary_Cheat_GetAllDescriptors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_descriptors != nullptr)
		*out_descriptors = params.out_descriptors;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.ChangeLanguage
// ()
// Parameters:
// class FString                  Target                         (Parm, ZeroConstructor)

void UFGBlueprintFunctionLibrary::ChangeLanguage(const class FString& Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.ChangeLanguage");

	UFGBlueprintFunctionLibrary_ChangeLanguage_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.CanBeOnConveyor
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::CanBeOnConveyor(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.CanBeOnConveyor");

	UFGBlueprintFunctionLibrary_CanBeOnConveyor_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddPopupWithCloseDelegate
// ()
// Parameters:
// class APlayerController*       Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   Title                          (Parm)
// struct FText                   Body                           (Parm)
// struct FScriptDelegate         CloseDelegate                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<EPopupId>          PopupID                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  PopupClass                     (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 popupInstigator                (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::AddPopupWithCloseDelegate(class APlayerController* Controller, const struct FText& Title, const struct FText& Body, const struct FScriptDelegate& CloseDelegate, TEnumAsByte<EPopupId> PopupID, class UClass* PopupClass, class UObject* popupInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddPopupWithCloseDelegate");

	UFGBlueprintFunctionLibrary_AddPopupWithCloseDelegate_Params params;
	params.Controller = Controller;
	params.Title = Title;
	params.Body = Body;
	params.CloseDelegate = CloseDelegate;
	params.PopupID = PopupID;
	params.PopupClass = PopupClass;
	params.popupInstigator = popupInstigator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddPopup
// ()
// Parameters:
// class APlayerController*       Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   Title                          (Parm)
// struct FText                   Body                           (Parm)
// struct FScriptDelegate         ConfirmClickDelegate           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<EPopupId>          PopupID                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  PopupClass                     (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 popupInstigator                (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::AddPopup(class APlayerController* Controller, const struct FText& Title, const struct FText& Body, const struct FScriptDelegate& ConfirmClickDelegate, TEnumAsByte<EPopupId> PopupID, class UClass* PopupClass, class UObject* popupInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddPopup");

	UFGBlueprintFunctionLibrary_AddPopup_Params params;
	params.Controller = Controller;
	params.Title = Title;
	params.Body = Body;
	params.ConfirmClickDelegate = ConfirmClickDelegate;
	params.PopupID = PopupID;
	params.PopupClass = PopupClass;
	params.popupInstigator = popupInstigator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddGenericTickObjectToSignificanceManager
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::AddGenericTickObjectToSignificanceManager(class UObject* WorldContextObject, class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddGenericTickObjectToSignificanceManager");

	UFGBlueprintFunctionLibrary_AddGenericTickObjectToSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddGainSignificanceObjectToSignificanceManager
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          desiredGainDistance            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::AddGainSignificanceObjectToSignificanceManager(class UObject* WorldContextObject, class UObject* Obj, float desiredGainDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddGainSignificanceObjectToSignificanceManager");

	UFGBlueprintFunctionLibrary_AddGainSignificanceObjectToSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;
	params.desiredGainDistance = desiredGainDistance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddFactoryObjectToSignificanceManager
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::AddFactoryObjectToSignificanceManager(class UObject* WorldContextObject, class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddFactoryObjectToSignificanceManager");

	UFGBlueprintFunctionLibrary_AddFactoryObjectToSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddConveyorBeltToSignificanceManager
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::AddConveyorBeltToSignificanceManager(class UObject* WorldContextObject, class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddConveyorBeltToSignificanceManager");

	UFGBlueprintFunctionLibrary_AddConveyorBeltToSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddAudioVolumeToSignificanceManager
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::AddAudioVolumeToSignificanceManager(class UObject* WorldContextObject, class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddAudioVolumeToSignificanceManager");

	UFGBlueprintFunctionLibrary_AddAudioVolumeToSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddAmbientSoundSplineToSignificanceManager
// ()
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::AddAmbientSoundSplineToSignificanceManager(class UObject* WorldContextObject, class UObject* Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddAmbientSoundSplineToSignificanceManager");

	UFGBlueprintFunctionLibrary_AddAmbientSoundSplineToSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.ShowHighlightEffect
// ()

void AFGBuildable::ShowHighlightEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.ShowHighlightEffect");

	AFGBuildable_ShowHighlightEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.RemoveHighlightEffect
// ()

void AFGBuildable::RemoveHighlightEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.RemoveHighlightEffect");

	AFGBuildable_RemoveHighlightEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.ReapplyColorSlot
// ()

void AFGBuildable::ReapplyColorSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.ReapplyColorSlot");

	AFGBuildable_ReapplyColorSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.PlayDismantleSound
// ()

void AFGBuildable::PlayDismantleSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.PlayDismantleSound");

	AFGBuildable_PlayDismantleSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.PlayDismantleEffects
// ()

void AFGBuildable::PlayDismantleEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.PlayDismantleEffects");

	AFGBuildable_PlayDismantleEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.PlayConstructSound
// ()

void AFGBuildable::PlayConstructSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.PlayConstructSound");

	AFGBuildable_PlayConstructSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.PlayBuildEffects
// ()
// Parameters:
// class AActor*                  inInstigator                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildable::PlayBuildEffects(class AActor* inInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.PlayBuildEffects");

	AFGBuildable_PlayBuildEffects_Params params;
	params.inInstigator = inInstigator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.OnRep_SecondaryColor
// ()

void AFGBuildable::OnRep_SecondaryColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.OnRep_SecondaryColor");

	AFGBuildable_OnRep_SecondaryColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.OnRep_PrimaryColor
// ()

void AFGBuildable::OnRep_PrimaryColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.OnRep_PrimaryColor");

	AFGBuildable_OnRep_PrimaryColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.OnRep_DidFirstTimeUse
// ()

void AFGBuildable::OnRep_DidFirstTimeUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.OnRep_DidFirstTimeUse");

	AFGBuildable_OnRep_DidFirstTimeUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.OnRep_ColorSlot
// ()

void AFGBuildable::OnRep_ColorSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.OnRep_ColorSlot");

	AFGBuildable_OnRep_ColorSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.GetNumPowerConnections
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AFGBuildable::GetNumPowerConnections()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.GetNumPowerConnections");

	AFGBuildable_GetNumPowerConnections_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildable.GetMainMeshes
// ()
// Parameters:
// TArray<class UMeshComponent*>  ReturnValue                    (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UMeshComponent*> AFGBuildable::GetMainMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.GetMainMeshes");

	AFGBuildable_GetMainMeshes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildable.GetInteractWidgetClass
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGBuildable::GetInteractWidgetClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.GetInteractWidgetClass");

	AFGBuildable_GetInteractWidgetClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildable.GetDismantleBlueprintReturns
// ()
// Parameters:
// TArray<struct FInventoryStack> out_returns                    (Parm, OutParm, ZeroConstructor)

void AFGBuildable::GetDismantleBlueprintReturns(TArray<struct FInventoryStack>* out_returns)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.GetDismantleBlueprintReturns");

	AFGBuildable_GetDismantleBlueprintReturns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_returns != nullptr)
		*out_returns = params.out_returns;
}


// Function FactoryGame.FGBuildable.GetClearanceComponent
// ()
// Parameters:
// class UShapeComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UShapeComponent* AFGBuildable::GetClearanceComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.GetClearanceComponent");

	AFGBuildable_GetClearanceComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildable.Factory_ReceiveTick
// ()
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildable::Factory_ReceiveTick(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.Factory_ReceiveTick");

	AFGBuildable_Factory_ReceiveTick_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.Factory_PeekOutput
// ()
// Parameters:
// class UFGFactoryConnectionComponent* Connection                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<struct FInventoryItem>  out_items                      (Parm, OutParm, ZeroConstructor)
// class UClass*                  Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildable::Factory_PeekOutput(class UFGFactoryConnectionComponent* Connection, class UClass* Type, TArray<struct FInventoryItem>* out_items)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.Factory_PeekOutput");

	AFGBuildable_Factory_PeekOutput_Params params;
	params.Connection = Connection;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_items != nullptr)
		*out_items = params.out_items;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildable.Factory_GrabOutput
// ()
// Parameters:
// class UFGFactoryConnectionComponent* Connection                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FInventoryItem          out_item                       (Parm, OutParm)
// float                          out_OffsetBeyond               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildable::Factory_GrabOutput(class UFGFactoryConnectionComponent* Connection, class UClass* Type, struct FInventoryItem* out_item, float* out_OffsetBeyond)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.Factory_GrabOutput");

	AFGBuildable_Factory_GrabOutput_Params params;
	params.Connection = Connection;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_item != nullptr)
		*out_item = params.out_item;
	if (out_OffsetBeyond != nullptr)
		*out_OffsetBeyond = params.out_OffsetBeyond;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.StopProductionLoopEffects
// ()

void AFGBuildableFactory::StopProductionLoopEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.StopProductionLoopEffects");

	AFGBuildableFactory_StopProductionLoopEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.StopIdlingLoopEffects
// ()

void AFGBuildableFactory::StopIdlingLoopEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.StopIdlingLoopEffects");

	AFGBuildableFactory_StopIdlingLoopEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.StartProductionLoopEffects
// ()

void AFGBuildableFactory::StartProductionLoopEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.StartProductionLoopEffects");

	AFGBuildableFactory_StartProductionLoopEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.StartIdlingLoopEffects
// ()

void AFGBuildableFactory::StartIdlingLoopEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.StartIdlingLoopEffects");

	AFGBuildableFactory_StartIdlingLoopEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.SetPendingPotential
// ()
// Parameters:
// float                          newPendingPotential            (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::SetPendingPotential(float newPendingPotential)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.SetPendingPotential");

	AFGBuildableFactory_SetPendingPotential_Params params;
	params.newPendingPotential = newPendingPotential;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.SetIsProductionPaused
// ()
// Parameters:
// bool                           IsPaused                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::SetIsProductionPaused(bool IsPaused)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.SetIsProductionPaused");

	AFGBuildableFactory_SetIsProductionPaused_Params params;
	params.IsPaused = IsPaused;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.RunsOnPower
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableFactory::RunsOnPower()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.RunsOnPower");

	AFGBuildableFactory_RunsOnPower_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.ReceiveUpdateEffects
// ()
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::ReceiveUpdateEffects(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.ReceiveUpdateEffects");

	AFGBuildableFactory_ReceiveUpdateEffects_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.OnRep_IsProducing
// ()

void AFGBuildableFactory::OnRep_IsProducing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.OnRep_IsProducing");

	AFGBuildableFactory_OnRep_IsProducing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.OnPotentialInventoryItemRemoved
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            numRemoved                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::OnPotentialInventoryItemRemoved(class UClass* ItemClass, int numRemoved)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.OnPotentialInventoryItemRemoved");

	AFGBuildableFactory_OnPotentialInventoryItemRemoved_Params params;
	params.ItemClass = ItemClass;
	params.numRemoved = numRemoved;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.OnIsProducingChanged
// ()
// Parameters:
// bool                           newIsProducing                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::OnIsProducingChanged(bool newIsProducing)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.OnIsProducingChanged");

	AFGBuildableFactory_OnIsProducingChanged_Params params;
	params.newIsProducing = newIsProducing;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.OnHasPowerChanged
// ()
// Parameters:
// bool                           newHasPower                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::OnHasPowerChanged(bool newHasPower)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.OnHasPowerChanged");

	AFGBuildableFactory_OnHasPowerChanged_Params params;
	params.newHasPower = newHasPower;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.IsProductionPaused
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableFactory::IsProductionPaused()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.IsProductionPaused");

	AFGBuildableFactory_IsProductionPaused_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.IsProducing
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableFactory::IsProducing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.IsProducing");

	AFGBuildableFactory_IsProducing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.IsConfigured
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableFactory::IsConfigured()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.IsConfigured");

	AFGBuildableFactory_IsConfigured_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.HasPower
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableFactory::HasPower()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.HasPower");

	AFGBuildableFactory_HasPower_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetProductivity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetProductivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetProductivity");

	AFGBuildableFactory_GetProductivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetProductionProgress
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetProductionProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetProductionProgress");

	AFGBuildableFactory_GetProductionProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetProductionIndicatorStatus
// ()
// Parameters:
// EProductionStatus              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EProductionStatus AFGBuildableFactory::GetProductionIndicatorStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetProductionIndicatorStatus");

	AFGBuildableFactory_GetProductionIndicatorStatus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetProductionCycleTimeForRecipe
// ()
// Parameters:
// class UClass*                  Recipe                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetProductionCycleTimeForRecipe(class UClass* Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetProductionCycleTimeForRecipe");

	AFGBuildableFactory_GetProductionCycleTimeForRecipe_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetProductionCycleTime
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetProductionCycleTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetProductionCycleTime");

	AFGBuildableFactory_GetProductionCycleTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetProducingPowerConsumption
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetProducingPowerConsumption()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetProducingPowerConsumption");

	AFGBuildableFactory_GetProducingPowerConsumption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetPowerInfo
// ()
// Parameters:
// class UFGPowerInfoComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPowerInfoComponent* AFGBuildableFactory::GetPowerInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetPowerInfo");

	AFGBuildableFactory_GetPowerInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetPotentialInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableFactory::GetPotentialInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetPotentialInventory");

	AFGBuildableFactory_GetPotentialInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetPendingPotential
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetPendingPotential()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetPendingPotential");

	AFGBuildableFactory_GetPendingPotential_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetMinPotential
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetMinPotential()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetMinPotential");

	AFGBuildableFactory_GetMinPotential_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetMaxPossiblePotential
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetMaxPossiblePotential()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetMaxPossiblePotential");

	AFGBuildableFactory_GetMaxPossiblePotential_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetIsSignificant
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableFactory::GetIsSignificant()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetIsSignificant");

	AFGBuildableFactory_GetIsSignificant_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetDefaultProductionCycleTime
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetDefaultProductionCycleTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetDefaultProductionCycleTime");

	AFGBuildableFactory_GetDefaultProductionCycleTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetDefaultProducingPowerConsumption
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetDefaultProducingPowerConsumption()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetDefaultProducingPowerConsumption");

	AFGBuildableFactory_GetDefaultProducingPowerConsumption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetCurrentPotential
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetCurrentPotential()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetCurrentPotential");

	AFGBuildableFactory_GetCurrentPotential_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetCurrentMaxPotential
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetCurrentMaxPotential()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetCurrentMaxPotential");

	AFGBuildableFactory_GetCurrentMaxPotential_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetConnectionComponents
// ()
// Parameters:
// TArray<class UFGFactoryConnectionComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UFGFactoryConnectionComponent*> AFGBuildableFactory::GetConnectionComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetConnectionComponents");

	AFGBuildableFactory_GetConnectionComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetCanChangePotential
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableFactory::GetCanChangePotential()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetCanChangePotential");

	AFGBuildableFactory_GetCanChangePotential_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.Factory_ReceiveTickProducing
// ()
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::Factory_ReceiveTickProducing(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.Factory_ReceiveTickProducing");

	AFGBuildableFactory_Factory_ReceiveTickProducing_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.Factory_ReceiveStopProducing
// ()

void AFGBuildableFactory::Factory_ReceiveStopProducing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.Factory_ReceiveStopProducing");

	AFGBuildableFactory_Factory_ReceiveStopProducing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.Factory_ReceiveStartProducing
// ()

void AFGBuildableFactory::Factory_ReceiveStartProducing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.Factory_ReceiveStartProducing");

	AFGBuildableFactory_Factory_ReceiveStartProducing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.Factory_CollectInput
// ()

void AFGBuildableFactory::Factory_CollectInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.Factory_CollectInput");

	AFGBuildableFactory_Factory_CollectInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.CanProduce
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableFactory::CanProduce()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.CanProduce");

	AFGBuildableFactory_CanProduce_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.CalcProductionCycleTimeForPotential
// ()
// Parameters:
// float                          potential                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::CalcProductionCycleTimeForPotential(float potential)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.CalcProductionCycleTimeForPotential");

	AFGBuildableFactory_CalcProductionCycleTimeForPotential_Params params;
	params.potential = potential;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.CalcProducingPowerConsumptionForPotential
// ()
// Parameters:
// float                          potential                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::CalcProducingPowerConsumptionForPotential(float potential)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.CalcProducingPowerConsumptionForPotential");

	AFGBuildableFactory_CalcProducingPowerConsumptionForPotential_Params params;
	params.potential = potential;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableManufacturer.SetRecipe
// ()
// Parameters:
// class UClass*                  Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableManufacturer::SetRecipe(class UClass* Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.SetRecipe");

	AFGBuildableManufacturer_SetRecipe_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableManufacturer.OnRep_CurrentRecipe
// ()

void AFGBuildableManufacturer::OnRep_CurrentRecipe()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.OnRep_CurrentRecipe");

	AFGBuildableManufacturer_OnRep_CurrentRecipe_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableManufacturer.MoveOrDropOutputInventory
// ()
// Parameters:
// class AFGCharacterPlayer*      Pawn                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableManufacturer::MoveOrDropOutputInventory(class AFGCharacterPlayer* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.MoveOrDropOutputInventory");

	AFGBuildableManufacturer_MoveOrDropOutputInventory_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableManufacturer.MoveOrDropInputInventory
// ()
// Parameters:
// class AFGCharacterPlayer*      Pawn                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableManufacturer::MoveOrDropInputInventory(class AFGCharacterPlayer* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.MoveOrDropInputInventory");

	AFGBuildableManufacturer_MoveOrDropInputInventory_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableManufacturer.GetOutputInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableManufacturer::GetOutputInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.GetOutputInventory");

	AFGBuildableManufacturer_GetOutputInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableManufacturer.GetManufacturingSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableManufacturer::GetManufacturingSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.GetManufacturingSpeed");

	AFGBuildableManufacturer_GetManufacturingSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableManufacturer.GetInputInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableManufacturer::GetInputInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.GetInputInventory");

	AFGBuildableManufacturer_GetInputInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableManufacturer.GetCurrentRecipe
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGBuildableManufacturer::GetCurrentRecipe()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.GetCurrentRecipe");

	AFGBuildableManufacturer_GetCurrentRecipe_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableManufacturer.GetAvailableRecipes
// ()
// Parameters:
// TArray<class UClass*>          out_recipes                    (Parm, OutParm, ZeroConstructor)

void AFGBuildableManufacturer::GetAvailableRecipes(TArray<class UClass*>* out_recipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.GetAvailableRecipes");

	AFGBuildableManufacturer_GetAvailableRecipes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_recipes != nullptr)
		*out_recipes = params.out_recipes;
}


// Function FactoryGame.FGBuildableAutomatedWorkBench.SetManufacturingSpeed
// ()
// Parameters:
// float                          newManufacturingSpeed          (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableAutomatedWorkBench::SetManufacturingSpeed(float newManufacturingSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableAutomatedWorkBench.SetManufacturingSpeed");

	AFGBuildableAutomatedWorkBench_SetManufacturingSpeed_Params params;
	params.newManufacturingSpeed = newManufacturingSpeed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableConverter.SetupItemFilter
// ()

void AFGBuildableConverter::SetupItemFilter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableConverter.SetupItemFilter");

	AFGBuildableConverter_SetupItemFilter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableConverter.GetNumberOfInputs
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildableConverter::GetNumberOfInputs()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableConverter.GetNumberOfInputs");

	AFGBuildableConverter_GetNumberOfInputs_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableConverter.FilterIngredientClasses
// ()
// Parameters:
// class UClass*                  Object                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableConverter::FilterIngredientClasses(class UClass* Object, int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableConverter.FilterIngredientClasses");

	AFGBuildableConverter_FilterIngredientClasses_Params params;
	params.Object = Object;
	params.idx = idx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableConveyorBelt.GetSplineMesh
// ()
// Parameters:
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* AFGBuildableConveyorBelt::GetSplineMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableConveyorBelt.GetSplineMesh");

	AFGBuildableConveyorBelt_GetSplineMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableConveyorBelt.GetSplineData
// ()
// Parameters:
// TArray<struct FSplinePointData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FSplinePointData> AFGBuildableConveyorBelt::GetSplineData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableConveyorBelt.GetSplineData");

	AFGBuildableConveyorBelt_GetSplineData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableConveyorBelt.GetSplineComponent
// ()
// Parameters:
// class UFGSplineComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGSplineComponent* AFGBuildableConveyorBelt::GetSplineComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableConveyorBelt.GetSplineComponent");

	AFGBuildableConveyorBelt_GetSplineComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableConveyorBelt.GetIsSignificant
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableConveyorBelt::GetIsSignificant()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableConveyorBelt.GetIsSignificant");

	AFGBuildableConveyorBelt_GetIsSignificant_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableDecor.SetDecorMesh
// ()
// Parameters:
// class UStaticMesh*             Mesh                           (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableDecor::SetDecorMesh(class UStaticMesh* Mesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDecor.SetDecorMesh");

	AFGBuildableDecor_SetDecorMesh_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableDecor.GetDecorMesh
// ()
// Parameters:
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* AFGBuildableDecor::GetDecorMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDecor.GetDecorMesh");

	AFGBuildableDecor_GetDecorMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableDockingStation.Undock
// ()

void AFGBuildableDockingStation::Undock()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.Undock");

	AFGBuildableDockingStation_Undock_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableDockingStation.SetIsInLoadMode
// ()
// Parameters:
// bool                           isInLoadMode                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableDockingStation::SetIsInLoadMode(bool isInLoadMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.SetIsInLoadMode");

	AFGBuildableDockingStation_SetIsInLoadMode_Params params;
	params.isInLoadMode = isInLoadMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableDockingStation.OnTransferComplete
// ()

void AFGBuildableDockingStation::OnTransferComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.OnTransferComplete");

	AFGBuildableDockingStation_OnTransferComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableDockingStation.OnRep_FuelInventory
// ()

void AFGBuildableDockingStation::OnRep_FuelInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.OnRep_FuelInventory");

	AFGBuildableDockingStation_OnRep_FuelInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableDockingStation.OnBeginUnloadVehicle
// ()

void AFGBuildableDockingStation::OnBeginUnloadVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.OnBeginUnloadVehicle");

	AFGBuildableDockingStation_OnBeginUnloadVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableDockingStation.OnBeginLoadVehicle
// ()

void AFGBuildableDockingStation::OnBeginLoadVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.OnBeginLoadVehicle");

	AFGBuildableDockingStation_OnBeginLoadVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableDockingStation.IsLoadUnloading
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableDockingStation::IsLoadUnloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.IsLoadUnloading");

	AFGBuildableDockingStation_IsLoadUnloading_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableDockingStation.GetIsInLoadMode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableDockingStation::GetIsInLoadMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.GetIsInLoadMode");

	AFGBuildableDockingStation_GetIsInLoadMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableDockingStation.GetInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableDockingStation::GetInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.GetInventory");

	AFGBuildableDockingStation_GetInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableDockingStation.GetFuelInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableDockingStation::GetFuelInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.GetFuelInventory");

	AFGBuildableDockingStation_GetFuelInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableDockingStation.GetDockedActor
// ()
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AFGBuildableDockingStation::GetDockedActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.GetDockedActor");

	AFGBuildableDockingStation_GetDockedActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableDockingStation.FilterFuelClasses
// ()
// Parameters:
// class UClass*                  Object                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableDockingStation::FilterFuelClasses(class UClass* Object, int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.FilterFuelClasses");

	AFGBuildableDockingStation_FilterFuelClasses_Params params;
	params.Object = Object;
	params.idx = idx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableDockingStation.Dock
// ()
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableDockingStation::Dock(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.Dock");

	AFGBuildableDockingStation_Dock_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGenerator.IsFuseTriggered
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableGenerator::IsFuseTriggered()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.IsFuseTriggered");

	AFGBuildableGenerator_IsFuseTriggered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGenerator.GetPowerProductionCapacity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableGenerator::GetPowerProductionCapacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.GetPowerProductionCapacity");

	AFGBuildableGenerator_GetPowerProductionCapacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGenerator.GetLoadPercentage
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableGenerator::GetLoadPercentage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.GetLoadPercentage");

	AFGBuildableGenerator_GetLoadPercentage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGenerator.GetDefaultPowerProductionCapacity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableGenerator::GetDefaultPowerProductionCapacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.GetDefaultPowerProductionCapacity");

	AFGBuildableGenerator_GetDefaultPowerProductionCapacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGenerator.Factory_TickPowerProduction
// ()
// Parameters:
// float                          dt                             (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableGenerator::Factory_TickPowerProduction(float dt)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.Factory_TickPowerProduction");

	AFGBuildableGenerator_Factory_TickPowerProduction_Params params;
	params.dt = dt;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableGenerator.Factory_StopPowerProduction
// ()

void AFGBuildableGenerator::Factory_StopPowerProduction()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.Factory_StopPowerProduction");

	AFGBuildableGenerator_Factory_StopPowerProduction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableGenerator.Factory_StartPowerProduction
// ()

void AFGBuildableGenerator::Factory_StartPowerProduction()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.Factory_StartPowerProduction");

	AFGBuildableGenerator_Factory_StartPowerProduction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableGenerator.CanStartPowerProduction
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableGenerator::CanStartPowerProduction()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.CanStartPowerProduction");

	AFGBuildableGenerator_CanStartPowerProduction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGenerator.CalcPowerProductionCapacityForPotential
// ()
// Parameters:
// float                          potential                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableGenerator::CalcPowerProductionCapacityForPotential(float potential)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.CalcPowerProductionCapacityForPotential");

	AFGBuildableGenerator_CalcPowerProductionCapacityForPotential_Params params;
	params.potential = potential;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.OnRep_FuelInventory
// ()

void AFGBuildableGeneratorFuel::OnRep_FuelInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.OnRep_FuelInventory");

	AFGBuildableGeneratorFuel_OnRep_FuelInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableGeneratorFuel.IsValidFuel
// ()
// Parameters:
// class UClass*                  Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableGeneratorFuel::IsValidFuel(class UClass* Resource)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.IsValidFuel");

	AFGBuildableGeneratorFuel_IsValidFuel_Params params;
	params.Resource = Resource;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.HasFuel
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableGeneratorFuel::HasFuel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.HasFuel");

	AFGBuildableGeneratorFuel_HasFuel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.GetFuelInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableGeneratorFuel::GetFuelInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.GetFuelInventory");

	AFGBuildableGeneratorFuel_GetFuelInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.GetFuelAmount
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableGeneratorFuel::GetFuelAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.GetFuelAmount");

	AFGBuildableGeneratorFuel_GetFuelAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.FilterFuelClasses
// ()
// Parameters:
// class UClass*                  Object                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableGeneratorFuel::FilterFuelClasses(class UClass* Object, int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.FilterFuelClasses");

	AFGBuildableGeneratorFuel_FilterFuelClasses_Params params;
	params.Object = Object;
	params.idx = idx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableHubTerminal.GetTradingPost
// ()
// Parameters:
// class AFGBuildableTradingPost* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGBuildableTradingPost* AFGBuildableHubTerminal::GetTradingPost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableHubTerminal.GetTradingPost");

	AFGBuildableHubTerminal_GetTradingPost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePoweredWall.GetFoundationConnection
// ()
// Parameters:
// class UFGPowerConnectionComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPowerConnectionComponent* AFGBuildablePoweredWall::GetFoundationConnection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePoweredWall.GetFoundationConnection");

	AFGBuildablePoweredWall_GetFoundationConnection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePowerPole.GetPowerConnection
// ()
// Parameters:
// class UFGPowerConnectionComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPowerConnectionComponent* AFGBuildablePowerPole::GetPowerConnection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePowerPole.GetPowerConnection");

	AFGBuildablePowerPole_GetPowerConnection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePowerPole.GetPowerCircuit
// ()
// Parameters:
// class UFGPowerCircuit*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGPowerCircuit* AFGBuildablePowerPole::GetPowerCircuit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePowerPole.GetPowerCircuit");

	AFGBuildablePowerPole_GetPowerCircuit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePowerPole.GetCachedNumConnections
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildablePowerPole::GetCachedNumConnections()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePowerPole.GetCachedNumConnections");

	AFGBuildablePowerPole_GetCachedNumConnections_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRadarTower.Multicast_ExpandRadarRadius
// ()

void AFGBuildableRadarTower::Multicast_ExpandRadarRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRadarTower.Multicast_ExpandRadarRadius");

	AFGBuildableRadarTower_Multicast_ExpandRadarRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableRadarTower.GetTimeToNextExpansion
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableRadarTower::GetTimeToNextExpansion()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRadarTower.GetTimeToNextExpansion");

	AFGBuildableRadarTower_GetTimeToNextExpansion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRadarTower.GetNumRadarExpansionSteps
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildableRadarTower::GetNumRadarExpansionSteps()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRadarTower.GetNumRadarExpansionSteps");

	AFGBuildableRadarTower_GetNumRadarExpansionSteps_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRadarTower.GetMinRevealRadius
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableRadarTower::GetMinRevealRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRadarTower.GetMinRevealRadius");

	AFGBuildableRadarTower_GetMinRevealRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRadarTower.GetMaxRevealRadius
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableRadarTower::GetMaxRevealRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRadarTower.GetMaxRevealRadius");

	AFGBuildableRadarTower_GetMaxRevealRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRadarTower.GetCurrentRevealRadius
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableRadarTower::GetCurrentRevealRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRadarTower.GetCurrentRevealRadius");

	AFGBuildableRadarTower_GetCurrentRevealRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRadarTower.GetCurrentExpansionStep
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildableRadarTower::GetCurrentExpansionStep()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRadarTower.GetCurrentExpansionStep");

	AFGBuildableRadarTower_GetCurrentExpansionStep_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRailroadBridge.GetLength
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableRailroadBridge::GetLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRailroadBridge.GetLength");

	AFGBuildableRailroadBridge_GetLength_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRailroadStation.SetName
// ()
// Parameters:
// struct FText                   Name                           (ConstParm, Parm, OutParm, ReferenceParm)

void AFGBuildableRailroadStation::SetName(const struct FText& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRailroadStation.SetName");

	AFGBuildableRailroadStation_SetName_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableRailroadStation.OnRep_Name
// ()

void AFGBuildableRailroadStation::OnRep_Name()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRailroadStation.OnRep_Name");

	AFGBuildableRailroadStation_OnRep_Name_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableRailroadStation.OnNameChanged
// ()

void AFGBuildableRailroadStation::OnNameChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRailroadStation.OnNameChanged");

	AFGBuildableRailroadStation_OnNameChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableRailroadStation.GetName
// ()
// Parameters:
// struct FText                   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FText AFGBuildableRailroadStation::GetName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRailroadStation.GetName");

	AFGBuildableRailroadStation_GetName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRailroadSwitchControl.GetSwitchPosition
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildableRailroadSwitchControl::GetSwitchPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRailroadSwitchControl.GetSwitchPosition");

	AFGBuildableRailroadSwitchControl_GetSwitchPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableResourceExtractor.IsStartupComplete
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableResourceExtractor::IsStartupComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceExtractor.IsStartupComplete");

	AFGBuildableResourceExtractor_IsStartupComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableResourceExtractor.GetResourceNode
// ()
// Parameters:
// class AFGResourceNode*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGResourceNode* AFGBuildableResourceExtractor::GetResourceNode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceExtractor.GetResourceNode");

	AFGBuildableResourceExtractor_GetResourceNode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableResourceExtractor.GetOutputInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableResourceExtractor::GetOutputInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceExtractor.GetOutputInventory");

	AFGBuildableResourceExtractor_GetOutputInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableResourceExtractor.GetMiningParticle
// ()
// Parameters:
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* AFGBuildableResourceExtractor::GetMiningParticle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceExtractor.GetMiningParticle");

	AFGBuildableResourceExtractor_GetMiningParticle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSignWall.SetSignData
// ()
// Parameters:
// struct FSignWallData           signData                       (Parm)
// bool                           bUpdate                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableSignWall::SetSignData(const struct FSignWallData& signData, bool bUpdate)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSignWall.SetSignData");

	AFGBuildableSignWall_SetSignData_Params params;
	params.signData = signData;
	params.bUpdate = bUpdate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSignWall.OnRep_SignData
// ()

void AFGBuildableSignWall::OnRep_SignData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSignWall.OnRep_SignData");

	AFGBuildableSignWall_OnRep_SignData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSignWall.GetSignData
// ()
// Parameters:
// struct FSignWallData           ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FSignWallData AFGBuildableSignWall::GetSignData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSignWall.GetSignData");

	AFGBuildableSignWall_GetSignData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSpaceElevator.UpgradeTowTruck
// ()

void AFGBuildableSpaceElevator::UpgradeTowTruck()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSpaceElevator.UpgradeTowTruck");

	AFGBuildableSpaceElevator_UpgradeTowTruck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSpaceElevator.PayOffFromInventory
// ()
// Parameters:
// class UFGInventoryComponent*   inventory                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            inventorySlotIndex             (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableSpaceElevator::PayOffFromInventory(class UFGInventoryComponent* inventory, int inventorySlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSpaceElevator.PayOffFromInventory");

	AFGBuildableSpaceElevator_PayOffFromInventory_Params params;
	params.inventory = inventory;
	params.inventorySlotIndex = inventorySlotIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSpaceElevator.LaunchTowTruck
// ()

void AFGBuildableSpaceElevator::LaunchTowTruck()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSpaceElevator.LaunchTowTruck");

	AFGBuildableSpaceElevator_LaunchTowTruck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSpaceElevator.IsReadyToUpgrade
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableSpaceElevator::IsReadyToUpgrade()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSpaceElevator.IsReadyToUpgrade");

	AFGBuildableSpaceElevator_IsReadyToUpgrade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSpaceElevator.IsFullyUpgraded
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableSpaceElevator::IsFullyUpgraded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSpaceElevator.IsFullyUpgraded");

	AFGBuildableSpaceElevator_IsFullyUpgraded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSpaceElevator.GetNextPhaseCost
// ()
// Parameters:
// TArray<struct FItemAmount>     out_cost                       (Parm, OutParm, ZeroConstructor)

void AFGBuildableSpaceElevator::GetNextPhaseCost(TArray<struct FItemAmount>* out_cost)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSpaceElevator.GetNextPhaseCost");

	AFGBuildableSpaceElevator_GetNextPhaseCost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_cost != nullptr)
		*out_cost = params.out_cost;
}


// Function FactoryGame.FGBuildableSpaceElevator.GetInputInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableSpaceElevator::GetInputInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSpaceElevator.GetInputInventory");

	AFGBuildableSpaceElevator_GetInputInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSplitterSmart.SetSortRuleAt
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FSplitterSortRule       Rule                           (Parm)

void AFGBuildableSplitterSmart::SetSortRuleAt(int Index, const struct FSplitterSortRule& Rule)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSplitterSmart.SetSortRuleAt");

	AFGBuildableSplitterSmart_SetSortRuleAt_Params params;
	params.Index = Index;
	params.Rule = Rule;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSplitterSmart.RemoveSortRuleAt
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableSplitterSmart::RemoveSortRuleAt(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSplitterSmart.RemoveSortRuleAt");

	AFGBuildableSplitterSmart_RemoveSortRuleAt_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSplitterSmart.OnRep_SortRules
// ()

void AFGBuildableSplitterSmart::OnRep_SortRules()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSplitterSmart.OnRep_SortRules");

	AFGBuildableSplitterSmart_OnRep_SortRules_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSplitterSmart.IsValidSortRuleAt
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableSplitterSmart::IsValidSortRuleAt(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSplitterSmart.IsValidSortRuleAt");

	AFGBuildableSplitterSmart_IsValidSortRuleAt_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSplitterSmart.GetSortRuleAt
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FSplitterSortRule       ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSplitterSortRule AFGBuildableSplitterSmart::GetSortRuleAt(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSplitterSmart.GetSortRuleAt");

	AFGBuildableSplitterSmart_GetSortRuleAt_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSplitterSmart.GetNumSortRules
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildableSplitterSmart::GetNumSortRules()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSplitterSmart.GetNumSortRules");

	AFGBuildableSplitterSmart_GetNumSortRules_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSplitterSmart.GetMaxNumSortRules
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildableSplitterSmart::GetMaxNumSortRules()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSplitterSmart.GetMaxNumSortRules");

	AFGBuildableSplitterSmart_GetMaxNumSortRules_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSplitterSmart.AddSortRule
// ()
// Parameters:
// struct FSplitterSortRule       Rule                           (Parm)

void AFGBuildableSplitterSmart::AddSortRule(const struct FSplitterSortRule& Rule)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSplitterSmart.AddSortRule");

	AFGBuildableSplitterSmart_AddSortRule_Params params;
	params.Rule = Rule;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableStandaloneSign.SetSignData
// ()
// Parameters:
// struct FStandaloneSignData     signData                       (Parm)
// bool                           bUpdate                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableStandaloneSign::SetSignData(const struct FStandaloneSignData& signData, bool bUpdate)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStandaloneSign.SetSignData");

	AFGBuildableStandaloneSign_SetSignData_Params params;
	params.signData = signData;
	params.bUpdate = bUpdate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableStandaloneSign.OnRep_SignData
// ()

void AFGBuildableStandaloneSign::OnRep_SignData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStandaloneSign.OnRep_SignData");

	AFGBuildableStandaloneSign_OnRep_SignData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableStandaloneSign.GetTextScaleFromNormalizedValue
// ()
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableStandaloneSign::GetTextScaleFromNormalizedValue(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStandaloneSign.GetTextScaleFromNormalizedValue");

	AFGBuildableStandaloneSign_GetTextScaleFromNormalizedValue_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableStandaloneSign.GetTextOffsetZ
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableStandaloneSign::GetTextOffsetZ()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStandaloneSign.GetTextOffsetZ");

	AFGBuildableStandaloneSign_GetTextOffsetZ_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableStandaloneSign.GetSignData
// ()
// Parameters:
// struct FStandaloneSignData     ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FStandaloneSignData AFGBuildableStandaloneSign::GetSignData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStandaloneSign.GetSignData");

	AFGBuildableStandaloneSign_GetSignData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableStandaloneSign.GetMinTextScale
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableStandaloneSign::GetMinTextScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStandaloneSign.GetMinTextScale");

	AFGBuildableStandaloneSign_GetMinTextScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableStandaloneSign.GetMinTextOffsetZ
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableStandaloneSign::GetMinTextOffsetZ()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStandaloneSign.GetMinTextOffsetZ");

	AFGBuildableStandaloneSign_GetMinTextOffsetZ_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableStandaloneSign.GetMaxTextScale
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableStandaloneSign::GetMaxTextScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStandaloneSign.GetMaxTextScale");

	AFGBuildableStandaloneSign_GetMaxTextScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableStandaloneSign.GetMaxTextOffsetZ
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableStandaloneSign::GetMaxTextOffsetZ()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStandaloneSign.GetMaxTextOffsetZ");

	AFGBuildableStandaloneSign_GetMaxTextOffsetZ_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableStandaloneSign.GetCurrentNormalizedTextScale
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableStandaloneSign::GetCurrentNormalizedTextScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStandaloneSign.GetCurrentNormalizedTextScale");

	AFGBuildableStandaloneSign_GetCurrentNormalizedTextScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableStandaloneSign.GetCurrentNormalizedTextOffsetZ
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableStandaloneSign::GetCurrentNormalizedTextOffsetZ()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStandaloneSign.GetCurrentNormalizedTextOffsetZ");

	AFGBuildableStandaloneSign_GetCurrentNormalizedTextOffsetZ_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableStorage.GetStorageInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableStorage::GetStorageInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStorage.GetStorageInventory");

	AFGBuildableStorage_GetStorageInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSubsystem.setColorSlotSecondary
// ()
// Parameters:
// unsigned char                  Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  Color                          (Parm, IsPlainOldData)

void AFGBuildableSubsystem::setColorSlotSecondary(unsigned char Index, const struct FColor& Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.setColorSlotSecondary");

	AFGBuildableSubsystem_setColorSlotSecondary_Params params;
	params.Index = Index;
	params.Color = Color;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSubsystem.setColorSlotPrimary
// ()
// Parameters:
// unsigned char                  Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  Color                          (Parm, IsPlainOldData)

void AFGBuildableSubsystem::setColorSlotPrimary(unsigned char Index, const struct FColor& Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.setColorSlotPrimary");

	AFGBuildableSubsystem_setColorSlotPrimary_Params params;
	params.Index = Index;
	params.Color = Color;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSubsystem.ReplayBuildingEffects
// ()

void AFGBuildableSubsystem::ReplayBuildingEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.ReplayBuildingEffects");

	AFGBuildableSubsystem_ReplayBuildingEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSubsystem.GetTypedBuildable
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AFGBuildable*>    out_buildables                 (Parm, OutParm, ZeroConstructor)

void AFGBuildableSubsystem::GetTypedBuildable(class UClass* inClass, TArray<class AFGBuildable*>* out_buildables)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.GetTypedBuildable");

	AFGBuildableSubsystem_GetTypedBuildable_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_buildables != nullptr)
		*out_buildables = params.out_buildables;
}


// Function FactoryGame.FGBuildableSubsystem.getColorSlotSecondaryLinear
// ()
// Parameters:
// unsigned char                  Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor AFGBuildableSubsystem::getColorSlotSecondaryLinear(unsigned char Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.getColorSlotSecondaryLinear");

	AFGBuildableSubsystem_getColorSlotSecondaryLinear_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSubsystem.getColorSlotSecondary
// ()
// Parameters:
// unsigned char                  Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FColor AFGBuildableSubsystem::getColorSlotSecondary(unsigned char Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.getColorSlotSecondary");

	AFGBuildableSubsystem_getColorSlotSecondary_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSubsystem.getColorSlotPrimaryLinear
// ()
// Parameters:
// unsigned char                  Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor AFGBuildableSubsystem::getColorSlotPrimaryLinear(unsigned char Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.getColorSlotPrimaryLinear");

	AFGBuildableSubsystem_getColorSlotPrimaryLinear_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSubsystem.getColorSlotPrimary
// ()
// Parameters:
// unsigned char                  Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FColor AFGBuildableSubsystem::getColorSlotPrimary(unsigned char Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.getColorSlotPrimary");

	AFGBuildableSubsystem_getColorSlotPrimary_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSubsystem.Get
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGBuildableSubsystem*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGBuildableSubsystem* AFGBuildableSubsystem::Get(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.Get");

	AFGBuildableSubsystem_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableTradingPost.UpdateStorageVisibility
// ()

void AFGBuildableTradingPost::UpdateStorageVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTradingPost.UpdateStorageVisibility");

	AFGBuildableTradingPost_UpdateStorageVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableTradingPost.UpdateMAMVisibility
// ()

void AFGBuildableTradingPost::UpdateMAMVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTradingPost.UpdateMAMVisibility");

	AFGBuildableTradingPost_UpdateMAMVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableTradingPost.UpdateGeneratorVisibility
// ()

void AFGBuildableTradingPost::UpdateGeneratorVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTradingPost.UpdateGeneratorVisibility");

	AFGBuildableTradingPost_UpdateGeneratorVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableTradingPost.OnTradingPostUpgraded
// ()
// Parameters:
// int                            Level                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           suppressBuildEffects           (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableTradingPost::OnTradingPostUpgraded(int Level, bool suppressBuildEffects)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTradingPost.OnTradingPostUpgraded");

	AFGBuildableTradingPost_OnTradingPostUpgraded_Params params;
	params.Level = Level;
	params.suppressBuildEffects = suppressBuildEffects;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableTradingPost.OnRep_NeedPlayingBuildEffect
// ()

void AFGBuildableTradingPost::OnRep_NeedPlayingBuildEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTradingPost.OnRep_NeedPlayingBuildEffect");

	AFGBuildableTradingPost_OnRep_NeedPlayingBuildEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableTradingPost.GetTradingPostLevel
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildableTradingPost::GetTradingPostLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTradingPost.GetTradingPostLevel");

	AFGBuildableTradingPost_GetTradingPostLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableTradingPost.GetStorageInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableTradingPost::GetStorageInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTradingPost.GetStorageInventory");

	AFGBuildableTradingPost_GetStorageInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableTradingPost.AreChildBuildingsLoaded
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableTradingPost::AreChildBuildingsLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTradingPost.AreChildBuildingsLoaded");

	AFGBuildableTradingPost_AreChildBuildingsLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableWire.GetLength
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableWire::GetLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableWire.GetLength");

	AFGBuildableWire_GetLength_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableWire.GetConnection
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UFGCircuitConnectionComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGCircuitConnectionComponent* AFGBuildableWire::GetConnection(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableWire.GetConnection");

	AFGBuildableWire_GetConnection_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildCategory.GetCategoryName
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGBuildCategory::GetCategoryName(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildCategory.GetCategoryName");

	UFGBuildCategory_GetCategoryName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildCategory.GetCategoryIcon
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateBrush UFGBuildCategory::GetCategoryIcon(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildCategory.GetCategoryIcon");

	UFGBuildCategory_GetCategoryIcon_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetStackSize
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGItemDescriptor::GetStackSize(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetStackSize");

	UFGItemDescriptor_GetStackSize_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetSmallIcon
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFGItemDescriptor::GetSmallIcon(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetSmallIcon");

	UFGItemDescriptor_GetSmallIcon_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetRadioactiveDecay
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGItemDescriptor::GetRadioactiveDecay(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetRadioactiveDecay");

	UFGItemDescriptor_GetRadioactiveDecay_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetPreviewView
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemView               out_previewView                (Parm, OutParm)

void UFGItemDescriptor::GetPreviewView(class UClass* inClass, struct FItemView* out_previewView)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetPreviewView");

	UFGItemDescriptor_GetPreviewView_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_previewView != nullptr)
		*out_previewView = params.out_previewView;
}


// Function FactoryGame.FGItemDescriptor.GetItemName
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGItemDescriptor::GetItemName(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetItemName");

	UFGItemDescriptor_GetItemName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetItemMesh
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* UFGItemDescriptor::GetItemMesh(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetItemMesh");

	UFGItemDescriptor_GetItemMesh_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetItemIcon
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateBrush UFGItemDescriptor::GetItemIcon(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetItemIcon");

	UFGItemDescriptor_GetItemIcon_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetItemDescription
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGItemDescriptor::GetItemDescription(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetItemDescription");

	UFGItemDescriptor_GetItemDescription_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetIconView
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemView               out_itemView                   (Parm, OutParm)

void UFGItemDescriptor::GetIconView(class UClass* inClass, struct FItemView* out_itemView)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetIconView");

	UFGItemDescriptor_GetIconView_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_itemView != nullptr)
		*out_itemView = params.out_itemView;
}


// Function FactoryGame.FGItemDescriptor.GetForm
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// EResourceForm                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EResourceForm UFGItemDescriptor::GetForm(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetForm");

	UFGItemDescriptor_GetForm_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetEnergyValue
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGItemDescriptor::GetEnergyValue(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetEnergyValue");

	UFGItemDescriptor_GetEnergyValue_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetBigIcon
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFGItemDescriptor::GetBigIcon(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetBigIcon");

	UFGItemDescriptor_GetBigIcon_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}

/*FText UFGItemDescriptor::GetItemNameInternal() const
{
	return FText();
}

FText UFGItemDescriptor::GetItemDescriptionInternal() const
{
	return FText();
}*/


// Function FactoryGame.FGBuildDescriptor.GetSubCategories
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_subCategories              (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGBuildDescriptor::GetSubCategories(class UClass* inClass, TArray<class UClass*>* out_subCategories)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildDescriptor.GetSubCategories");

	UFGBuildDescriptor_GetSubCategories_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_subCategories != nullptr)
		*out_subCategories = params.out_subCategories;
}


// Function FactoryGame.FGBuildDescriptor.GetBuildMenuPriority
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGBuildDescriptor::GetBuildMenuPriority(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildDescriptor.GetBuildMenuPriority");

	UFGBuildDescriptor_GetBuildMenuPriority_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildDescriptor.GetBuildCategory
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGBuildDescriptor::GetBuildCategory(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildDescriptor.GetBuildCategory");

	UFGBuildDescriptor_GetBuildCategory_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGuide.SetBuildGuideStartEnd
// ()
// Parameters:
// struct FVector                 startPoint                     (Parm, IsPlainOldData)
// struct FVector                 endPoint                       (Parm, IsPlainOldData)
// float                          meshSize                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildGuide::SetBuildGuideStartEnd(const struct FVector& startPoint, const struct FVector& endPoint, float meshSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGuide.SetBuildGuideStartEnd");

	AFGBuildGuide_SetBuildGuideStartEnd_Params params;
	params.startPoint = startPoint;
	params.endPoint = endPoint;
	params.meshSize = meshSize;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.TickState
// ()
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGBuildGunState::TickState(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.TickState");

	UFGBuildGunState_TickState_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.SecondaryFire
// ()

void UFGBuildGunState::SecondaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.SecondaryFire");

	UFGBuildGunState_SecondaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.ScrollUp
// ()

void UFGBuildGunState::ScrollUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.ScrollUp");

	UFGBuildGunState_ScrollUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.ScrollDown
// ()

void UFGBuildGunState::ScrollDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.ScrollDown");

	UFGBuildGunState_ScrollDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.ResetBuildGunDelay
// ()

void UFGBuildGunState::ResetBuildGunDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.ResetBuildGunDelay");

	UFGBuildGunState_ResetBuildGunDelay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.PrimaryFire
// ()

void UFGBuildGunState::PrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.PrimaryFire");

	UFGBuildGunState_PrimaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.IsActive
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBuildGunState::IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.IsActive");

	UFGBuildGunState_IsActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunState.HasBuildGunDelay
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBuildGunState::HasBuildGunDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.HasBuildGunDelay");

	UFGBuildGunState_HasBuildGunDelay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunState.HasAuthority
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBuildGunState::HasAuthority()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.HasAuthority");

	UFGBuildGunState_HasAuthority_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunState.GetBuildGunDelayPercentage
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGBuildGunState::GetBuildGunDelayPercentage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.GetBuildGunDelayPercentage");

	UFGBuildGunState_GetBuildGunDelayPercentage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunState.GetBuildGunDelayMessage
// ()
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGBuildGunState::GetBuildGunDelayMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.GetBuildGunDelayMessage");

	UFGBuildGunState_GetBuildGunDelayMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunState.GetBuildGun
// ()
// Parameters:
// class AFGBuildGun*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGBuildGun* UFGBuildGunState::GetBuildGun()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.GetBuildGun");

	UFGBuildGunState_GetBuildGun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunState.EndState
// ()

void UFGBuildGunState::EndState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.EndState");

	UFGBuildGunState_EndState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.ChangeScrollMode
// ()

void UFGBuildGunState::ChangeScrollMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.ChangeScrollMode");

	UFGBuildGunState_ChangeScrollMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.ChangeNoSnapMode
// ()

void UFGBuildGunState::ChangeNoSnapMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.ChangeNoSnapMode");

	UFGBuildGunState_ChangeNoSnapMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.ChangeGuideLinesSnapMode
// ()
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGBuildGunState::ChangeGuideLinesSnapMode(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.ChangeGuideLinesSnapMode");

	UFGBuildGunState_ChangeGuideLinesSnapMode_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.BuildGunDelayIsComplete
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBuildGunState::BuildGunDelayIsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.BuildGunDelayIsComplete");

	UFGBuildGunState_BuildGunDelayIsComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunState.BeginState
// ()

void UFGBuildGunState::BeginState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.BeginState");

	UFGBuildGunState_BeginState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.BeginBuildGunDelay
// ()

void UFGBuildGunState::BeginBuildGunDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.BeginBuildGunDelay");

	UFGBuildGunState_BeginBuildGunDelay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.WasUnEquipped
// ()

void AFGEquipment::WasUnEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.WasUnEquipped");

	AFGEquipment_WasUnEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.WasEquipped
// ()

void AFGEquipment::WasEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.WasEquipped");

	AFGEquipment_WasEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.UnEquip
// ()

void AFGEquipment::UnEquip()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.UnEquip");

	AFGEquipment_UnEquip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.ShouldShowStinger
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEquipment::ShouldShowStinger()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.ShouldShowStinger");

	AFGEquipment_ShouldShowStinger_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.Server_UpdateAttachmentUseState
// ()
// Parameters:
// int                            newUseState                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGEquipment::Server_UpdateAttachmentUseState(int newUseState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.Server_UpdateAttachmentUseState");

	AFGEquipment_Server_UpdateAttachmentUseState_Params params;
	params.newUseState = newUseState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.Server_ChargeForUse
// ()

void AFGEquipment::Server_ChargeForUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.Server_ChargeForUse");

	AFGEquipment_Server_ChargeForUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.IsLocalInstigator
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEquipment::IsLocalInstigator()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.IsLocalInstigator");

	AFGEquipment_IsLocalInstigator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.IsEquipped
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEquipment::IsEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.IsEquipped");

	AFGEquipment_IsEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.GetSecondaryAttachment
// ()
// Parameters:
// class AFGEquipmentAttachment*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGEquipmentAttachment* AFGEquipment::GetSecondaryAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.GetSecondaryAttachment");

	AFGEquipment_GetSecondaryAttachment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.GetInstigatorCharacter
// ()
// Parameters:
// class AFGCharacterPlayer*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterPlayer* AFGEquipment::GetInstigatorCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.GetInstigatorCharacter");

	AFGEquipment_GetInstigatorCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.GetEquipmentSlot
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// EEquipmentSlot                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EEquipmentSlot AFGEquipment::GetEquipmentSlot(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.GetEquipmentSlot");

	AFGEquipment_GetEquipmentSlot_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.GetAttachment
// ()
// Parameters:
// class AFGEquipmentAttachment*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGEquipmentAttachment* AFGEquipment::GetAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.GetAttachment");

	AFGEquipment_GetAttachment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.Equip
// ()
// Parameters:
// class AFGCharacterPlayer*      Character                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGEquipment::Equip(class AFGCharacterPlayer* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.Equip");

	AFGEquipment_Equip_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.DidNotAffordUse
// ()

void AFGEquipment::DidNotAffordUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.DidNotAffordUse");

	AFGEquipment_DidNotAffordUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.ChargeForUse
// ()

void AFGEquipment::ChargeForUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.ChargeForUse");

	AFGEquipment_ChargeForUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.CanAffordUse
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEquipment::CanAffordUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.CanAffordUse");

	AFGEquipment_CanAffordUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.AdjustDamage
// ()
// Parameters:
// float                          damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGEquipment::AdjustDamage(float damageAmount, class UDamageType* DamageType, class AController* instigatedBy, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.AdjustDamage");

	AFGEquipment_AdjustDamage_Params params;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.instigatedBy = instigatedBy;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGun.Server_SecondaryFire
// ()

void AFGBuildGun::Server_SecondaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.Server_SecondaryFire");

	AFGBuildGun_Server_SecondaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.Server_ScrollUp
// ()

void AFGBuildGun::Server_ScrollUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.Server_ScrollUp");

	AFGBuildGun_Server_ScrollUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.Server_ScrollMode
// ()

void AFGBuildGun::Server_ScrollMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.Server_ScrollMode");

	AFGBuildGun_Server_ScrollMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.Server_ScrollDown
// ()

void AFGBuildGun::Server_ScrollDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.Server_ScrollDown");

	AFGBuildGun_Server_ScrollDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.Server_PrimaryFire
// ()

void AFGBuildGun::Server_PrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.Server_PrimaryFire");

	AFGBuildGun_Server_PrimaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.Server_NoSnapMode
// ()

void AFGBuildGun::Server_NoSnapMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.Server_NoSnapMode");

	AFGBuildGun_Server_NoSnapMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.Server_GotoState
// ()
// Parameters:
// EBuildGunState                 State                          (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildGun::Server_GotoState(EBuildGunState State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.Server_GotoState");

	AFGBuildGun_Server_GotoState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.Server_GotoBuildState
// ()
// Parameters:
// class UClass*                  Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildGun::Server_GotoBuildState(class UClass* Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.Server_GotoBuildState");

	AFGBuildGun_Server_GotoBuildState_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.IsInState
// ()
// Parameters:
// EBuildGunState                 inState                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildGun::IsInState(EBuildGunState inState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.IsInState");

	AFGBuildGun_IsInState_Params params;
	params.inState = inState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGun.GotoMenuState
// ()

void AFGBuildGun::GotoMenuState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GotoMenuState");

	AFGBuildGun_GotoMenuState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.GotoDismantleState
// ()

void AFGBuildGun::GotoDismantleState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GotoDismantleState");

	AFGBuildGun_GotoDismantleState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.GotoBuildState
// ()
// Parameters:
// class UClass*                  Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildGun::GotoBuildState(class UClass* Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GotoBuildState");

	AFGBuildGun_GotoBuildState_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.GetInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildGun::GetInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GetInventory");

	AFGBuildGun_GetInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGun.GetCurrentBuildGunDelayPercentage
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildGun::GetCurrentBuildGunDelayPercentage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GetCurrentBuildGunDelayPercentage");

	AFGBuildGun_GetCurrentBuildGunDelayPercentage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGun.GetCurrentBuildGunDelayMessage
// ()
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AFGBuildGun::GetCurrentBuildGunDelayMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GetCurrentBuildGunDelayMessage");

	AFGBuildGun_GetCurrentBuildGunDelayMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGun.GetCostForRecipe
// ()
// Parameters:
// class UClass*                  Recipe                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> AFGBuildGun::GetCostForRecipe(class UClass* Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GetCostForRecipe");

	AFGBuildGun_GetCostForRecipe_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGun.GetBuildGunStateFor
// ()
// Parameters:
// EBuildGunState                 gunState                       (Parm, ZeroConstructor, IsPlainOldData)
// class UFGBuildGunState*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGBuildGunState* AFGBuildGun::GetBuildGunStateFor(EBuildGunState gunState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GetBuildGunStateFor");

	AFGBuildGun_GetBuildGunStateFor_Params params;
	params.gunState = gunState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGun.GetAvailableRecipes
// ()
// Parameters:
// TArray<class UClass*>          out_recipes                    (Parm, OutParm, ZeroConstructor)

void AFGBuildGun::GetAvailableRecipes(TArray<class UClass*>* out_recipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GetAvailableRecipes");

	AFGBuildGun_GetAvailableRecipes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_recipes != nullptr)
		*out_recipes = params.out_recipes;
}


// Function FactoryGame.FGBuildGun.CompareActiveRecipeTo
// ()
// Parameters:
// class UClass*                  Recipe                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildGun::CompareActiveRecipeTo(class UClass* Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.CompareActiveRecipeTo");

	AFGBuildGun_CompareActiveRecipeTo_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipmentAttachment.PlayUseEffect
// ()
// Parameters:
// struct FVector                 UseLocation                    (Parm, IsPlainOldData)

void AFGEquipmentAttachment::PlayUseEffect(const struct FVector& UseLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.PlayUseEffect");

	AFGEquipmentAttachment_PlayUseEffect_Params params;
	params.UseLocation = UseLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentAttachment.PlayDetachEffects3P
// ()

void AFGEquipmentAttachment::PlayDetachEffects3P()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.PlayDetachEffects3P");

	AFGEquipmentAttachment_PlayDetachEffects3P_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentAttachment.PlayAttachEffects3P
// ()

void AFGEquipmentAttachment::PlayAttachEffects3P()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.PlayAttachEffects3P");

	AFGEquipmentAttachment_PlayAttachEffects3P_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentAttachment.OnRep_UseLocationUpdated
// ()

void AFGEquipmentAttachment::OnRep_UseLocationUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.OnRep_UseLocationUpdated");

	AFGEquipmentAttachment_OnRep_UseLocationUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentAttachment.OnRep_OnAnimationStateUpdated
// ()

void AFGEquipmentAttachment::OnRep_OnAnimationStateUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.OnRep_OnAnimationStateUpdated");

	AFGEquipmentAttachment_OnRep_OnAnimationStateUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentAttachment.OnDetach
// ()

void AFGEquipmentAttachment::OnDetach()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.OnDetach");

	AFGEquipmentAttachment_OnDetach_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentAttachment.OnAttachmentUseStateUpdated
// ()
// Parameters:
// int                            newUseState                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGEquipmentAttachment::OnAttachmentUseStateUpdated(int newUseState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.OnAttachmentUseStateUpdated");

	AFGEquipmentAttachment_OnAttachmentUseStateUpdated_Params params;
	params.newUseState = newUseState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentAttachment.OnAttach
// ()

void AFGEquipmentAttachment::OnAttach()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.OnAttach");

	AFGEquipmentAttachment_OnAttach_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentAttachment.IsAttached
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEquipmentAttachment::IsAttached()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.IsAttached");

	AFGEquipmentAttachment_IsAttached_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipmentAttachment.GetEquippedSlot
// ()
// Parameters:
// EEquipmentSlot                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EEquipmentSlot AFGEquipmentAttachment::GetEquippedSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.GetEquippedSlot");

	AFGEquipmentAttachment_GetEquippedSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipmentAttachment.GetAttachSocket
// ()
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName AFGEquipmentAttachment::GetAttachSocket()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.GetAttachSocket");

	AFGEquipmentAttachment_GetAttachSocket_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipmentAttachment.GetAttachedTo
// ()
// Parameters:
// class AFGCharacterPlayer*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterPlayer* AFGEquipmentAttachment::GetAttachedTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.GetAttachedTo");

	AFGEquipmentAttachment_GetAttachedTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunStateBuild.ResetHologram
// ()

void UFGBuildGunStateBuild::ResetHologram()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.ResetHologram");

	UFGBuildGunStateBuild_ResetHologram_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.OnResetHologram
// ()

void UFGBuildGunStateBuild::OnResetHologram()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.OnResetHologram");

	UFGBuildGunStateBuild_OnResetHologram_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.OnRep_Hologram
// ()

void UFGBuildGunStateBuild::OnRep_Hologram()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.OnRep_Hologram");

	UFGBuildGunStateBuild_OnRep_Hologram_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.OnMultiStepPlacement
// ()
// Parameters:
// bool                           isFinalStep                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGBuildGunStateBuild::OnMultiStepPlacement(bool isFinalStep)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.OnMultiStepPlacement");

	UFGBuildGunStateBuild_OnMultiStepPlacement_Params params;
	params.isFinalStep = isFinalStep;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.OnActiveDescriptorChanged
// ()

void UFGBuildGunStateBuild::OnActiveDescriptorChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.OnActiveDescriptorChanged");

	UFGBuildGunStateBuild_OnActiveDescriptorChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.GetHologramCost
// ()
// Parameters:
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> UFGBuildGunStateBuild::GetHologramCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.GetHologramCost");

	UFGBuildGunStateBuild_GetHologramCost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunStateBuild.GetHologram
// ()
// Parameters:
// class AFGHologram*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGHologram* UFGBuildGunStateBuild::GetHologram()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.GetHologram");

	UFGBuildGunStateBuild_GetHologram_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunStateBuild.GetDescriptor
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGBuildGunStateBuild::GetDescriptor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.GetDescriptor");

	UFGBuildGunStateBuild_GetDescriptor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunStateBuild.EndClearanceOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGBuildGunStateBuild::EndClearanceOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.EndClearanceOverlap");

	UFGBuildGunStateBuild_EndClearanceOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.Client_OnResetHologram
// ()

void UFGBuildGunStateBuild::Client_OnResetHologram()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.Client_OnResetHologram");

	UFGBuildGunStateBuild_Client_OnResetHologram_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.Client_OnBuildableConstructed
// ()
// Parameters:
// class UClass*                  Desc                           (Parm, ZeroConstructor, IsPlainOldData)

void UFGBuildGunStateBuild::Client_OnBuildableConstructed(class UClass* Desc)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.Client_OnBuildableConstructed");

	UFGBuildGunStateBuild_Client_OnBuildableConstructed_Params params;
	params.Desc = Desc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.BeginClearanceOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UFGBuildGunStateBuild::BeginClearanceOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.BeginClearanceOverlap");

	UFGBuildGunStateBuild_BeginClearanceOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateDismantle.Server_DismantleActor
// ()
// Parameters:
// class AActor*                  actorToDismantle               (Parm, ZeroConstructor, IsPlainOldData)

void UFGBuildGunStateDismantle::Server_DismantleActor(class AActor* actorToDismantle)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.Server_DismantleActor");

	UFGBuildGunStateDismantle_Server_DismantleActor_Params params;
	params.actorToDismantle = actorToDismantle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateDismantle.OnStopDismantle
// ()

void UFGBuildGunStateDismantle::OnStopDismantle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.OnStopDismantle");

	UFGBuildGunStateDismantle_OnStopDismantle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateDismantle.OnStartDismantle
// ()

void UFGBuildGunStateDismantle::OnStartDismantle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.OnStartDismantle");

	UFGBuildGunStateDismantle_OnStartDismantle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateDismantle.GetSelectedActor
// ()
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UFGBuildGunStateDismantle::GetSelectedActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.GetSelectedActor");

	UFGBuildGunStateDismantle_GetSelectedActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunStateDismantle.GetDismantleRefund
// ()
// Parameters:
// TArray<struct FInventoryStack> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FInventoryStack> UFGBuildGunStateDismantle::GetDismantleRefund()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.GetDismantleRefund");

	UFGBuildGunStateDismantle_GetDismantleRefund_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunStateDismantle.CanDismantle
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBuildGunStateDismantle::CanDismantle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.CanDismantle");

	UFGBuildGunStateDismantle_CanDismantle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildingDescriptor.GetPowerProduction
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGBuildingDescriptor::GetPowerProduction(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildingDescriptor.GetPowerProduction");

	UFGBuildingDescriptor_GetPowerProduction_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildingDescriptor.GetPowerConsumption
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGBuildingDescriptor::GetPowerConsumption(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildingDescriptor.GetPowerConsumption");

	UFGBuildingDescriptor_GetPowerConsumption_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildingDescriptor.GetBuildableClass
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGBuildingDescriptor::GetBuildableClass(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildingDescriptor.GetBuildableClass");

	UFGBuildingDescriptor_GetBuildableClass_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGButtonWidget.SetButton
// ()
// Parameters:
// class UButton*                 inButton                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGButtonWidget::SetButton(class UButton* inButton)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGButtonWidget.SetButton");

	UFGButtonWidget_SetButton_Params params;
	params.inButton = inButton;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.Server_StartPrimaryFire
// ()

void AFGWeapon::Server_StartPrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.Server_StartPrimaryFire");

	AFGWeapon_Server_StartPrimaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.Server_Reload
// ()

void AFGWeapon::Server_Reload()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.Server_Reload");

	AFGWeapon_Server_Reload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.Server_EndPrimaryFire
// ()

void AFGWeapon::Server_EndPrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.Server_EndPrimaryFire");

	AFGWeapon_Server_EndPrimaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.PlayReloadEffects
// ()

void AFGWeapon::PlayReloadEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.PlayReloadEffects");

	AFGWeapon_PlayReloadEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.PlayFireReleasedEffects
// ()

void AFGWeapon::PlayFireReleasedEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.PlayFireReleasedEffects");

	AFGWeapon_PlayFireReleasedEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.PlayFireEffect
// ()

void AFGWeapon::PlayFireEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.PlayFireEffect");

	AFGWeapon_PlayFireEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.PlayFailedToFireEffects
// ()

void AFGWeapon::PlayFailedToFireEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.PlayFailedToFireEffects");

	AFGWeapon_PlayFailedToFireEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.HasAmmunition
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWeapon::HasAmmunition()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.HasAmmunition");

	AFGWeapon_HasAmmunition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.GetSpareAmmunition
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGWeapon::GetSpareAmmunition()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.GetSpareAmmunition");

	AFGWeapon_GetSpareAmmunition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.GetReloadTimeLeft
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGWeapon::GetReloadTimeLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.GetReloadTimeLeft");

	AFGWeapon_GetReloadTimeLeft_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.GetMagSize
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGWeapon::GetMagSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.GetMagSize");

	AFGWeapon_GetMagSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.GetIsReloading
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWeapon::GetIsReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.GetIsReloading");

	AFGWeapon_GetIsReloading_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.GetIsFiring
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWeapon::GetIsFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.GetIsFiring");

	AFGWeapon_GetIsFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.GetCurrentAmmo
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGWeapon::GetCurrentAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.GetCurrentAmmo");

	AFGWeapon_GetCurrentAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.GetAssosiatedHud
// ()
// Parameters:
// class AFGHUD*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGHUD* AFGWeapon::GetAssosiatedHud()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.GetAssosiatedHud");

	AFGWeapon_GetAssosiatedHud_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.FireAmmunition
// ()

void AFGWeapon::FireAmmunition()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.FireAmmunition");

	AFGWeapon_FireAmmunition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.CanReload
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWeapon::CanReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.CanReload");

	AFGWeapon_CanReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.ActualReload
// ()

void AFGWeapon::ActualReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.ActualReload");

	AFGWeapon_ActualReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGC4Dispenser.Server_SpawnC4
// ()
// Parameters:
// int                            throwForce                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGC4Dispenser::Server_SpawnC4(int throwForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGC4Dispenser.Server_SpawnC4");

	AFGC4Dispenser_Server_SpawnC4_Params params;
	params.throwForce = throwForce;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGC4Dispenser.Server_DetonatePressed
// ()

void AFGC4Dispenser::Server_DetonatePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGC4Dispenser.Server_DetonatePressed");

	AFGC4Dispenser_Server_DetonatePressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGC4Dispenser.GetChargePct
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGC4Dispenser::GetChargePct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGC4Dispenser.GetChargePct");

	AFGC4Dispenser_GetChargePct_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGC4Explosive.PlayExplosionEffects
// ()

void AFGC4Explosive::PlayExplosionEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGC4Explosive.PlayExplosionEffects");

	AFGC4Explosive_PlayExplosionEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGC4Explosive.OnRep_IsDetonated
// ()

void AFGC4Explosive::OnRep_IsDetonated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGC4Explosive.OnRep_IsDetonated");

	AFGC4Explosive_OnRep_IsDetonated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCameraModifierLimitLook.SetDefaultLookRotator
// ()
// Parameters:
// struct FRotator                inRotator                      (Parm, IsPlainOldData)

void UFGCameraModifierLimitLook::SetDefaultLookRotator(const struct FRotator& inRotator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCameraModifierLimitLook.SetDefaultLookRotator");

	UFGCameraModifierLimitLook_SetDefaultLookRotator_Params params;
	params.inRotator = inRotator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCameraModifierLimitLook.GetDefaultLookRotator
// ()
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator UFGCameraModifierLimitLook::GetDefaultLookRotator()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCameraModifierLimitLook.GetDefaultLookRotator");

	UFGCameraModifierLimitLook_GetDefaultLookRotator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCentralStorageContainer.AddToCentralStorageSubsystem
// ()

void AFGCentralStorageContainer::AddToCentralStorageSubsystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCentralStorageContainer.AddToCentralStorageSubsystem");

	AFGCentralStorageContainer_AddToCentralStorageSubsystem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCentralStorageSubsystem.RemoveItemsFromCentralStorage
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            Num                            (Parm, ZeroConstructor, IsPlainOldData)

void AFGCentralStorageSubsystem::RemoveItemsFromCentralStorage(class UClass* ItemClass, int Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCentralStorageSubsystem.RemoveItemsFromCentralStorage");

	AFGCentralStorageSubsystem_RemoveItemsFromCentralStorage_Params params;
	params.ItemClass = ItemClass;
	params.Num = Num;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCentralStorageSubsystem.IsCentralStorageBuilt
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCentralStorageSubsystem::IsCentralStorageBuilt()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCentralStorageSubsystem.IsCentralStorageBuilt");

	AFGCentralStorageSubsystem_IsCentralStorageBuilt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCentralStorageSubsystem.GetNumItemsFromCentralStorage
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGCentralStorageSubsystem::GetNumItemsFromCentralStorage(class UClass* ItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCentralStorageSubsystem.GetNumItemsFromCentralStorage");

	AFGCentralStorageSubsystem_GetNumItemsFromCentralStorage_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCentralStorageSubsystem.GetCentralStorageContainers
// ()
// Parameters:
// TArray<class AFGCentralStorageContainer*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AFGCentralStorageContainer*> AFGCentralStorageSubsystem::GetCentralStorageContainers()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCentralStorageSubsystem.GetCentralStorageContainers");

	AFGCentralStorageSubsystem_GetCentralStorageContainers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCentralStorageSubsystem.Get
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGCentralStorageSubsystem* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCentralStorageSubsystem* AFGCentralStorageSubsystem::Get(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCentralStorageSubsystem.Get");

	AFGCentralStorageSubsystem_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChainsaw.Server_StopSawing
// ()

void AFGChainsaw::Server_StopSawing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.Server_StopSawing");

	AFGChainsaw_Server_StopSawing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGChainsaw.Server_StartSawing
// ()

void AFGChainsaw::Server_StartSawing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.Server_StartSawing");

	AFGChainsaw_Server_StartSawing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGChainsaw.Server_RemoveChainsawedObject
// ()
// Parameters:
// class USceneComponent*         sawingComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FTransform              foliageToRemoveTransform       (Parm, IsPlainOldData)
// struct FVector                 effectLocation                 (Parm, IsPlainOldData)

void AFGChainsaw::Server_RemoveChainsawedObject(class USceneComponent* sawingComponent, const struct FTransform& foliageToRemoveTransform, const struct FVector& effectLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.Server_RemoveChainsawedObject");

	AFGChainsaw_Server_RemoveChainsawedObject_Params params;
	params.sawingComponent = sawingComponent;
	params.foliageToRemoveTransform = foliageToRemoveTransform;
	params.effectLocation = effectLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGChainsaw.SawProgress
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGChainsaw::SawProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.SawProgress");

	AFGChainsaw_SawProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChainsaw.IsSawing
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGChainsaw::IsSawing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.IsSawing");

	AFGChainsaw_IsSawing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChainsaw.IsSawEngaged
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGChainsaw::IsSawEngaged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.IsSawEngaged");

	AFGChainsaw_IsSawEngaged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChainsaw.HasAnyFuel
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGChainsaw::HasAnyFuel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.HasAnyFuel");

	AFGChainsaw_HasAnyFuel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChainsaw.GetFuelClass
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGChainsaw::GetFuelClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.GetFuelClass");

	AFGChainsaw_GetFuelClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChainsaw.CanStartSawing
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGChainsaw::CanStartSawing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.CanStartSawing");

	AFGChainsaw_CanStartSawing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChainsaw.BroadcastPickup
// ()
// Parameters:
// TArray<struct FPickedUpInstance> pickups                        (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// class AFGFoliagePickup*        instigatorPlayer               (Parm, ZeroConstructor, IsPlainOldData)

void AFGChainsaw::BroadcastPickup(TArray<struct FPickedUpInstance> pickups, class AFGFoliagePickup* instigatorPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.BroadcastPickup");

	AFGChainsaw_BroadcastPickup_Params params;
	params.pickups = pickups;
	params.instigatorPlayer = instigatorPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGChainsawableInterface.IsChainsawable
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGChainsawableInterface::IsChainsawable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsawableInterface.IsChainsawable");

	UFGChainsawableInterface_IsChainsawable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChainsawableInterface.GetMeshComponent
// ()
// Parameters:
// class UStaticMeshComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UStaticMeshComponent* UFGChainsawableInterface::GetMeshComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsawableInterface.GetMeshComponent");

	UFGChainsawableInterface_GetMeshComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.TraceForGround
// ()
// Parameters:
// struct FVector                 TraceStart                     (Parm, IsPlainOldData)
// struct FVector                 TraceEnd                       (Parm, IsPlainOldData)
// struct FHitResult              out_hitResult                  (Parm, OutParm, IsPlainOldData)
// float                          out_waterDepth                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCharacterBase::TraceForGround(const struct FVector& TraceStart, const struct FVector& TraceEnd, struct FHitResult* out_hitResult, float* out_waterDepth)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.TraceForGround");

	AFGCharacterBase_TraceForGround_Params params;
	params.TraceStart = TraceStart;
	params.TraceEnd = TraceEnd;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_hitResult != nullptr)
		*out_hitResult = params.out_hitResult;
	if (out_waterDepth != nullptr)
		*out_waterDepth = params.out_waterDepth;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.SetFallDamageOverride
// ()
// Parameters:
// class UCurveFloat*             fallDamageCurveOverride        (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::SetFallDamageOverride(class UCurveFloat* fallDamageCurveOverride)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.SetFallDamageOverride");

	AFGCharacterBase_SetFallDamageOverride_Params params;
	params.fallDamageCurveOverride = fallDamageCurveOverride;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.ReceiveDied
// ()

void AFGCharacterBase::ReceiveDied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.ReceiveDied");

	AFGCharacterBase_ReceiveDied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.ReceivedAdjustDamage
// ()
// Parameters:
// float                          damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGCharacterBase::ReceivedAdjustDamage(float damageAmount, class UDamageType* DamageType, class AController* instigatedBy, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.ReceivedAdjustDamage");

	AFGCharacterBase_ReceivedAdjustDamage_Params params;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.instigatedBy = instigatedBy;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.RagdollCharacter
// ()
// Parameters:
// bool                           newRagdoll                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::RagdollCharacter(bool newRagdoll)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.RagdollCharacter");

	AFGCharacterBase_RagdollCharacter_Params params;
	params.newRagdoll = newRagdoll;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.PushedByVehicle
// ()
// Parameters:
// class AFGVehicle*              Vehicle                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 pushVelocity                   (Parm, IsPlainOldData)

void AFGCharacterBase::PushedByVehicle(class AFGVehicle* Vehicle, const struct FVector& pushVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.PushedByVehicle");

	AFGCharacterBase_PushedByVehicle_Params params;
	params.Vehicle = Vehicle;
	params.pushVelocity = pushVelocity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.PlayFootstepEffect
// ()
// Parameters:
// int                            footDown                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           PlaySound                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::PlayFootstepEffect(int footDown, bool PlaySound)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.PlayFootstepEffect");

	AFGCharacterBase_PlayFootstepEffect_Params params;
	params.footDown = footDown;
	params.PlaySound = PlaySound;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.OnTakeRadialDamage
// ()
// Parameters:
// class AActor*                  damagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitLocation                    (Parm, IsPlainOldData)
// struct FHitResult              HitInfo                        (Parm, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::OnTakeRadialDamage(class AActor* damagedActor, float Damage, class UDamageType* DamageType, const struct FVector& HitLocation, const struct FHitResult& HitInfo, class AController* instigatedBy, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.OnTakeRadialDamage");

	AFGCharacterBase_OnTakeRadialDamage_Params params;
	params.damagedActor = damagedActor;
	params.Damage = Damage;
	params.DamageType = DamageType;
	params.HitLocation = HitLocation;
	params.HitInfo = HitInfo;
	params.instigatedBy = instigatedBy;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.OnTakePointDamage
// ()
// Parameters:
// class AActor*                  damagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitLocation                    (Parm, IsPlainOldData)
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ShotFromDirection              (Parm, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::OnTakePointDamage(class AActor* damagedActor, float Damage, class AController* instigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* HitComponent, const struct FName& BoneName, const struct FVector& ShotFromDirection, class UDamageType* DamageType, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.OnTakePointDamage");

	AFGCharacterBase_OnTakePointDamage_Params params;
	params.damagedActor = damagedActor;
	params.Damage = Damage;
	params.instigatedBy = instigatedBy;
	params.HitLocation = HitLocation;
	params.HitComponent = HitComponent;
	params.BoneName = BoneName;
	params.ShotFromDirection = ShotFromDirection;
	params.DamageType = DamageType;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.OnTakeDamage
// ()
// Parameters:
// class AActor*                  damagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::OnTakeDamage(class AActor* damagedActor, float damageAmount, class UDamageType* DamageType, class AController* instigatedBy, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.OnTakeDamage");

	AFGCharacterBase_OnTakeDamage_Params params;
	params.damagedActor = damagedActor;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.instigatedBy = instigatedBy;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.OnRep_IsRagdolled
// ()

void AFGCharacterBase::OnRep_IsRagdolled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.OnRep_IsRagdolled");

	AFGCharacterBase_OnRep_IsRagdolled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.NotifyOnWeakspotHit
// ()

void AFGCharacterBase::NotifyOnWeakspotHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.NotifyOnWeakspotHit");

	AFGCharacterBase_NotifyOnWeakspotHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.NotifyOnTakeRadialDamage
// ()
// Parameters:
// class AActor*                  damagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::NotifyOnTakeRadialDamage(class AActor* damagedActor, float Damage, class AController* instigatedBy, class UDamageType* DamageType, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.NotifyOnTakeRadialDamage");

	AFGCharacterBase_NotifyOnTakeRadialDamage_Params params;
	params.damagedActor = damagedActor;
	params.Damage = Damage;
	params.instigatedBy = instigatedBy;
	params.DamageType = DamageType;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.NotifyOnTakePointDamage
// ()
// Parameters:
// class AActor*                  damagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitLocation                    (Parm, IsPlainOldData)
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ShotFromDirection              (Parm, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::NotifyOnTakePointDamage(class AActor* damagedActor, float Damage, class AController* instigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* HitComponent, const struct FName& BoneName, const struct FVector& ShotFromDirection, class UDamageType* DamageType, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.NotifyOnTakePointDamage");

	AFGCharacterBase_NotifyOnTakePointDamage_Params params;
	params.damagedActor = damagedActor;
	params.Damage = Damage;
	params.instigatedBy = instigatedBy;
	params.HitLocation = HitLocation;
	params.HitComponent = HitComponent;
	params.BoneName = BoneName;
	params.ShotFromDirection = ShotFromDirection;
	params.DamageType = DamageType;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.NotifyOnTakeDamage
// ()
// Parameters:
// class AActor*                  damagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::NotifyOnTakeDamage(class AActor* damagedActor, float damageAmount, class UDamageType* DamageType, class AController* instigatedBy, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.NotifyOnTakeDamage");

	AFGCharacterBase_NotifyOnTakeDamage_Params params;
	params.damagedActor = damagedActor;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.instigatedBy = instigatedBy;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.IsRagdolled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCharacterBase::IsRagdolled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.IsRagdolled");

	AFGCharacterBase_IsRagdolled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.IsAliveAndWell
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCharacterBase::IsAliveAndWell()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.IsAliveAndWell");

	AFGCharacterBase_IsAliveAndWell_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.GetTakeDamageSound
// ()
// Parameters:
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* AFGCharacterBase::GetTakeDamageSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.GetTakeDamageSound");

	AFGCharacterBase_GetTakeDamageSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.GetTakeDamageParticle
// ()
// Parameters:
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* AFGCharacterBase::GetTakeDamageParticle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.GetTakeDamageParticle");

	AFGCharacterBase_GetTakeDamageParticle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.GetMesh3P
// ()
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* AFGCharacterBase::GetMesh3P()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.GetMesh3P");

	AFGCharacterBase_GetMesh3P_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.GetHealthComponent
// ()
// Parameters:
// class UFGHealthComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGHealthComponent* AFGCharacterBase::GetHealthComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.GetHealthComponent");

	AFGCharacterBase_GetHealthComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.GetFallDamageDamageType
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGCharacterBase::GetFallDamageDamageType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.GetFallDamageDamageType");

	AFGCharacterBase_GetFallDamageDamageType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.GetDeathSound
// ()
// Parameters:
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* AFGCharacterBase::GetDeathSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.GetDeathSound");

	AFGCharacterBase_GetDeathSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.Died
// ()
// Parameters:
// class AActor*                  thisActor                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::Died(class AActor* thisActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.Died");

	AFGCharacterBase_Died_Params params;
	params.thisActor = thisActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.CheckIfShouldDestroy
// ()

void AFGCharacterBase::CheckIfShouldDestroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.CheckIfShouldDestroy");

	AFGCharacterBase_CheckIfShouldDestroy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.CalculateFallDamage
// ()
// Parameters:
// float                          zSpeed                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGCharacterBase::CalculateFallDamage(float zSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.CalculateFallDamage");

	AFGCharacterBase_CalculateFallDamage_Params params;
	params.zSpeed = zSpeed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.AdjustDamage
// ()
// Parameters:
// class AActor*                  damagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGCharacterBase::AdjustDamage(class AActor* damagedActor, float damageAmount, class UDamageType* DamageType, class AController* instigatedBy, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.AdjustDamage");

	AFGCharacterBase_AdjustDamage_Params params;
	params.damagedActor = damagedActor;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.instigatedBy = instigatedBy;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterMovementComponent.ServerSetHookLocation
// ()
// Parameters:
// struct FVector                 hookLocation                   (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UFGCharacterMovementComponent::ServerSetHookLocation(const struct FVector& hookLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterMovementComponent.ServerSetHookLocation");

	UFGCharacterMovementComponent_ServerSetHookLocation_Params params;
	params.hookLocation = hookLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterMovementComponent.GetWantsToSprint
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCharacterMovementComponent::GetWantsToSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterMovementComponent.GetWantsToSprint");

	UFGCharacterMovementComponent_GetWantsToSprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterMovementComponent.GetOnLadder
// ()
// Parameters:
// class UFGLadderComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGLadderComponent* UFGCharacterMovementComponent::GetOnLadder()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterMovementComponent.GetOnLadder");

	UFGCharacterMovementComponent_GetOnLadder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterMovementComponent.GetIsSprinting
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCharacterMovementComponent::GetIsSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterMovementComponent.GetIsSprinting");

	UFGCharacterMovementComponent_GetIsSprinting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.UsePreferredCameraMode
// ()

void AFGCharacterPlayer::UsePreferredCameraMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.UsePreferredCameraMode");

	AFGCharacterPlayer_UsePreferredCameraMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.UnequipEquipment
// ()
// Parameters:
// class AFGEquipment*            equipment                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::UnequipEquipment(class AFGEquipment* equipment)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.UnequipEquipment");

	AFGCharacterPlayer_UnequipEquipment_Params params;
	params.equipment = equipment;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.ToggleCameraMode
// ()

void AFGCharacterPlayer::ToggleCameraMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.ToggleCameraMode");

	AFGCharacterPlayer_ToggleCameraMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.ToggleBuildGun
// ()

void AFGCharacterPlayer::ToggleBuildGun()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.ToggleBuildGun");

	AFGCharacterPlayer_ToggleBuildGun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.StopFreeRotate3P
// ()

void AFGCharacterPlayer::StopFreeRotate3P()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.StopFreeRotate3P");

	AFGCharacterPlayer_StopFreeRotate3P_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.StopFocusAim
// ()

void AFGCharacterPlayer::StopFocusAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.StopFocusAim");

	AFGCharacterPlayer_StopFocusAim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.StartFreeRotate3P
// ()

void AFGCharacterPlayer::StartFreeRotate3P()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.StartFreeRotate3P");

	AFGCharacterPlayer_StartFreeRotate3P_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.StartFocusAim
// ()

void AFGCharacterPlayer::StartFocusAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.StartFocusAim");

	AFGCharacterPlayer_StartFocusAim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.SpawnInitialGear
// ()

void AFGCharacterPlayer::SpawnInitialGear()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.SpawnInitialGear");

	AFGCharacterPlayer_SpawnInitialGear_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.SnapSpringArmToDesiredLocation
// ()

void AFGCharacterPlayer::SnapSpringArmToDesiredLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.SnapSpringArmToDesiredLocation");

	AFGCharacterPlayer_SnapSpringArmToDesiredLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.SetWantSprintBobbing
// ()
// Parameters:
// bool                           wantBobbing                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::SetWantSprintBobbing(bool wantBobbing)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.SetWantSprintBobbing");

	AFGCharacterPlayer_SetWantSprintBobbing_Params params;
	params.wantBobbing = wantBobbing;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.SetThirdPersonMode
// ()

void AFGCharacterPlayer::SetThirdPersonMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.SetThirdPersonMode");

	AFGCharacterPlayer_SetThirdPersonMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.SetMeshVisibility
// ()
// Parameters:
// bool                           IsFirstPerson                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::SetMeshVisibility(bool IsFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.SetMeshVisibility");

	AFGCharacterPlayer_SetMeshVisibility_Params params;
	params.IsFirstPerson = IsFirstPerson;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.SetFirstPersonMode
// ()

void AFGCharacterPlayer::SetFirstPersonMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.SetFirstPersonMode");

	AFGCharacterPlayer_SetFirstPersonMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.SetCameraMode
// ()
// Parameters:
// ECameraMode                    newCameraMode                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::SetCameraMode(ECameraMode newCameraMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.SetCameraMode");

	AFGCharacterPlayer_SetCameraMode_Params params;
	params.newCameraMode = newCameraMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Server_UnequipEquipment
// ()
// Parameters:
// class AFGEquipment*            newEquipment                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::Server_UnequipEquipment(class AFGEquipment* newEquipment)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Server_UnequipEquipment");

	AFGCharacterPlayer_Server_UnequipEquipment_Params params;
	params.newEquipment = newEquipment;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Server_ToggleSwitchControl
// ()
// Parameters:
// class AFGBuildableRailroadSwitchControl* switchControl                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::Server_ToggleSwitchControl(class AFGBuildableRailroadSwitchControl* switchControl)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Server_ToggleSwitchControl");

	AFGCharacterPlayer_Server_ToggleSwitchControl_Params params;
	params.switchControl = switchControl;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Server_RevivePlayer
// ()
// Parameters:
// class AFGCharacterPlayer*      playerToRevive                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::Server_RevivePlayer(class AFGCharacterPlayer* playerToRevive)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Server_RevivePlayer");

	AFGCharacterPlayer_Server_RevivePlayer_Params params;
	params.playerToRevive = playerToRevive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Server_PickUpItem
// ()
// Parameters:
// class AFGItemPickup*           itemPickup                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::Server_PickUpItem(class AFGItemPickup* itemPickup)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Server_PickUpItem");

	AFGCharacterPlayer_Server_PickUpItem_Params params;
	params.itemPickup = itemPickup;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Server_OnUseReleased
// ()

void AFGCharacterPlayer::Server_OnUseReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Server_OnUseReleased");

	AFGCharacterPlayer_Server_OnUseReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Server_OnUse
// ()

void AFGCharacterPlayer::Server_OnUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Server_OnUse");

	AFGCharacterPlayer_Server_OnUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Server_EquipEquipment
// ()
// Parameters:
// class AFGEquipment*            newEquipment                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::Server_EquipEquipment(class AFGEquipment* newEquipment)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Server_EquipEquipment");

	AFGCharacterPlayer_Server_EquipEquipment_Params params;
	params.newEquipment = newEquipment;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Server_CycleHandEquipmentPressed
// ()
// Parameters:
// int                            dir                            (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::Server_CycleHandEquipmentPressed(int dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Server_CycleHandEquipmentPressed");

	AFGCharacterPlayer_Server_CycleHandEquipmentPressed_Params params;
	params.dir = dir;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.PlayPickupEffects
// ()

void AFGCharacterPlayer::PlayPickupEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.PlayPickupEffects");

	AFGCharacterPlayer_PlayPickupEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnSpawnDeathMarker
// ()

void AFGCharacterPlayer::OnSpawnDeathMarker()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnSpawnDeathMarker");

	AFGCharacterPlayer_OnSpawnDeathMarker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnReviveComplete
// ()

void AFGCharacterPlayer::OnReviveComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnReviveComplete");

	AFGCharacterPlayer_OnReviveComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnRep_PickupCounter
// ()

void AFGCharacterPlayer::OnRep_PickupCounter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnRep_PickupCounter");

	AFGCharacterPlayer_OnRep_PickupCounter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnRep_DrivenVehicle
// ()

void AFGCharacterPlayer::OnRep_DrivenVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnRep_DrivenVehicle");

	AFGCharacterPlayer_OnRep_DrivenVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnRep_ActiveEquipments
// ()

void AFGCharacterPlayer::OnRep_ActiveEquipments()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnRep_ActiveEquipments");

	AFGCharacterPlayer_OnRep_ActiveEquipments_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnRep_ActiveAttachments
// ()

void AFGCharacterPlayer::OnRep_ActiveAttachments()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnRep_ActiveAttachments");

	AFGCharacterPlayer_OnRep_ActiveAttachments_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnReceiveRadiationTick
// ()
// Parameters:
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::OnReceiveRadiationTick(float amount, float Duration, class UClass* DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnReceiveRadiationTick");

	AFGCharacterPlayer_OnReceiveRadiationTick_Params params;
	params.amount = amount;
	params.Duration = Duration;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnReceiveRadiationStop
// ()

void AFGCharacterPlayer::OnReceiveRadiationStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnReceiveRadiationStop");

	AFGCharacterPlayer_OnReceiveRadiationStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnReceiveRadiationStart
// ()

void AFGCharacterPlayer::OnReceiveRadiationStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnReceiveRadiationStart");

	AFGCharacterPlayer_OnReceiveRadiationStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnItemAddedToInventory
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            numAdded                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::OnItemAddedToInventory(class UClass* ItemClass, int numAdded)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnItemAddedToInventory");

	AFGCharacterPlayer_OnItemAddedToInventory_Params params;
	params.ItemClass = ItemClass;
	params.numAdded = numAdded;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnInventorySlotsUnlocked
// ()
// Parameters:
// int                            newUnlockedSlots               (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::OnInventorySlotsUnlocked(int newUnlockedSlots)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnInventorySlotsUnlocked");

	AFGCharacterPlayer_OnInventorySlotsUnlocked_Params params;
	params.newUnlockedSlots = newUnlockedSlots;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnDisabledInputGateChanged
// ()
// Parameters:
// struct FDisabledInputGate      NewValue                       (Parm, IsPlainOldData)

void AFGCharacterPlayer::OnDisabledInputGateChanged(const struct FDisabledInputGate& NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnDisabledInputGateChanged");

	AFGCharacterPlayer_OnDisabledInputGateChanged_Params params;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnArmsSlotsUnlocked
// ()
// Parameters:
// int                            newUnlockedSlots               (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::OnArmsSlotsUnlocked(int newUnlockedSlots)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnArmsSlotsUnlocked");

	AFGCharacterPlayer_OnArmsSlotsUnlocked_Params params;
	params.newUnlockedSlots = newUnlockedSlots;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.IsFirstPerson
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCharacterPlayer::IsFirstPerson()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.IsFirstPerson");

	AFGCharacterPlayer_IsFirstPerson_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.IsDrivingVehicle
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCharacterPlayer::IsDrivingVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.IsDrivingVehicle");

	AFGCharacterPlayer_IsDrivingVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.IsBuildGunEquipped
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCharacterPlayer::IsBuildGunEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.IsBuildGunEquipped");

	AFGCharacterPlayer_IsBuildGunEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.HotKeyRecipe
// ()
// Parameters:
// class UClass*                  Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::HotKeyRecipe(class UClass* Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.HotKeyRecipe");

	AFGCharacterPlayer_HotKeyRecipe_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.HotKeyDismantle
// ()

void AFGCharacterPlayer::HotKeyDismantle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.HotKeyDismantle");

	AFGCharacterPlayer_HotKeyDismantle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.GetWantSprintBobbing
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCharacterPlayer::GetWantSprintBobbing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetWantSprintBobbing");

	AFGCharacterPlayer_GetWantSprintBobbing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetUseDistance
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGCharacterPlayer::GetUseDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetUseDistance");

	AFGCharacterPlayer_GetUseDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetTrashSlot
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGCharacterPlayer::GetTrashSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetTrashSlot");

	AFGCharacterPlayer_GetTrashSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetSpringArmComponent
// ()
// Parameters:
// class USpringArmComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USpringArmComponent* AFGCharacterPlayer::GetSpringArmComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetSpringArmComponent");

	AFGCharacterPlayer_GetSpringArmComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetReviveProgress
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGCharacterPlayer::GetReviveProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetReviveProgress");

	AFGCharacterPlayer_GetReviveProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetResourceScanner
// ()
// Parameters:
// class AFGResourceScanner*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGResourceScanner* AFGCharacterPlayer::GetResourceScanner()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetResourceScanner");

	AFGCharacterPlayer_GetResourceScanner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetResourceMiner
// ()
// Parameters:
// class AFGResourceMiner*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGResourceMiner* AFGCharacterPlayer::GetResourceMiner()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetResourceMiner");

	AFGCharacterPlayer_GetResourceMiner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetPickupProgress
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGCharacterPlayer::GetPickupProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetPickupProgress");

	AFGCharacterPlayer_GetPickupProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetOutline
// ()
// Parameters:
// class UFGOutlineComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGOutlineComponent* AFGCharacterPlayer::GetOutline()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetOutline");

	AFGCharacterPlayer_GetOutline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetMesh1P
// ()
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* AFGCharacterPlayer::GetMesh1P()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetMesh1P");

	AFGCharacterPlayer_GetMesh1P_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetInventoryDropLocation
// ()
// Parameters:
// class UFGInventoryComponent*   component                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FInventoryStack         stack                          (Parm)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector AFGCharacterPlayer::GetInventoryDropLocation(class UFGInventoryComponent* component, const struct FInventoryStack& stack)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetInventoryDropLocation");

	AFGCharacterPlayer_GetInventoryDropLocation_Params params;
	params.component = component;
	params.stack = stack;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGCharacterPlayer::GetInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetInventory");

	AFGCharacterPlayer_GetInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetEquipmentSlot
// ()
// Parameters:
// EEquipmentSlot                 Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class UFGInventoryComponentEquipment* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponentEquipment* AFGCharacterPlayer::GetEquipmentSlot(EEquipmentSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetEquipmentSlot");

	AFGCharacterPlayer_GetEquipmentSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetEquipmentInSlot
// ()
// Parameters:
// EEquipmentSlot                 Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFGEquipment*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGEquipment* AFGCharacterPlayer::GetEquipmentInSlot(EEquipmentSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetEquipmentInSlot");

	AFGCharacterPlayer_GetEquipmentInSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetDrivenVehicle
// ()
// Parameters:
// class AFGDriveablePawn*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGDriveablePawn* AFGCharacterPlayer::GetDrivenVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetDrivenVehicle");

	AFGCharacterPlayer_GetDrivenVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetDesiredWalkHeadBobShake
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGCharacterPlayer::GetDesiredWalkHeadBobShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetDesiredWalkHeadBobShake");

	AFGCharacterPlayer_GetDesiredWalkHeadBobShake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetDesiredSprintHeadBobShake
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGCharacterPlayer::GetDesiredSprintHeadBobShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetDesiredSprintHeadBobShake");

	AFGCharacterPlayer_GetDesiredSprintHeadBobShake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetCurrentLadderComponent
// ()
// Parameters:
// class UFGLadderComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGLadderComponent* AFGCharacterPlayer::GetCurrentLadderComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetCurrentLadderComponent");

	AFGCharacterPlayer_GetCurrentLadderComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetCameraMode
// ()
// Parameters:
// ECameraMode                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECameraMode AFGCharacterPlayer::GetCameraMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetCameraMode");

	AFGCharacterPlayer_GetCameraMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetCameraComponent
// ()
// Parameters:
// class UCameraComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCameraComponent* AFGCharacterPlayer::GetCameraComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetCameraComponent");

	AFGCharacterPlayer_GetCameraComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetBuildGun
// ()
// Parameters:
// class AFGBuildGun*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGBuildGun* AFGCharacterPlayer::GetBuildGun()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetBuildGun");

	AFGCharacterPlayer_GetBuildGun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetBestUsableActor
// ()
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AFGCharacterPlayer::GetBestUsableActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetBestUsableActor");

	AFGCharacterPlayer_GetBestUsableActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetBeltSlot
// ()
// Parameters:
// class UFGInventoryComponentBeltSlot* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponentBeltSlot* AFGCharacterPlayer::GetBeltSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetBeltSlot");

	AFGCharacterPlayer_GetBeltSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetActiveEquipments
// ()
// Parameters:
// TArray<class AFGEquipment*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AFGEquipment*> AFGCharacterPlayer::GetActiveEquipments()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetActiveEquipments");

	AFGCharacterPlayer_GetActiveEquipments_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetActiveEquipmentItem
// ()
// Parameters:
// EEquipmentSlot                 Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FInventoryItem          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FInventoryItem AFGCharacterPlayer::GetActiveEquipmentItem(EEquipmentSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetActiveEquipmentItem");

	AFGCharacterPlayer_GetActiveEquipmentItem_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetActiveCrosshairState
// ()
// Parameters:
// ECrosshairState                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECrosshairState AFGCharacterPlayer::GetActiveCrosshairState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetActiveCrosshairState");

	AFGCharacterPlayer_GetActiveCrosshairState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetActiveAttachments
// ()
// Parameters:
// TArray<class AFGEquipmentAttachment*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AFGEquipmentAttachment*> AFGCharacterPlayer::GetActiveAttachments()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetActiveAttachments");

	AFGCharacterPlayer_GetActiveAttachments_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.EquipEquipment
// ()
// Parameters:
// class AFGEquipment*            equipment                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::EquipEquipment(class AFGEquipment* equipment)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.EquipEquipment");

	AFGCharacterPlayer_EquipEquipment_Params params;
	params.equipment = equipment;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Client_Revived
// ()

void AFGCharacterPlayer::Client_Revived()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Client_Revived");

	AFGCharacterPlayer_Client_Revived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Client_OnReceiveRadiationStop
// ()

void AFGCharacterPlayer::Client_OnReceiveRadiationStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Client_OnReceiveRadiationStop");

	AFGCharacterPlayer_Client_OnReceiveRadiationStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Client_OnReceiveRadiationStart
// ()

void AFGCharacterPlayer::Client_OnReceiveRadiationStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Client_OnReceiveRadiationStart");

	AFGCharacterPlayer_Client_OnReceiveRadiationStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.CameraZoomOut
// ()

void AFGCharacterPlayer::CameraZoomOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.CameraZoomOut");

	AFGCharacterPlayer_CameraZoomOut_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.CameraZoomIn
// ()

void AFGCharacterPlayer::CameraZoomIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.CameraZoomIn");

	AFGCharacterPlayer_CameraZoomIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGChatManager.Multicast_BroadcastChatMessage
// ()
// Parameters:
// struct FChatMessageStruct      newMessage                     (ConstParm, Parm, ReferenceParm)

void AFGChatManager::Multicast_BroadcastChatMessage(const struct FChatMessageStruct& newMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChatManager.Multicast_BroadcastChatMessage");

	AFGChatManager_Multicast_BroadcastChatMessage_Params params;
	params.newMessage = newMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGChatManager.GetReceivedChatMessages
// ()
// Parameters:
// TArray<struct FChatMessageStruct> out_messages                   (Parm, OutParm, ZeroConstructor, ReferenceParm)

void AFGChatManager::GetReceivedChatMessages(TArray<struct FChatMessageStruct>* out_messages)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChatManager.GetReceivedChatMessages");

	AFGChatManager_GetReceivedChatMessages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_messages != nullptr)
		*out_messages = params.out_messages;
}


// Function FactoryGame.FGChatManager.GetMessageVisibleDuration
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGChatManager::GetMessageVisibleDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChatManager.GetMessageVisibleDuration");

	AFGChatManager_GetMessageVisibleDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChatManager.GetMaxNumMessagesInHistory
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGChatManager::GetMaxNumMessagesInHistory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChatManager.GetMaxNumMessagesInHistory");

	AFGChatManager_GetMaxNumMessagesInHistory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChatManager.GetChatMessageName
// ()
// Parameters:
// struct FChatMessageStruct      inMessage                      (ConstParm, Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString AFGChatManager::GetChatMessageName(const struct FChatMessageStruct& inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChatManager.GetChatMessageName");

	AFGChatManager_GetChatMessageName_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChatManager.GetChatMessageColor
// ()
// Parameters:
// struct FChatMessageStruct      inMessage                      (ConstParm, Parm, OutParm, ReferenceParm)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor AFGChatManager::GetChatMessageColor(const struct FChatMessageStruct& inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChatManager.GetChatMessageColor");

	AFGChatManager_GetChatMessageColor_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChatManager.Get
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGChatManager*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGChatManager* AFGChatManager::Get(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChatManager.Get");

	AFGChatManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.VisitAllMapAreas
// ()

void UFGCheatManager::VisitAllMapAreas()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.VisitAllMapAreas");

	UFGCheatManager_VisitAllMapAreas_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.UpdateSessionToOSS
// ()

void UFGCheatManager::UpdateSessionToOSS()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.UpdateSessionToOSS");

	UFGCheatManager_UpdateSessionToOSS_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.TurboMode
// ()
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::TurboMode(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.TurboMode");

	UFGCheatManager_TurboMode_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.TriggerPresenceUpdate
// ()

void UFGCheatManager::TriggerPresenceUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.TriggerPresenceUpdate");

	UFGCheatManager_TriggerPresenceUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ToggleCameraMode
// ()

void UFGCheatManager::ToggleCameraMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ToggleCameraMode");

	UFGCheatManager_ToggleCameraMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ToggleAudioLandingDebug
// ()

void UFGCheatManager::ToggleAudioLandingDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ToggleAudioLandingDebug");

	UFGCheatManager_ToggleAudioLandingDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ToggleAudioDebug
// ()

void UFGCheatManager::ToggleAudioDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ToggleAudioDebug");

	UFGCheatManager_ToggleAudioDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.TestSharedInventoryPtr
// ()

void UFGCheatManager::TestSharedInventoryPtr()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.TestSharedInventoryPtr");

	UFGCheatManager_TestSharedInventoryPtr_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SplitAllConveyors
// ()

void UFGCheatManager::SplitAllConveyors()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SplitAllConveyors");

	UFGCheatManager_SplitAllConveyors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ShowSequenceList
// ()

void UFGCheatManager::ShowSequenceList()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ShowSequenceList");

	UFGCheatManager_ShowSequenceList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ShowFactoryOnly
// ()
// Parameters:
// bool                           environmentHidden              (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::ShowFactoryOnly(bool environmentHidden)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ShowFactoryOnly");

	UFGCheatManager_ShowFactoryOnly_Params params;
	params.environmentHidden = environmentHidden;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetTradingPostLevel
// ()
// Parameters:
// int                            inLevel                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::SetTradingPostLevel(int inLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetTradingPostLevel");

	UFGCheatManager_SetTradingPostLevel_Params params;
	params.inLevel = inLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetTimeSpeedMultiplier
// ()
// Parameters:
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::SetTimeSpeedMultiplier(float Speed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetTimeSpeedMultiplier");

	UFGCheatManager_SetTimeSpeedMultiplier_Params params;
	params.Speed = Speed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetTimeOfDay
// ()
// Parameters:
// int                            hour                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            minute                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::SetTimeOfDay(int hour, int minute)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetTimeOfDay");

	UFGCheatManager_SetTimeOfDay_Params params;
	params.hour = hour;
	params.minute = minute;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetSlomo
// ()
// Parameters:
// float                          Slomo                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::SetSlomo(float Slomo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetSlomo");

	UFGCheatManager_SetSlomo_Params params;
	params.Slomo = Slomo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetRandomDebugStartingPoint
// ()

void UFGCheatManager::SetRandomDebugStartingPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetRandomDebugStartingPoint");

	UFGCheatManager_SetRandomDebugStartingPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetGamePhase
// ()
// Parameters:
// TEnumAsByte<EGamePhase>        phase                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::SetGamePhase(TEnumAsByte<EGamePhase> phase)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetGamePhase");

	UFGCheatManager_SetGamePhase_Params params;
	params.phase = phase;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetFactoryDetailReplication
// ()
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::SetFactoryDetailReplication(bool enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetFactoryDetailReplication");

	UFGCheatManager_SetFactoryDetailReplication_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetDebugStartingPoint
// ()
// Parameters:
// struct FName                   startingPoint                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::SetDebugStartingPoint(const struct FName& startingPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetDebugStartingPoint");

	UFGCheatManager_SetDebugStartingPoint_Params params;
	params.startingPoint = startingPoint;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetAITickDistance
// ()
// Parameters:
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::SetAITickDistance(float Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetAITickDistance");

	UFGCheatManager_SetAITickDistance_Params params;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SendInviteToFriend
// ()
// Parameters:
// class FString                  friendName                     (Parm, ZeroConstructor)

void UFGCheatManager::SendInviteToFriend(const class FString& friendName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SendInviteToFriend");

	UFGCheatManager_SendInviteToFriend_Params params;
	params.friendName = friendName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SaveWithNewSessionName
// ()
// Parameters:
// class FString                  saveName                       (Parm, ZeroConstructor)
// class FString                  SessionName                    (Parm, ZeroConstructor)

void UFGCheatManager::SaveWithNewSessionName(const class FString& saveName, const class FString& SessionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SaveWithNewSessionName");

	UFGCheatManager_SaveWithNewSessionName_Params params;
	params.saveName = saveName;
	params.SessionName = SessionName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.RunDebugMetric
// ()

void UFGCheatManager::RunDebugMetric()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.RunDebugMetric");

	UFGCheatManager_RunDebugMetric_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ResetSchematics
// ()

void UFGCheatManager::ResetSchematics()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ResetSchematics");

	UFGCheatManager_ResetSchematics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ResetHubTutorial
// ()

void UFGCheatManager::ResetHubTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ResetHubTutorial");

	UFGCheatManager_ResetHubTutorial_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ResetFuses
// ()

void UFGCheatManager::ResetFuses()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ResetFuses");

	UFGCheatManager_ResetFuses_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ReplayBuildingEffects
// ()

void UFGCheatManager::ReplayBuildingEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ReplayBuildingEffects");

	UFGCheatManager_ReplayBuildingEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.RemoveAllFoliage
// ()
// Parameters:
// int                            maxNumInstances                (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::RemoveAllFoliage(int maxNumInstances)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.RemoveAllFoliage");

	UFGCheatManager_RemoveAllFoliage_Params params;
	params.maxNumInstances = maxNumInstances;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.RebuildPowerCircuits
// ()

void UFGCheatManager::RebuildPowerCircuits()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.RebuildPowerCircuits");

	UFGCheatManager_RebuildPowerCircuits_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.RandomizeBuildingsColorSlot
// ()
// Parameters:
// unsigned char                  SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::RandomizeBuildingsColorSlot(unsigned char SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.RandomizeBuildingsColorSlot");

	UFGCheatManager_RandomizeBuildingsColorSlot_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.PurgeInactiveClientsFromSave
// ()
// Parameters:
// bool                           fetchInventories               (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::PurgeInactiveClientsFromSave(bool fetchInventories)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.PurgeInactiveClientsFromSave");

	UFGCheatManager_PurgeInactiveClientsFromSave_Params params;
	params.fetchInventories = fetchInventories;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.PurgeAllBeaconsFromSave
// ()

void UFGCheatManager::PurgeAllBeaconsFromSave()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.PurgeAllBeaconsFromSave");

	UFGCheatManager_PurgeAllBeaconsFromSave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.PumpiMode
// ()
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::PumpiMode(bool enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.PumpiMode");

	UFGCheatManager_PumpiMode_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.PrintStatichMeshesHirarchy
// ()

void UFGCheatManager::PrintStatichMeshesHirarchy()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.PrintStatichMeshesHirarchy");

	UFGCheatManager_PrintStatichMeshesHirarchy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.PardonAllPlayers
// ()

void UFGCheatManager::PardonAllPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.PardonAllPlayers");

	UFGCheatManager_PardonAllPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.OpenModMap
// ()

void UFGCheatManager::OpenModMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.OpenModMap");

	UFGCheatManager_OpenModMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.NoPower
// ()
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::NoPower(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.NoPower");

	UFGCheatManager_NoPower_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.NoCost
// ()
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::NoCost(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.NoCost");

	UFGCheatManager_NoCost_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.MergeAllConveyors
// ()

void UFGCheatManager::MergeAllConveyors()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.MergeAllConveyors");

	UFGCheatManager_MergeAllConveyors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.MCP_UpdatePresenceString
// ()
// Parameters:
// class FString                  String                         (Parm, ZeroConstructor)

void UFGCheatManager::MCP_UpdatePresenceString(const class FString& String)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.MCP_UpdatePresenceString");

	UFGCheatManager_MCP_UpdatePresenceString_Params params;
	params.String = String;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.MCP_UpdatePresence
// ()
// Parameters:
// class FString                  Key                            (Parm, ZeroConstructor)
// class FString                  Value                          (Parm, ZeroConstructor)

void UFGCheatManager::MCP_UpdatePresence(const class FString& Key, const class FString& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.MCP_UpdatePresence");

	UFGCheatManager_MCP_UpdatePresence_Params params;
	params.Key = Key;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.MCP_LogPresence
// ()

void UFGCheatManager::MCP_LogPresence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.MCP_LogPresence");

	UFGCheatManager_MCP_LogPresence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.MCP_Logout
// ()

void UFGCheatManager::MCP_Logout()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.MCP_Logout");

	UFGCheatManager_MCP_Logout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.MCP_Login
// ()
// Parameters:
// class FString                  UserName                       (Parm, ZeroConstructor)
// class FString                  password                       (Parm, ZeroConstructor)

void UFGCheatManager::MCP_Login(const class FString& UserName, const class FString& password)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.MCP_Login");

	UFGCheatManager_MCP_Login_Params params;
	params.UserName = UserName;
	params.password = password;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.MCP_GetOnlineStatus
// ()
// Parameters:
// int                            localPlayerNum                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::MCP_GetOnlineStatus(int localPlayerNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.MCP_GetOnlineStatus");

	UFGCheatManager_MCP_GetOnlineStatus_Params params;
	params.localPlayerNum = localPlayerNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.MCP_GetFriends
// ()

void UFGCheatManager::MCP_GetFriends()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.MCP_GetFriends");

	UFGCheatManager_MCP_GetFriends_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ListUnlockedRecipesAndSchematics
// ()

void UFGCheatManager::ListUnlockedRecipesAndSchematics()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ListUnlockedRecipesAndSchematics");

	UFGCheatManager_ListUnlockedRecipesAndSchematics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ListItemPickups
// ()

void UFGCheatManager::ListItemPickups()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ListItemPickups");

	UFGCheatManager_ListItemPickups_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ListDebugStartingPoint
// ()

void UFGCheatManager::ListDebugStartingPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ListDebugStartingPoint");

	UFGCheatManager_ListDebugStartingPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.HideFactoryOnly
// ()
// Parameters:
// bool                           factoryHidden                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::HideFactoryOnly(bool factoryHidden)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.HideFactoryOnly");

	UFGCheatManager_HideFactoryOnly_Params params;
	params.factoryHidden = factoryHidden;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.HideAllBuildings
// ()
// Parameters:
// bool                           InVisibility                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::HideAllBuildings(bool InVisibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.HideAllBuildings");

	UFGCheatManager_HideAllBuildings_Params params;
	params.InVisibility = InVisibility;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiveItem
// ()
// Parameters:
// class UClass*                  Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::GiveItem(class UClass* Resource, int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiveItem");

	UFGCheatManager_GiveItem_Params params;
	params.Resource = Resource;
	params.amount = amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiefStorySchematics
// ()

void UFGCheatManager::GiefStorySchematics()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiefStorySchematics");

	UFGCheatManager_GiefStorySchematics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiefStartingResearch
// ()

void UFGCheatManager::GiefStartingResearch()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiefStartingResearch");

	UFGCheatManager_GiefStartingResearch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiefSchematicsOfTier
// ()
// Parameters:
// int                            tier                           (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::GiefSchematicsOfTier(int tier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiefSchematicsOfTier");

	UFGCheatManager_GiefSchematicsOfTier_Params params;
	params.tier = tier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiefCheatSchematics
// ()

void UFGCheatManager::GiefCheatSchematics()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiefCheatSchematics");

	UFGCheatManager_GiefCheatSchematics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiefAvailableSchematics
// ()

void UFGCheatManager::GiefAvailableSchematics()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiefAvailableSchematics");

	UFGCheatManager_GiefAvailableSchematics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiefAllSchematicsAndPhases
// ()

void UFGCheatManager::GiefAllSchematicsAndPhases()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiefAllSchematicsAndPhases");

	UFGCheatManager_GiefAllSchematicsAndPhases_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiefALLSchematics
// ()

void UFGCheatManager::GiefALLSchematics()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiefALLSchematics");

	UFGCheatManager_GiefALLSchematics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GetVehicleInfo
// ()

void UFGCheatManager::GetVehicleInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GetVehicleInfo");

	UFGCheatManager_GetVehicleInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ForceSpawnCreatures
// ()

void UFGCheatManager::ForceSpawnCreatures()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ForceSpawnCreatures");

	UFGCheatManager_ForceSpawnCreatures_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.FlipVehicle
// ()

void UFGCheatManager::FlipVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.FlipVehicle");

	UFGCheatManager_FlipVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.FixupBuiltByRecipeInOldSave
// ()
// Parameters:
// bool                           reapplyRecipeIfBetterMatchFound (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::FixupBuiltByRecipeInOldSave(bool reapplyRecipeIfBetterMatchFound)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.FixupBuiltByRecipeInOldSave");

	UFGCheatManager_FixupBuiltByRecipeInOldSave_Params params;
	params.reapplyRecipeIfBetterMatchFound = reapplyRecipeIfBetterMatchFound;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.EnablePlayerFOV
// ()
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::EnablePlayerFOV(bool enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.EnablePlayerFOV");

	UFGCheatManager_EnablePlayerFOV_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.EnableInstancingOnFactory
// ()
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::EnableInstancingOnFactory(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.EnableInstancingOnFactory");

	UFGCheatManager_EnableInstancingOnFactory_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.EnableBuildableTick
// ()
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::EnableBuildableTick(bool enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.EnableBuildableTick");

	UFGCheatManager_EnableBuildableTick_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpTicking
// ()
// Parameters:
// bool                           detailed                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::DumpTicking(bool detailed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpTicking");

	UFGCheatManager_DumpTicking_Params params;
	params.detailed = detailed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpSchematics
// ()

void UFGCheatManager::DumpSchematics()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpSchematics");

	UFGCheatManager_DumpSchematics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpPlayerStates
// ()

void UFGCheatManager::DumpPlayerStates()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpPlayerStates");

	UFGCheatManager_DumpPlayerStates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpNonDormantActors
// ()

void UFGCheatManager::DumpNonDormantActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpNonDormantActors");

	UFGCheatManager_DumpNonDormantActors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpFactoryStatsToLog
// ()

void UFGCheatManager::DumpFactoryStatsToLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpFactoryStatsToLog");

	UFGCheatManager_DumpFactoryStatsToLog_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpAttachedToSkelMesh
// ()
// Parameters:
// bool                           detailed                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::DumpAttachedToSkelMesh(bool detailed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpAttachedToSkelMesh");

	UFGCheatManager_DumpAttachedToSkelMesh_Params params;
	params.detailed = detailed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpAllAvailableRecipes
// ()

void UFGCheatManager::DumpAllAvailableRecipes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpAllAvailableRecipes");

	UFGCheatManager_DumpAllAvailableRecipes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpActorRepresentations
// ()

void UFGCheatManager::DumpActorRepresentations()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpActorRepresentations");

	UFGCheatManager_DumpActorRepresentations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpActiveGPUParticles
// ()

void UFGCheatManager::DumpActiveGPUParticles()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpActiveGPUParticles");

	UFGCheatManager_DumpActiveGPUParticles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DestroyPawn
// ()

void UFGCheatManager::DestroyPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DestroyPawn");

	UFGCheatManager_DestroyPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DebugCrash
// ()

void UFGCheatManager::DebugCrash()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DebugCrash");

	UFGCheatManager_DebugCrash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.CompleteResearch
// ()

void UFGCheatManager::CompleteResearch()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.CompleteResearch");

	UFGCheatManager_CompleteResearch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ClearPardon
// ()

void UFGCheatManager::ClearPardon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ClearPardon");

	UFGCheatManager_ClearPardon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ClearGiveItemPopularList
// ()

void UFGCheatManager::ClearGiveItemPopularList()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ClearGiveItemPopularList");

	UFGCheatManager_ClearGiveItemPopularList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCircuit.GetCircuitID
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGCircuit::GetCircuitID()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuit.GetCircuitID");

	UFGCircuit_GetCircuitID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitConnectionComponent.ReceiveOnCircuitIDChanged
// ()

void UFGCircuitConnectionComponent::ReceiveOnCircuitIDChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.ReceiveOnCircuitIDChanged");

	UFGCircuitConnectionComponent_ReceiveOnCircuitIDChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCircuitConnectionComponent.IsHidden
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCircuitConnectionComponent::IsHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.IsHidden");

	UFGCircuitConnectionComponent_IsHidden_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitConnectionComponent.IsConnected
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGCircuitConnectionComponent::IsConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.IsConnected");

	UFGCircuitConnectionComponent_IsConnected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitConnectionComponent.GetNumHiddenConnections
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGCircuitConnectionComponent::GetNumHiddenConnections()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.GetNumHiddenConnections");

	UFGCircuitConnectionComponent_GetNumHiddenConnections_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitConnectionComponent.GetNumFreeConnections
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGCircuitConnectionComponent::GetNumFreeConnections()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.GetNumFreeConnections");

	UFGCircuitConnectionComponent_GetNumFreeConnections_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitConnectionComponent.GetNumConnections
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGCircuitConnectionComponent::GetNumConnections()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.GetNumConnections");

	UFGCircuitConnectionComponent_GetNumConnections_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitConnectionComponent.GetMaxNumConnections
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGCircuitConnectionComponent::GetMaxNumConnections()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.GetMaxNumConnections");

	UFGCircuitConnectionComponent_GetMaxNumConnections_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitConnectionComponent.GetCircuitID
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGCircuitConnectionComponent::GetCircuitID()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.GetCircuitID");

	UFGCircuitConnectionComponent_GetCircuitID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitSubsystem.PowerCircuit_OnFuseSet
// ()

void AFGCircuitSubsystem::PowerCircuit_OnFuseSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitSubsystem.PowerCircuit_OnFuseSet");

	AFGCircuitSubsystem_PowerCircuit_OnFuseSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCircuitSubsystem.PowerCircuit_OnFuseReset
// ()

void AFGCircuitSubsystem::PowerCircuit_OnFuseReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitSubsystem.PowerCircuit_OnFuseReset");

	AFGCircuitSubsystem_PowerCircuit_OnFuseReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCircuitSubsystem.OnRep_ReplicatedCircuits
// ()

void AFGCircuitSubsystem::OnRep_ReplicatedCircuits()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitSubsystem.OnRep_ReplicatedCircuits");

	AFGCircuitSubsystem_OnRep_ReplicatedCircuits_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCircuitSubsystem.GetCircuitSubsystem
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGCircuitSubsystem*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCircuitSubsystem* AFGCircuitSubsystem::GetCircuitSubsystem(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitSubsystem.GetCircuitSubsystem");

	AFGCircuitSubsystem_GetCircuitSubsystem_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitSubsystem.FindCircuit
// ()
// Parameters:
// int                            circuitID                      (Parm, ZeroConstructor, IsPlainOldData)
// class UFGCircuit*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGCircuit* AFGCircuitSubsystem::FindCircuit(int circuitID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitSubsystem.FindCircuit");

	AFGCircuitSubsystem_FindCircuit_Params params;
	params.circuitID = circuitID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeaponInstantFire.Server_NotifyMiss
// ()

void AFGWeaponInstantFire::Server_NotifyMiss()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponInstantFire.Server_NotifyMiss");

	AFGWeaponInstantFire_Server_NotifyMiss_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponInstantFire.Server_NotifyHit
// ()
// Parameters:
// struct FHitResult              HitResult                      (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void AFGWeaponInstantFire::Server_NotifyHit(const struct FHitResult& HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponInstantFire.Server_NotifyHit");

	AFGWeaponInstantFire_Server_NotifyHit_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.ToggleColorPickerUI
// ()

void AFGColorGun::ToggleColorPickerUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.ToggleColorPickerUI");

	AFGColorGun_ToggleColorPickerUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.Sever_SetSecondaryColorForSlot
// ()
// Parameters:
// unsigned char                  SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            NewColor                       (Parm, IsPlainOldData)

void AFGColorGun::Sever_SetSecondaryColorForSlot(unsigned char SlotIndex, const struct FLinearColor& NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.Sever_SetSecondaryColorForSlot");

	AFGColorGun_Sever_SetSecondaryColorForSlot_Params params;
	params.SlotIndex = SlotIndex;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.Sever_SetSecondaryColor
// ()
// Parameters:
// struct FLinearColor            NewColor                       (Parm, IsPlainOldData)

void AFGColorGun::Sever_SetSecondaryColor(const struct FLinearColor& NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.Sever_SetSecondaryColor");

	AFGColorGun_Sever_SetSecondaryColor_Params params;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.Sever_SetPrimaryColorForSlot
// ()
// Parameters:
// unsigned char                  SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            NewColor                       (Parm, IsPlainOldData)

void AFGColorGun::Sever_SetPrimaryColorForSlot(unsigned char SlotIndex, const struct FLinearColor& NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.Sever_SetPrimaryColorForSlot");

	AFGColorGun_Sever_SetPrimaryColorForSlot_Params params;
	params.SlotIndex = SlotIndex;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.Sever_SetPrimaryColor
// ()
// Parameters:
// struct FLinearColor            NewColor                       (Parm, IsPlainOldData)

void AFGColorGun::Sever_SetPrimaryColor(const struct FLinearColor& NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.Sever_SetPrimaryColor");

	AFGColorGun_Sever_SetPrimaryColor_Params params;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.Sever_SetColorSlot
// ()
// Parameters:
// unsigned char                  SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGColorGun::Sever_SetColorSlot(unsigned char SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.Sever_SetColorSlot");

	AFGColorGun_Sever_SetColorSlot_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.SetSecondaryColorForSlot
// ()
// Parameters:
// unsigned char                  SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            NewColor                       (Parm, IsPlainOldData)

void AFGColorGun::SetSecondaryColorForSlot(unsigned char SlotIndex, const struct FLinearColor& NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.SetSecondaryColorForSlot");

	AFGColorGun_SetSecondaryColorForSlot_Params params;
	params.SlotIndex = SlotIndex;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.SetSecondaryColor
// ()
// Parameters:
// struct FLinearColor            NewColor                       (Parm, IsPlainOldData)

void AFGColorGun::SetSecondaryColor(const struct FLinearColor& NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.SetSecondaryColor");

	AFGColorGun_SetSecondaryColor_Params params;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.SetPrimaryColorForSlot
// ()
// Parameters:
// unsigned char                  SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            NewColor                       (Parm, IsPlainOldData)

void AFGColorGun::SetPrimaryColorForSlot(unsigned char SlotIndex, const struct FLinearColor& NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.SetPrimaryColorForSlot");

	AFGColorGun_SetPrimaryColorForSlot_Params params;
	params.SlotIndex = SlotIndex;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.SetPrimaryColor
// ()
// Parameters:
// struct FLinearColor            NewColor                       (Parm, IsPlainOldData)

void AFGColorGun::SetPrimaryColor(const struct FLinearColor& NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.SetPrimaryColor");

	AFGColorGun_SetPrimaryColor_Params params;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.SetColorSlot
// ()
// Parameters:
// unsigned char                  SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGColorGun::SetColorSlot(unsigned char SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.SetColorSlot");

	AFGColorGun_SetColorSlot_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.OnTargetStateChanged
// ()
// Parameters:
// EFGColorGunTargetType          targetType                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGColorGun::OnTargetStateChanged(EFGColorGunTargetType targetType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.OnTargetStateChanged");

	AFGColorGun_OnTargetStateChanged_Params params;
	params.targetType = targetType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.OnSecondaryFirePressed
// ()

void AFGColorGun::OnSecondaryFirePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.OnSecondaryFirePressed");

	AFGColorGun_OnSecondaryFirePressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.GetSecondaryColorForSlot
// ()
// Parameters:
// unsigned char                  Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor AFGColorGun::GetSecondaryColorForSlot(unsigned char Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.GetSecondaryColorForSlot");

	AFGColorGun_GetSecondaryColorForSlot_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorGun.GetSecondaryColor
// ()
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor AFGColorGun::GetSecondaryColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.GetSecondaryColor");

	AFGColorGun_GetSecondaryColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorGun.GetPrimaryColorForSlot
// ()
// Parameters:
// unsigned char                  Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor AFGColorGun::GetPrimaryColorForSlot(unsigned char Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.GetPrimaryColorForSlot");

	AFGColorGun_GetPrimaryColorForSlot_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorGun.GetPrimaryColor
// ()
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor AFGColorGun::GetPrimaryColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.GetPrimaryColor");

	AFGColorGun_GetPrimaryColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorGun.GetMaxNumColorSlots
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AFGColorGun::GetMaxNumColorSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.GetMaxNumColorSlots");

	AFGColorGun_GetMaxNumColorSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorGun.GetColorSlotIndex
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AFGColorGun::GetColorSlotIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.GetColorSlotIndex");

	AFGColorGun_GetColorSlotIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorInterface.StopIsAimedAtForColor
// ()
// Parameters:
// class AFGCharacterPlayer*      byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGColorInterface::StopIsAimedAtForColor(class AFGCharacterPlayer* byCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorInterface.StopIsAimedAtForColor");

	UFGColorInterface_StopIsAimedAtForColor_Params params;
	params.byCharacter = byCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorInterface.StartIsAimedAtForColor
// ()
// Parameters:
// class AFGCharacterPlayer*      byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGColorInterface::StartIsAimedAtForColor(class AFGCharacterPlayer* byCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorInterface.StartIsAimedAtForColor");

	UFGColorInterface_StartIsAimedAtForColor_Params params;
	params.byCharacter = byCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorInterface.SetSecondaryColor
// ()
// Parameters:
// struct FLinearColor            NewColor                       (Parm, IsPlainOldData)

void UFGColorInterface::SetSecondaryColor(const struct FLinearColor& NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorInterface.SetSecondaryColor");

	UFGColorInterface_SetSecondaryColor_Params params;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorInterface.SetPrimaryColor
// ()
// Parameters:
// struct FLinearColor            NewColor                       (Parm, IsPlainOldData)

void UFGColorInterface::SetPrimaryColor(const struct FLinearColor& NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorInterface.SetPrimaryColor");

	UFGColorInterface_SetPrimaryColor_Params params;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorInterface.SetColorSlot
// ()
// Parameters:
// unsigned char                  Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGColorInterface::SetColorSlot(unsigned char Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorInterface.SetColorSlot");

	UFGColorInterface_SetColorSlot_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorInterface.GetSecondaryColor
// ()
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor UFGColorInterface::GetSecondaryColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorInterface.GetSecondaryColor");

	UFGColorInterface_GetSecondaryColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorInterface.GetPrimaryColor
// ()
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor UFGColorInterface::GetPrimaryColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorInterface.GetPrimaryColor");

	UFGColorInterface_GetPrimaryColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorInterface.GetColorSlot
// ()
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UFGColorInterface::GetColorSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorInterface.GetColorSlot");

	UFGColorInterface_GetColorSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorInterface.GetCanBeColored
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGColorInterface::GetCanBeColored()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorInterface.GetCanBeColored");

	UFGColorInterface_GetCanBeColored_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCombatFunctionLibrary.TryGetCharacterFromDamageCauser
// ()
// Parameters:
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGCharacterBase*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterBase* UFGCombatFunctionLibrary::TryGetCharacterFromDamageCauser(class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCombatFunctionLibrary.TryGetCharacterFromDamageCauser");

	UFGCombatFunctionLibrary_TryGetCharacterFromDamageCauser_Params params;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCombatFunctionLibrary.IsWithinRange
// ()
// Parameters:
// class APawn*                   attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class UFGAggroTargetInterface> victim                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          range                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCombatFunctionLibrary::IsWithinRange(class APawn* attacker, const TScriptInterface<class UFGAggroTargetInterface>& victim, float range)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCombatFunctionLibrary.IsWithinRange");

	UFGCombatFunctionLibrary_IsWithinRange_Params params;
	params.attacker = attacker;
	params.victim = victim;
	params.range = range;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCombatFunctionLibrary.IsWithinAttackRange
// ()
// Parameters:
// class APawn*                   attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class UFGAggroTargetInterface> victim                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  attackClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCombatFunctionLibrary::IsWithinAttackRange(class APawn* attacker, const TScriptInterface<class UFGAggroTargetInterface>& victim, class UClass* attackClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCombatFunctionLibrary.IsWithinAttackRange");

	UFGCombatFunctionLibrary_IsWithinAttackRange_Params params;
	params.attacker = attacker;
	params.victim = victim;
	params.attackClass = attackClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCombatFunctionLibrary.DoRadialDamageWithinCollision
// ()
// Parameters:
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// class UShapeComponent*         collisionShape                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 centerLocation                 (Parm, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGCombatFunctionLibrary::DoRadialDamageWithinCollision(class AController* Controller, class UShapeComponent* collisionShape, const struct FVector& centerLocation, class UClass* DamageType, float Damage, float Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCombatFunctionLibrary.DoRadialDamageWithinCollision");

	UFGCombatFunctionLibrary_DoRadialDamageWithinCollision_Params params;
	params.Controller = Controller;
	params.collisionShape = collisionShape;
	params.centerLocation = centerLocation;
	params.DamageType = DamageType;
	params.Damage = Damage;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassObjectWidget.SetAsStaticDirection
// ()
// Parameters:
// struct FVector                 Direction                      (Parm, IsPlainOldData)

void UFGCompassObjectWidget::SetAsStaticDirection(const struct FVector& Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.SetAsStaticDirection");

	UFGCompassObjectWidget_SetAsStaticDirection_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassObjectWidget.SetActorRepresentation
// ()
// Parameters:
// class UFGActorRepresentation*  actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassObjectWidget::SetActorRepresentation(class UFGActorRepresentation* actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.SetActorRepresentation");

	UFGCompassObjectWidget_SetActorRepresentation_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassObjectWidget.OnObjectCentered
// ()
// Parameters:
// bool                           centered                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassObjectWidget::OnObjectCentered(bool centered)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.OnObjectCentered");

	UFGCompassObjectWidget_OnObjectCentered_Params params;
	params.centered = centered;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassObjectWidget.OnCompassObjectUpdated
// ()

void UFGCompassObjectWidget::OnCompassObjectUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.OnCompassObjectUpdated");

	UFGCompassObjectWidget_OnCompassObjectUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassObjectWidget.OnCompassObjectAddedToPanel
// ()
// Parameters:
// class UCanvasPanelSlot*        parentSlot                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGCompassObjectWidget::OnCompassObjectAddedToPanel(class UCanvasPanelSlot* parentSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.OnCompassObjectAddedToPanel");

	UFGCompassObjectWidget_OnCompassObjectAddedToPanel_Params params;
	params.parentSlot = parentSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassObjectWidget.GetRepresentationType
// ()
// Parameters:
// ERepresentationType            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ERepresentationType UFGCompassObjectWidget::GetRepresentationType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.GetRepresentationType");

	UFGCompassObjectWidget_GetRepresentationType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassObjectWidget.GetDirectionFromLocation
// ()
// Parameters:
// struct FVector                 Location                       (Parm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UFGCompassObjectWidget::GetDirectionFromLocation(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.GetDirectionFromLocation");

	UFGCompassObjectWidget_GetDirectionFromLocation_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassObjectWidget.GetBlockingAmount
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGCompassObjectWidget::GetBlockingAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.GetBlockingAmount");

	UFGCompassObjectWidget_GetBlockingAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassObjectWidget.GetAngleFromDirection
// ()
// Parameters:
// struct FVector                 Direction                      (Parm, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGCompassObjectWidget::GetAngleFromDirection(const struct FVector& Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.GetAngleFromDirection");

	UFGCompassObjectWidget_GetAngleFromDirection_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassObjectWidget.GetAlphaAmount
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGCompassObjectWidget::GetAlphaAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.GetAlphaAmount");

	UFGCompassObjectWidget_GetAlphaAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassObjectWidget.GetActorRepresentation
// ()
// Parameters:
// class UFGActorRepresentation*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGActorRepresentation* UFGCompassObjectWidget::GetActorRepresentation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.GetActorRepresentation");

	UFGCompassObjectWidget_GetActorRepresentation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassWidget.RemoveCompassObjectForRepresentation
// ()
// Parameters:
// class UFGActorRepresentation*  actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassWidget::RemoveCompassObjectForRepresentation(class UFGActorRepresentation* actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.RemoveCompassObjectForRepresentation");

	UFGCompassWidget_RemoveCompassObjectForRepresentation_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassWidget.RemoveAllCompassRepresentations
// ()

void UFGCompassWidget::RemoveAllCompassRepresentations()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.RemoveAllCompassRepresentations");

	UFGCompassWidget_RemoveAllCompassRepresentations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassWidget.OnActorRepresentationUpdated
// ()
// Parameters:
// class UFGActorRepresentation*  actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassWidget::OnActorRepresentationUpdated(class UFGActorRepresentation* actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.OnActorRepresentationUpdated");

	UFGCompassWidget_OnActorRepresentationUpdated_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassWidget.OnActorRepresentationRemoved
// ()
// Parameters:
// class UFGActorRepresentation*  actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassWidget::OnActorRepresentationRemoved(class UFGActorRepresentation* actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.OnActorRepresentationRemoved");

	UFGCompassWidget_OnActorRepresentationRemoved_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassWidget.OnActorRepresentationAdded
// ()
// Parameters:
// class UFGActorRepresentation*  actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassWidget::OnActorRepresentationAdded(class UFGActorRepresentation* actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.OnActorRepresentationAdded");

	UFGCompassWidget_OnActorRepresentationAdded_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassWidget.GetCompassObjectWidgetClass
// ()
// Parameters:
// class UFGActorRepresentation*  actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGCompassWidget::GetCompassObjectWidgetClass(class UFGActorRepresentation* actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.GetCompassObjectWidgetClass");

	UFGCompassWidget_GetCompassObjectWidgetClass_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassWidget.GetCompassLineOffset
// ()
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UFGCompassWidget::GetCompassLineOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.GetCompassLineOffset");

	UFGCompassWidget_GetCompassLineOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassWidget.CreatePrimitiveCompassObject
// ()
// Parameters:
// class UClass*                  compassObjectTemplate          (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              Texture                        (Parm, ZeroConstructor, IsPlainOldData)
// class UFGCompassObjectWidget*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGCompassObjectWidget* UFGCompassWidget::CreatePrimitiveCompassObject(class UClass* compassObjectTemplate, class UTexture2D* Texture)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.CreatePrimitiveCompassObject");

	UFGCompassWidget_CreatePrimitiveCompassObject_Params params;
	params.compassObjectTemplate = compassObjectTemplate;
	params.Texture = Texture;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassWidget.CreateCompassObject
// ()
// Parameters:
// class UClass*                  compassObjectTemplate          (Parm, ZeroConstructor, IsPlainOldData)
// class UFGActorRepresentation*  actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)
// class UFGCompassObjectWidget*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGCompassObjectWidget* UFGCompassWidget::CreateCompassObject(class UClass* compassObjectTemplate, class UFGActorRepresentation* actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.CreateCompassObject");

	UFGCompassWidget_CreateCompassObject_Params params;
	params.compassObjectTemplate = compassObjectTemplate;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassWidget.BindActorRepresentationManager
// ()
// Parameters:
// class AFGActorRepresentationManager* representationManager          (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassWidget::BindActorRepresentationManager(class AFGActorRepresentationManager* representationManager)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.BindActorRepresentationManager");

	UFGCompassWidget_BindActorRepresentationManager_Params params;
	params.representationManager = representationManager;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassWidget.AddCompassObjectForRepresentation
// ()
// Parameters:
// class UClass*                  compassObjectTemplate          (Parm, ZeroConstructor, IsPlainOldData)
// class UFGActorRepresentation*  actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)
// class UFGCompassObjectWidget*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGCompassObjectWidget* UFGCompassWidget::AddCompassObjectForRepresentation(class UClass* compassObjectTemplate, class UFGActorRepresentation* actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.AddCompassObjectForRepresentation");

	UFGCompassWidget_AddCompassObjectForRepresentation_Params params;
	params.compassObjectTemplate = compassObjectTemplate;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassWidget.AddAllCompassRepresentations
// ()
// Parameters:
// class AFGActorRepresentationManager* representationManager          (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassWidget::AddAllCompassRepresentations(class AFGActorRepresentationManager* representationManager)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.AddAllCompassRepresentations");

	UFGCompassWidget_AddAllCompassRepresentations_Params params;
	params.representationManager = representationManager;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassWidget.AddAllCardinalDirections
// ()
// Parameters:
// class UClass*                  compassObjectTemplate          (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              northTex                       (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              eastTex                        (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              southTex                       (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              westTex                        (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              northWestTex                   (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              southEastTex                   (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              southWestText                  (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              northEastTex                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassWidget::AddAllCardinalDirections(class UClass* compassObjectTemplate, class UTexture2D* northTex, class UTexture2D* eastTex, class UTexture2D* southTex, class UTexture2D* westTex, class UTexture2D* northWestTex, class UTexture2D* southEastTex, class UTexture2D* southWestText, class UTexture2D* northEastTex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.AddAllCardinalDirections");

	UFGCompassWidget_AddAllCardinalDirections_Params params;
	params.compassObjectTemplate = compassObjectTemplate;
	params.northTex = northTex;
	params.eastTex = eastTex;
	params.southTex = southTex;
	params.westTex = westTex;
	params.northWestTex = northWestTex;
	params.southEastTex = southEastTex;
	params.southWestText = southWestText;
	params.northEastTex = northEastTex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConstructDisqualifier.GetDisqualifyingText
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGConstructDisqualifier::GetDisqualifyingText(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConstructDisqualifier.GetDisqualifyingText");

	UFGConstructDisqualifier_GetDisqualifyingText_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipmentDescriptor.GetEquipmentClass
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGEquipmentDescriptor::GetEquipmentClass(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentDescriptor.GetEquipmentClass");

	UFGEquipmentDescriptor_GetEquipmentClass_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGConsumableDescriptor.GetTPOverrideMesh
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* UFGConsumableDescriptor::GetTPOverrideMesh(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsumableDescriptor.GetTPOverrideMesh");

	UFGConsumableDescriptor_GetTPOverrideMesh_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGConsumableDescriptor.GetFPOverrideMesh
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMesh*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USkeletalMesh* UFGConsumableDescriptor::GetFPOverrideMesh(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsumableDescriptor.GetFPOverrideMesh");

	UFGConsumableDescriptor_GetFPOverrideMesh_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGConsumableDescriptor.ConsumedBy
// ()
// Parameters:
// class AFGCharacterPlayer*      Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGConsumableDescriptor::ConsumedBy(class AFGCharacterPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsumableDescriptor.ConsumedBy");

	UFGConsumableDescriptor_ConsumedBy_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConsumableEquipment.Server_PrimaryFire
// ()

void AFGConsumableEquipment::Server_PrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsumableEquipment.Server_PrimaryFire");

	AFGConsumableEquipment_Server_PrimaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConsumableEquipment.PlayConsumeEffects
// ()
// Parameters:
// class UFGConsumableDescriptor* consumable                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGConsumableEquipment::PlayConsumeEffects(class UFGConsumableDescriptor* consumable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsumableEquipment.PlayConsumeEffects");

	AFGConsumableEquipment_PlayConsumeEffects_Params params;
	params.consumable = consumable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConsumableEquipment.GetConsumeable
// ()
// Parameters:
// class UClass*                  out_consumeable                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            out_numConsumeable             (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AFGConsumableEquipment::GetConsumeable(class UClass** out_consumeable, int* out_numConsumeable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsumableEquipment.GetConsumeable");

	AFGConsumableEquipment_GetConsumeable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_consumeable != nullptr)
		*out_consumeable = params.out_consumeable;
	if (out_numConsumeable != nullptr)
		*out_numConsumeable = params.out_numConsumeable;
}


// Function FactoryGame.FGConveyorBeltHologram.OnRep_SplineData
// ()

void AFGConveyorBeltHologram::OnRep_SplineData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConveyorBeltHologram.OnRep_SplineData");

	AFGConveyorBeltHologram_OnRep_SplineData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConveyorBeltHologram.OnRep_ConnectionArrowComponentDirection
// ()

void AFGConveyorBeltHologram::OnRep_ConnectionArrowComponentDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConveyorBeltHologram.OnRep_ConnectionArrowComponentDirection");

	AFGConveyorBeltHologram_OnRep_ConnectionArrowComponentDirection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSplineHologram.OnRep_SplineData
// ()

void AFGSplineHologram::OnRep_SplineData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSplineHologram.OnRep_SplineData");

	AFGSplineHologram_OnRep_SplineData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConveyorLiftHologram.OnRep_TopTransform
// ()

void AFGConveyorLiftHologram::OnRep_TopTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConveyorLiftHologram.OnRep_TopTransform");

	AFGConveyorLiftHologram_OnRep_TopTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConveyorLiftHologram.OnRep_ArrowDirection
// ()

void AFGConveyorLiftHologram::OnRep_ArrowDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConveyorLiftHologram.OnRep_ArrowDirection");

	AFGConveyorLiftHologram_OnRep_ArrowDirection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPoleHologram.OnRep_PoleMesh
// ()

void AFGPoleHologram::OnRep_PoleMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPoleHologram.OnRep_PoleMesh");

	AFGPoleHologram_OnRep_PoleMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.StartRotationMovement
// ()
// Parameters:
// struct FRotator                TargetRotation                 (Parm, IsPlainOldData)

void AFGCreature::StartRotationMovement(const struct FRotator& TargetRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.StartRotationMovement");

	AFGCreature_StartRotationMovement_Params params;
	params.TargetRotation = TargetRotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.SpawnDeathItem
// ()

void AFGCreature::SpawnDeathItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.SpawnDeathItem");

	AFGCreature_SpawnDeathItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.SetPersistent
// ()
// Parameters:
// bool                           persist                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreature::SetPersistent(bool persist)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.SetPersistent");

	AFGCreature_SetPersistent_Params params;
	params.persist = persist;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.SetMoveSpeed
// ()
// Parameters:
// EMoveSpeed                     newMoveSpeedType               (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreature::SetMoveSpeed(EMoveSpeed newMoveSpeedType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.SetMoveSpeed");

	AFGCreature_SetMoveSpeed_Params params;
	params.newMoveSpeedType = newMoveSpeedType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.PlayConsumeItemEffect
// ()
// Parameters:
// class UClass*                  itemDescriptor                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreature::PlayConsumeItemEffect(class UClass* itemDescriptor, int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.PlayConsumeItemEffect");

	AFGCreature_PlayConsumeItemEffect_Params params;
	params.itemDescriptor = itemDescriptor;
	params.amount = amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.OnRep_TargetRotation
// ()

void AFGCreature::OnRep_TargetRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.OnRep_TargetRotation");

	AFGCreature_OnRep_TargetRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.OnRep_IsEnabled
// ()

void AFGCreature::OnRep_IsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.OnRep_IsEnabled");

	AFGCreature_OnRep_IsEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.OnArachnophobiaModeChanged
// ()
// Parameters:
// bool                           isArachnophobiaMode            (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreature::OnArachnophobiaModeChanged(bool isArachnophobiaMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.OnArachnophobiaModeChanged");

	AFGCreature_OnArachnophobiaModeChanged_Params params;
	params.isArachnophobiaMode = isArachnophobiaMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.Multicast_ConsumeItem
// ()
// Parameters:
// class UClass*                  itemDescriptor                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreature::Multicast_ConsumeItem(class UClass* itemDescriptor, int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.Multicast_ConsumeItem");

	AFGCreature_Multicast_ConsumeItem_Params params;
	params.itemDescriptor = itemDescriptor;
	params.amount = amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.IsPersistent
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCreature::IsPersistent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.IsPersistent");

	AFGCreature_IsPersistent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreature.GetTargetRotation
// ()
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator AFGCreature::GetTargetRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.GetTargetRotation");

	AFGCreature_GetTargetRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreature.GetSplinePath
// ()
// Parameters:
// class AFGSplinePath*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGSplinePath* AFGCreature::GetSplinePath()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.GetSplinePath");

	AFGCreature_GetSplinePath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreature.GetIsEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCreature::GetIsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.GetIsEnabled");

	AFGCreature_GetIsEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreature.GetIsArachnid
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCreature::GetIsArachnid()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.GetIsArachnid");

	AFGCreature_GetIsArachnid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreature.GetDayTimePctAsNight
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGCreature::GetDayTimePctAsNight()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.GetDayTimePctAsNight");

	AFGCreature_GetDayTimePctAsNight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreature.GetArachnophobiaModeMaterials
// ()
// Parameters:
// TArray<class UMaterialInstance*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UMaterialInstance*> AFGCreature::GetArachnophobiaModeMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.GetArachnophobiaModeMaterials");

	AFGCreature_GetArachnophobiaModeMaterials_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreature.ConfigureArachnophobiaMode
// ()
// Parameters:
// bool                           isArachnophobiaMode            (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreature::ConfigureArachnophobiaMode(bool isArachnophobiaMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.ConfigureArachnophobiaMode");

	AFGCreature_ConfigureArachnophobiaMode_Params params;
	params.isArachnophobiaMode = isArachnophobiaMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.CheckRotationMovement
// ()

void AFGCreature::CheckRotationMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.CheckRotationMovement");

	AFGCreature_CheckRotationMovement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.CancelRotationMovement
// ()

void AFGCreature::CancelRotationMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.CancelRotationMovement");

	AFGCreature_CancelRotationMovement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.AiCalculateLeadTrajectory
// ()
// Parameters:
// struct FVector                 targetPos                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 targetVelocity                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 fromPos                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          interceptorSpeed               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isPosibleToLead                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 interceptPoint                 (Parm, OutParm, IsPlainOldData)
// float                          leadScaling                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreature::AiCalculateLeadTrajectory(const struct FVector& targetPos, const struct FVector& targetVelocity, const struct FVector& fromPos, float interceptorSpeed, float leadScaling, bool* isPosibleToLead, struct FVector* interceptPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.AiCalculateLeadTrajectory");

	AFGCreature_AiCalculateLeadTrajectory_Params params;
	params.targetPos = targetPos;
	params.targetVelocity = targetVelocity;
	params.fromPos = fromPos;
	params.interceptorSpeed = interceptorSpeed;
	params.leadScaling = leadScaling;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (isPosibleToLead != nullptr)
		*isPosibleToLead = params.isPosibleToLead;
	if (interceptPoint != nullptr)
		*interceptPoint = params.interceptPoint;
}


// Function FactoryGame.FGEnemy.PerformCustomRadialAttack
// ()

void AFGEnemy::PerformCustomRadialAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemy.PerformCustomRadialAttack");

	AFGEnemy_PerformCustomRadialAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemy.OnRep_CurrentAggroTarget
// ()

void AFGEnemy::OnRep_CurrentAggroTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemy.OnRep_CurrentAggroTarget");

	AFGEnemy_OnRep_CurrentAggroTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemy.OnCurrentAggroTargetReplicated
// ()

void AFGEnemy::OnCurrentAggroTargetReplicated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemy.OnCurrentAggroTargetReplicated");

	AFGEnemy_OnCurrentAggroTargetReplicated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemy.GetCurrentAttackTask
// ()
// Parameters:
// class UFGGameplayTask_Attack*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGGameplayTask_Attack* AFGEnemy::GetCurrentAttackTask()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemy.GetCurrentAttackTask");

	AFGEnemy_GetCurrentAttackTask_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemy.GetCurrentAggroTarget
// ()
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AFGEnemy::GetCurrentAggroTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemy.GetCurrentAggroTarget");

	AFGEnemy_GetCurrentAggroTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemy.GetAttackLocation
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector AFGEnemy::GetAttackLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemy.GetAttackLocation");

	AFGEnemy_GetAttackLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCrabHatcher.StartExpanding
// ()

void AFGCrabHatcher::StartExpanding()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrabHatcher.StartExpanding");

	AFGCrabHatcher_StartExpanding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCrabHatcher.SpawnCrabs
// ()

void AFGCrabHatcher::SpawnCrabs()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrabHatcher.SpawnCrabs");

	AFGCrabHatcher_SpawnCrabs_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCrabHatcher.SetThreatNearby
// ()
// Parameters:
// bool                           inNearby                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGCrabHatcher::SetThreatNearby(bool inNearby)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrabHatcher.SetThreatNearby");

	AFGCrabHatcher_SetThreatNearby_Params params;
	params.inNearby = inNearby;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCrabHatcher.SetDidSpawnCrabs
// ()
// Parameters:
// bool                           inDidSPawn                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGCrabHatcher::SetDidSpawnCrabs(bool inDidSPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrabHatcher.SetDidSpawnCrabs");

	AFGCrabHatcher_SetDidSpawnCrabs_Params params;
	params.inDidSPawn = inDidSPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCrabHatcher.SetAnimationLength
// ()
// Parameters:
// float                          animLength                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGCrabHatcher::SetAnimationLength(float animLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrabHatcher.SetAnimationLength");

	AFGCrabHatcher_SetAnimationLength_Params params;
	params.animLength = animLength;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCrabHatcher.GetThreatNearby
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCrabHatcher::GetThreatNearby()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrabHatcher.GetThreatNearby");

	AFGCrabHatcher_GetThreatNearby_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInteractActor.OnInteract
// ()
// Parameters:
// class AFGCharacterPlayer*      byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGInteractActor::OnInteract(class AFGCharacterPlayer* byCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractActor.OnInteract");

	AFGInteractActor_OnInteract_Params params;
	params.byCharacter = byCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCrate.OnRequestReprecentMarker
// ()

void AFGCrate::OnRequestReprecentMarker()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrate.OnRequestReprecentMarker");

	AFGCrate_OnRequestReprecentMarker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCrate.GetInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGCrate::GetInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrate.GetInventory");

	AFGCrate_GetInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCrate.FilterInventoryClasses
// ()
// Parameters:
// class UClass*                  Object                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCrate::FilterInventoryClasses(class UClass* Object, int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrate.FilterInventoryClasses");

	AFGCrate_FilterInventoryClasses_Params params;
	params.Object = Object;
	params.idx = idx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreatureController.StopPanic
// ()

void AFGCreatureController::StopPanic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureController.StopPanic");

	AFGCreatureController_StopPanic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreatureController.StartPanic
// ()

void AFGCreatureController::StartPanic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureController.StartPanic");

	AFGCreatureController_StartPanic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreatureController.SetEnabled
// ()
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreatureController::SetEnabled(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureController.SetEnabled");

	AFGCreatureController_SetEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreatureController.OnTargetPerceptionUpdated
// ()
// Parameters:
// class AActor*                  inActor                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FAIStimulus             Stimulus                       (Parm)

void AFGCreatureController::OnTargetPerceptionUpdated(class AActor* inActor, const struct FAIStimulus& Stimulus)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureController.OnTargetPerceptionUpdated");

	AFGCreatureController_OnTargetPerceptionUpdated_Params params;
	params.inActor = inActor;
	params.Stimulus = Stimulus;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDriveablePawn.ShouldAttachDriver
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGDriveablePawn::ShouldAttachDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.ShouldAttachDriver");

	AFGDriveablePawn_ShouldAttachDriver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.ReceiveOnDriverLeave
// ()

void AFGDriveablePawn::ReceiveOnDriverLeave()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.ReceiveOnDriverLeave");

	AFGDriveablePawn_ReceiveOnDriverLeave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDriveablePawn.ReceiveOnDriverEnter
// ()

void AFGDriveablePawn::ReceiveOnDriverEnter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.ReceiveOnDriverEnter");

	AFGDriveablePawn_ReceiveOnDriverEnter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDriveablePawn.PlaceExitingDriver
// ()

void AFGDriveablePawn::PlaceExitingDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.PlaceExitingDriver");

	AFGDriveablePawn_PlaceExitingDriver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDriveablePawn.OnRep_IsDriving
// ()

void AFGDriveablePawn::OnRep_IsDriving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.OnRep_IsDriving");

	AFGDriveablePawn_OnRep_IsDriving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDriveablePawn.IsDriving
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGDriveablePawn::IsDriving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.IsDriving");

	AFGDriveablePawn_IsDriving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.IsDriverVisible
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGDriveablePawn::IsDriverVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.IsDriverVisible");

	AFGDriveablePawn_IsDriverVisible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.HasPendingDriver
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGDriveablePawn::HasPendingDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.HasPendingDriver");

	AFGDriveablePawn_HasPendingDriver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.GetDriverSeatSocket
// ()
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName AFGDriveablePawn::GetDriverSeatSocket()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.GetDriverSeatSocket");

	AFGDriveablePawn_GetDriverSeatSocket_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.GetDriverSeatAnimation
// ()
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequence* AFGDriveablePawn::GetDriverSeatAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.GetDriverSeatAnimation");

	AFGDriveablePawn_GetDriverSeatAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.GetDriverExitOffset
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector AFGDriveablePawn::GetDriverExitOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.GetDriverExitOffset");

	AFGDriveablePawn_GetDriverExitOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.GetDriver
// ()
// Parameters:
// class AFGCharacterPlayer*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterPlayer* AFGDriveablePawn::GetDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.GetDriver");

	AFGDriveablePawn_GetDriver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.DriverLeave
// ()
// Parameters:
// bool                           keepDriving                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGDriveablePawn::DriverLeave(bool keepDriving)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.DriverLeave");

	AFGDriveablePawn_DriverLeave_Params params;
	params.keepDriving = keepDriving;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.DriverEnter
// ()
// Parameters:
// class AFGCharacterPlayer*      Driver                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGDriveablePawn::DriverEnter(class AFGCharacterPlayer* Driver)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.DriverEnter");

	AFGDriveablePawn_DriverEnter_Params params;
	params.Driver = Driver;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.CanDriverEnter
// ()
// Parameters:
// class AFGCharacterPlayer*      Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGDriveablePawn::CanDriverEnter(class AFGCharacterPlayer* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.CanDriverEnter");

	AFGDriveablePawn_CanDriverEnter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreatureSeat.GetMountedCreature
// ()
// Parameters:
// class AFGCreature*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCreature* AFGCreatureSeat::GetMountedCreature()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureSeat.GetMountedCreature");

	AFGCreatureSeat_GetMountedCreature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreatureSpawner.SpawnCreatures
// ()

void AFGCreatureSpawner::SpawnCreatures()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureSpawner.SpawnCreatures");

	AFGCreatureSpawner_SpawnCreatures_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreatureSpawner.IsSpawnerActive
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCreatureSpawner::IsSpawnerActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureSpawner.IsSpawnerActive");

	AFGCreatureSpawner_IsSpawnerActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreatureSpawner.GetSplines
// ()
// Parameters:
// TArray<class AFGSplinePath*>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AFGSplinePath*> AFGCreatureSpawner::GetSplines()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureSpawner.GetSplines");

	AFGCreatureSpawner_GetSplines_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreatureSpawner.DestroyCreatures
// ()

void AFGCreatureSpawner::DestroyCreatures()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureSpawner.DestroyCreatures");

	AFGCreatureSpawner_DestroyCreatures_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreatureSpawner.CreatureDied
// ()
// Parameters:
// class AActor*                  thisActor                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreatureSpawner::CreatureDied(class AActor* thisActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureSpawner.CreatureDied");

	AFGCreatureSpawner_CreatureDied_Params params;
	params.thisActor = thisActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreatureSpawner.CalculateSpawningLocations
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCreatureSpawner::CalculateSpawningLocations()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureSpawner.CalculateSpawningLocations");

	AFGCreatureSpawner_CalculateSpawningLocations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDamageOverTime.ShouldBeAppliedToActor
// ()
// Parameters:
// class UClass*                  dotClass                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGDamageOverTime::ShouldBeAppliedToActor(class UClass* dotClass, class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDamageOverTime.ShouldBeAppliedToActor");

	UFGDamageOverTime_ShouldBeAppliedToActor_Params params;
	params.dotClass = dotClass;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDamageOverTime.GetDamageInterval
// ()
// Parameters:
// class UClass*                  dotClass                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGDamageOverTime::GetDamageInterval(class UClass* dotClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDamageOverTime.GetDamageInterval");

	UFGDamageOverTime_GetDamageInterval_Params params;
	params.dotClass = dotClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDamageOverTime.GetDamageClass
// ()
// Parameters:
// class UClass*                  dotClass                       (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGDamageOverTime::GetDamageClass(class UClass* dotClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDamageOverTime.GetDamageClass");

	UFGDamageOverTime_GetDamageClass_Params params;
	params.dotClass = dotClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDamageOverTime.GetDamageAmount
// ()
// Parameters:
// class UClass*                  dotClass                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGDamageOverTime::GetDamageAmount(class UClass* dotClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDamageOverTime.GetDamageAmount");

	UFGDamageOverTime_GetDamageAmount_Params params;
	params.dotClass = dotClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDecorDescriptor.GetDecorMesh
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* UFGDecorDescriptor::GetDecorMesh(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDecorDescriptor.GetDecorMesh");

	UFGDecorDescriptor_GetDecorMesh_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDestructibleActor.PlayDestructEffects
// ()

void AFGDestructibleActor::PlayDestructEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDestructibleActor.PlayDestructEffects");

	AFGDestructibleActor_PlayDestructEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDestructibleActor.OnDestructibleFractured
// ()
// Parameters:
// struct FVector                 HitPoint                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 HitDirection                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFGDestructibleActor::OnDestructibleFractured(const struct FVector& HitPoint, const struct FVector& HitDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDestructibleActor.OnDestructibleFractured");

	AFGDestructibleActor_OnDestructibleFractured_Params params;
	params.HitPoint = HitPoint;
	params.HitDirection = HitDirection;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDestructibleActor.Multicast_OnDestructibleFractured
// ()
// Parameters:
// struct FVector                 HitPoint                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 HitDirection                   (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void AFGDestructibleActor::Multicast_OnDestructibleFractured(const struct FVector& HitPoint, const struct FVector& HitDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDestructibleActor.Multicast_OnDestructibleFractured");

	AFGDestructibleActor_Multicast_OnDestructibleFractured_Params params;
	params.HitPoint = HitPoint;
	params.HitDirection = HitDirection;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.SetTargetLocation
// ()
// Parameters:
// struct FVector                 TargetLocation                 (Parm, IsPlainOldData)

void AFGProjectile::SetTargetLocation(const struct FVector& TargetLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.SetTargetLocation");

	AFGProjectile_SetTargetLocation_Params params;
	params.TargetLocation = TargetLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.SetInitialVelocity
// ()
// Parameters:
// struct FVector                 inVelocity                     (Parm, IsPlainOldData)

void AFGProjectile::SetInitialVelocity(const struct FVector& inVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.SetInitialVelocity");

	AFGProjectile_SetInitialVelocity_Params params;
	params.inVelocity = inVelocity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.PlayExplosionEffects
// ()

void AFGProjectile::PlayExplosionEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.PlayExplosionEffects");

	AFGProjectile_PlayExplosionEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.PlayAttachEffect
// ()

void AFGProjectile::PlayAttachEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.PlayAttachEffect");

	AFGProjectile_PlayAttachEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.OnRep_InitialVelocity
// ()

void AFGProjectile::OnRep_InitialVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.OnRep_InitialVelocity");

	AFGProjectile_OnRep_InitialVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.OnRep_Exploded
// ()

void AFGProjectile::OnRep_Exploded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.OnRep_Exploded");

	AFGProjectile_OnRep_Exploded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.OnImpact
// ()
// Parameters:
// struct FHitResult              HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFGProjectile::OnImpact(const struct FHitResult& HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.OnImpact");

	AFGProjectile_OnImpact_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.OnBounce
// ()
// Parameters:
// struct FHitResult              HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 hitVelocity                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFGProjectile::OnBounce(const struct FHitResult& HitResult, const struct FVector& hitVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.OnBounce");

	AFGProjectile_OnBounce_Params params;
	params.HitResult = HitResult;
	params.hitVelocity = hitVelocity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.GetProjectileTargetLocation
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector AFGProjectile::GetProjectileTargetLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.GetProjectileTargetLocation");

	AFGProjectile_GetProjectileTargetLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGProjectile.GetCollisionSphere
// ()
// Parameters:
// class USphereComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USphereComponent* AFGProjectile::GetCollisionSphere()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.GetCollisionSphere");

	AFGProjectile_GetCollisionSphere_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDismantleInterface.Upgrade
// ()
// Parameters:
// class AActor*                  newActor                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGDismantleInterface::Upgrade(class AActor* newActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDismantleInterface.Upgrade");

	UFGDismantleInterface_Upgrade_Params params;
	params.newActor = newActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDismantleInterface.StopIsLookedAtForDismantle
// ()
// Parameters:
// class AFGCharacterPlayer*      byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGDismantleInterface::StopIsLookedAtForDismantle(class AFGCharacterPlayer* byCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDismantleInterface.StopIsLookedAtForDismantle");

	UFGDismantleInterface_StopIsLookedAtForDismantle_Params params;
	params.byCharacter = byCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDismantleInterface.StartIsLookedAtForDismantle
// ()
// Parameters:
// class AFGCharacterPlayer*      byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGDismantleInterface::StartIsLookedAtForDismantle(class AFGCharacterPlayer* byCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDismantleInterface.StartIsLookedAtForDismantle");

	UFGDismantleInterface_StartIsLookedAtForDismantle_Params params;
	params.byCharacter = byCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDismantleInterface.PreUpgrade
// ()

void UFGDismantleInterface::PreUpgrade()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDismantleInterface.PreUpgrade");

	UFGDismantleInterface_PreUpgrade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDismantleInterface.GetRefundSpawnLocationAndArea
// ()
// Parameters:
// struct FVector                 aimHitLocation                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          out_radius                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UFGDismantleInterface::GetRefundSpawnLocationAndArea(const struct FVector& aimHitLocation, float* out_radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDismantleInterface.GetRefundSpawnLocationAndArea");

	UFGDismantleInterface_GetRefundSpawnLocationAndArea_Params params;
	params.aimHitLocation = aimHitLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_radius != nullptr)
		*out_radius = params.out_radius;

	return params.ReturnValue;
}


// Function FactoryGame.FGDismantleInterface.GetDismantleRefund
// ()
// Parameters:
// TArray<struct FInventoryStack> out_refund                     (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGDismantleInterface::GetDismantleRefund(TArray<struct FInventoryStack>* out_refund)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDismantleInterface.GetDismantleRefund");

	UFGDismantleInterface_GetDismantleRefund_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_refund != nullptr)
		*out_refund = params.out_refund;
}


// Function FactoryGame.FGDismantleInterface.Dismantle
// ()

void UFGDismantleInterface::Dismantle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDismantleInterface.Dismantle");

	UFGDismantleInterface_Dismantle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDismantleInterface.CanDismantle
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGDismantleInterface::CanDismantle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDismantleInterface.CanDismantle");

	UFGDismantleInterface_CanDismantle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHotbarShortcut.IsValidShortcut
// ()
// Parameters:
// class AFGPlayerController*     Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGHotbarShortcut::IsValidShortcut(class AFGPlayerController* Owner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHotbarShortcut.IsValidShortcut");

	UFGHotbarShortcut_IsValidShortcut_Params params;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHotbarShortcut.IsActive
// ()
// Parameters:
// class AFGPlayerController*     Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGHotbarShortcut::IsActive(class AFGPlayerController* Owner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHotbarShortcut.IsActive");

	UFGHotbarShortcut_IsActive_Params params;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHotbarShortcut.GetDisplayImage
// ()
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFGHotbarShortcut::GetDisplayImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHotbarShortcut.GetDisplayImage");

	UFGHotbarShortcut_GetDisplayImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHotbarShortcut.Execute
// ()
// Parameters:
// class AFGPlayerController*     Owner                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGHotbarShortcut::Execute(class AFGPlayerController* Owner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHotbarShortcut.Execute");

	UFGHotbarShortcut_Execute_Params params;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDockableInterface.WasUndocked
// ()

void UFGDockableInterface::WasUndocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDockableInterface.WasUndocked");

	UFGDockableInterface_WasUndocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDockableInterface.WasDocked
// ()
// Parameters:
// class AFGBuildableDockingStation* atStation                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGDockableInterface::WasDocked(class AFGBuildableDockingStation* atStation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDockableInterface.WasDocked");

	UFGDockableInterface_WasDocked_Params params;
	params.atStation = atStation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDockableInterface.OnTransferComplete
// ()

void UFGDockableInterface::OnTransferComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDockableInterface.OnTransferComplete");

	UFGDockableInterface_OnTransferComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDockableInterface.OnBeginUnloadVehicle
// ()

void UFGDockableInterface::OnBeginUnloadVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDockableInterface.OnBeginUnloadVehicle");

	UFGDockableInterface_OnBeginUnloadVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDockableInterface.OnBeginLoadVehicle
// ()

void UFGDockableInterface::OnBeginLoadVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDockableInterface.OnBeginLoadVehicle");

	UFGDockableInterface_OnBeginLoadVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDockableInterface.GetDockInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* UFGDockableInterface::GetDockInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDockableInterface.GetDockInventory");

	UFGDockableInterface_GetDockInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDockableInterface.GetDockFuelInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* UFGDockableInterface::GetDockFuelInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDockableInterface.GetDockFuelInventory");

	UFGDockableInterface_GetDockFuelInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDockableInterface.CanDock
// ()
// Parameters:
// EDockStationType               atStation                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGDockableInterface::CanDock(EDockStationType atStation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDockableInterface.CanDock");

	UFGDockableInterface_CanDock_Params params;
	params.atStation = atStation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDotComponent.OnPrimitiveComponentExited
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGDotComponent::OnPrimitiveComponentExited(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDotComponent.OnPrimitiveComponentExited");

	UFGDotComponent_OnPrimitiveComponentExited_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDotComponent.OnPrimitiveComponentEntered
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           fromSweep                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UFGDotComponent::OnPrimitiveComponentEntered(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool fromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDotComponent.OnPrimitiveComponentEntered");

	UFGDotComponent_OnPrimitiveComponentEntered_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.fromSweep = fromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDotComponent.DamageContainingActors
// ()

void UFGDotComponent::DamageContainingActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDotComponent.DamageContainingActors");

	UFGDotComponent_DamageContainingActors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDropPod.RollLoot
// ()

void AFGDropPod::RollLoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPod.RollLoot");

	AFGDropPod_RollLoot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDropPod.RollDropPackage
// ()
// Parameters:
// TArray<class UClass*>          includedItems                  (Parm, ZeroConstructor)
// struct FDropPackage            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FDropPackage AFGDropPod::RollDropPackage(TArray<class UClass*> includedItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPod.RollDropPackage");

	AFGDropPod_RollDropPackage_Params params;
	params.includedItems = includedItems;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDropPod.Open
// ()

void AFGDropPod::Open()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPod.Open");

	AFGDropPod_Open_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDropPod.OnRep_HasBeenOpened
// ()

void AFGDropPod::OnRep_HasBeenOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPod.OnRep_HasBeenOpened");

	AFGDropPod_OnRep_HasBeenOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDropPod.OnOpened
// ()

void AFGDropPod::OnOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPod.OnOpened");

	AFGDropPod_OnOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDropPod.HasBeenOpened
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGDropPod::HasBeenOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPod.HasBeenOpened");

	AFGDropPod_HasBeenOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDropPod.GetLootInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGDropPod::GetLootInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPod.GetLootInventory");

	AFGDropPod_GetLootInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDropPod.GenerateDropPodInventory
// ()
// Parameters:
// TArray<class UClass*>          includedItems                  (Parm, ZeroConstructor)
// int                            numItemsCreated                (Parm, ZeroConstructor, IsPlainOldData)

void AFGDropPod::GenerateDropPodInventory(TArray<class UClass*> includedItems, int numItemsCreated)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPod.GenerateDropPodInventory");

	AFGDropPod_GenerateDropPodInventory_Params params;
	params.includedItems = includedItems;
	params.numItemsCreated = numItemsCreated;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDropPodSettings.GetRandomDropPackage
// ()
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FDropPackage            ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm)

struct FDropPackage UFGDropPodSettings::GetRandomDropPackage(class UWorld* World)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPodSettings.GetRandomDropPackage");

	UFGDropPodSettings_GetRandomDropPackage_Params params;
	params.World = World;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.UpdateAttackPattern
// ()

void AFGEnemyController::UpdateAttackPattern()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.UpdateAttackPattern");

	AFGEnemyController_UpdateAttackPattern_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.UpdateAggroTargets
// ()
// Parameters:
// float                          dt                             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           fullCheck                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGEnemyController::UpdateAggroTargets(float dt, bool fullCheck)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.UpdateAggroTargets");

	AFGEnemyController_UpdateAggroTargets_Params params;
	params.dt = dt;
	params.fullCheck = fullCheck;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.UpdateAggroAndFindAndAssignTarget
// ()

void AFGEnemyController::UpdateAggroAndFindAndAssignTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.UpdateAggroAndFindAndAssignTarget");

	AFGEnemyController_UpdateAggroAndFindAndAssignTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.ShouldAddAggroTarget
// ()
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface> aggroTargetInterface           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEnemyController::ShouldAddAggroTarget(const TScriptInterface<class UFGAggroTargetInterface>& aggroTargetInterface)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.ShouldAddAggroTarget");

	AFGEnemyController_ShouldAddAggroTarget_Params params;
	params.aggroTargetInterface = aggroTargetInterface;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.SetCurrentAggroTarget
// ()
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface> newAggroTargetInterface        (Parm, ZeroConstructor, IsPlainOldData)

void AFGEnemyController::SetCurrentAggroTarget(const TScriptInterface<class UFGAggroTargetInterface>& newAggroTargetInterface)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.SetCurrentAggroTarget");

	AFGEnemyController_SetCurrentAggroTarget_Params params;
	params.newAggroTargetInterface = newAggroTargetInterface;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.ResetLastValidTargetLocation
// ()

void AFGEnemyController::ResetLastValidTargetLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.ResetLastValidTargetLocation");

	AFGEnemyController_ResetLastValidTargetLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.RemoveInvalidAggroTargets
// ()

void AFGEnemyController::RemoveInvalidAggroTargets()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.RemoveInvalidAggroTargets");

	AFGEnemyController_RemoveInvalidAggroTargets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.OnPawnTakeDamage
// ()
// Parameters:
// class AActor*                  damagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGEnemyController::OnPawnTakeDamage(class AActor* damagedActor, float damageAmount, class UDamageType* DamageType, class AController* instigatedBy, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.OnPawnTakeDamage");

	AFGEnemyController_OnPawnTakeDamage_Params params;
	params.damagedActor = damagedActor;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.instigatedBy = instigatedBy;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.OnAggroTargetUpdated
// ()

void AFGEnemyController::OnAggroTargetUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.OnAggroTargetUpdated");

	AFGEnemyController_OnAggroTargetUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.OnAggroTargetLost
// ()
// Parameters:
// class AActor*                  lostActor                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGEnemyController::OnAggroTargetLost(class AActor* lostActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.OnAggroTargetLost");

	AFGEnemyController_OnAggroTargetLost_Params params;
	params.lostActor = lostActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.IsOnIgnoreList
// ()
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface> aggroTargetInterface           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEnemyController::IsOnIgnoreList(const TScriptInterface<class UFGAggroTargetInterface>& aggroTargetInterface)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.IsOnIgnoreList");

	AFGEnemyController_IsOnIgnoreList_Params params;
	params.aggroTargetInterface = aggroTargetInterface;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.GetTargetLastValidLocation
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector AFGEnemyController::GetTargetLastValidLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.GetTargetLastValidLocation");

	AFGEnemyController_GetTargetLastValidLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.GetTargetingDesireFromAggroEntry
// ()
// Parameters:
// struct FAggroEntry             outTarget                      (Parm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGEnemyController::GetTargetingDesireFromAggroEntry(const struct FAggroEntry& outTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.GetTargetingDesireFromAggroEntry");

	AFGEnemyController_GetTargetingDesireFromAggroEntry_Params params;
	params.outTarget = outTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.GetTargetingDesire
// ()
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface> aggroTarget                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGEnemyController::GetTargetingDesire(const TScriptInterface<class UFGAggroTargetInterface>& aggroTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.GetTargetingDesire");

	AFGEnemyController_GetTargetingDesire_Params params;
	params.aggroTarget = aggroTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.GetMostDesirableAggroTarget
// ()
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TScriptInterface<class UFGAggroTargetInterface> AFGEnemyController::GetMostDesirableAggroTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.GetMostDesirableAggroTarget");

	AFGEnemyController_GetMostDesirableAggroTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.GetCurrentAttackFromPattern
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGEnemyController::GetCurrentAttackFromPattern()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.GetCurrentAttackFromPattern");

	AFGEnemyController_GetCurrentAttackFromPattern_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.GetAttackPatternIndex
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGEnemyController::GetAttackPatternIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.GetAttackPatternIndex");

	AFGEnemyController_GetAttackPatternIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.GetAggroThreshold
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGEnemyController::GetAggroThreshold()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.GetAggroThreshold");

	AFGEnemyController_GetAggroThreshold_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.GatherAggroTargets
// ()

void AFGEnemyController::GatherAggroTargets()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.GatherAggroTargets");

	AFGEnemyController_GatherAggroTargets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.FindAndAssignTarget
// ()

void AFGEnemyController::FindAndAssignTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.FindAndAssignTarget");

	AFGEnemyController_FindAndAssignTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.ClearAllAggroTargetsAndUpdate
// ()

void AFGEnemyController::ClearAllAggroTargetsAndUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.ClearAllAggroTargetsAndUpdate");

	AFGEnemyController_ClearAllAggroTargetsAndUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.CanSeeActor
// ()
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEnemyController::CanSeeActor(class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.CanSeeActor");

	AFGEnemyController_CanSeeActor_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.AggroTargetRemoved
// ()
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface> aggroTarget                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGEnemyController::AggroTargetRemoved(const TScriptInterface<class UFGAggroTargetInterface>& aggroTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.AggroTargetRemoved");

	AFGEnemyController_AggroTargetRemoved_Params params;
	params.aggroTarget = aggroTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.AggroTargetAdded
// ()
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface> aggroTarget                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGEnemyController::AggroTargetAdded(const TScriptInterface<class UFGAggroTargetInterface>& aggroTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.AggroTargetAdded");

	AFGEnemyController_AggroTargetAdded_Params params;
	params.aggroTarget = aggroTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.AddToAggroByTarget
// ()
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface> Target                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGEnemyController::AddToAggroByTarget(const TScriptInterface<class UFGAggroTargetInterface>& Target, float Damage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.AddToAggroByTarget");

	AFGEnemyController_AddToAggroByTarget_Params params;
	params.Target = Target;
	params.Damage = Damage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentChild.OnUnEquip
// ()

void AFGEquipmentChild::OnUnEquip()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentChild.OnUnEquip");

	AFGEquipmentChild_OnUnEquip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentChild.OnEquip
// ()
// Parameters:
// class AFGCharacterPlayer*      Character                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGEquipmentChild::OnEquip(class AFGCharacterPlayer* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentChild.OnEquip");

	AFGEquipmentChild_OnEquip_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentChild.GetAttachSocketTransform
// ()
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform AFGEquipmentChild::GetAttachSocketTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentChild.GetAttachSocketTransform");

	AFGEquipmentChild_GetAttachSocketTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipmentStunSpear.Server_ShockEnemy
// ()

void AFGEquipmentStunSpear::Server_ShockEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentStunSpear.Server_ShockEnemy");

	AFGEquipmentStunSpear_Server_ShockEnemy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentStunSpear.PlayStunEffects
// ()

void AFGEquipmentStunSpear::PlayStunEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentStunSpear.PlayStunEffects");

	AFGEquipmentStunSpear_PlayStunEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentStunSpear.OnHitTarget
// ()

void AFGEquipmentStunSpear::OnHitTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentStunSpear.OnHitTarget");

	AFGEquipmentStunSpear_OnHitTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentStunSpear.GetShouldPlaySecondSwing
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEquipmentStunSpear::GetShouldPlaySecondSwing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentStunSpear.GetShouldPlaySecondSwing");

	AFGEquipmentStunSpear_GetShouldPlaySecondSwing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipmentStunSpear.DoAttack
// ()

void AFGEquipmentStunSpear::DoAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentStunSpear.DoAttack");

	AFGEquipmentStunSpear_DoAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGErrorMessage.GetErrorResponse
// ()
// Parameters:
// TEnumAsByte<EErrorResponse>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EErrorResponse> UFGErrorMessage::GetErrorResponse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGErrorMessage.GetErrorResponse");

	UFGErrorMessage_GetErrorResponse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGErrorMessage.GetErrorMessage
// ()
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGErrorMessage::GetErrorMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGErrorMessage.GetErrorMessage");

	UFGErrorMessage_GetErrorMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGExplosiveDestroyableInterface.NotifyExploded
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGExplosiveDestroyableInterface::NotifyExploded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGExplosiveDestroyableInterface.NotifyExploded");

	UFGExplosiveDestroyableInterface_NotifyExploded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGExplosiveDestroyableInterface.GetDestroyEffect
// ()
// Parameters:
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* UFGExplosiveDestroyableInterface::GetDestroyEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGExplosiveDestroyableInterface.GetDestroyEffect");

	UFGExplosiveDestroyableInterface_GetDestroyEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.IsConnected
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFactoryConnectionComponent::IsConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.IsConnected");

	UFGFactoryConnectionComponent_IsConnected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.GetInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* UFGFactoryConnectionComponent::GetInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.GetInventory");

	UFGFactoryConnectionComponent_GetInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.GetDirection
// ()
// Parameters:
// EFactoryConnectionDirection    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFactoryConnectionDirection UFGFactoryConnectionComponent::GetDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.GetDirection");

	UFGFactoryConnectionComponent_GetDirection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.GetConnectorClearance
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGFactoryConnectionComponent::GetConnectorClearance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.GetConnectorClearance");

	UFGFactoryConnectionComponent_GetConnectorClearance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.GetConnector
// ()
// Parameters:
// EFactoryConnectionConnector    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFactoryConnectionConnector UFGFactoryConnectionComponent::GetConnector()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.GetConnector");

	UFGFactoryConnectionComponent_GetConnector_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.Factory_PeekOutput
// ()
// Parameters:
// TArray<struct FInventoryItem>  out_items                      (Parm, OutParm, ZeroConstructor)
// class UClass*                  Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFactoryConnectionComponent::Factory_PeekOutput(class UClass* Type, TArray<struct FInventoryItem>* out_items)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.Factory_PeekOutput");

	UFGFactoryConnectionComponent_Factory_PeekOutput_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_items != nullptr)
		*out_items = params.out_items;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.Factory_Internal_PeekOutputInventory
// ()
// Parameters:
// TArray<struct FInventoryItem>  out_items                      (Parm, OutParm, ZeroConstructor)
// class UClass*                  Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFactoryConnectionComponent::Factory_Internal_PeekOutputInventory(class UClass* Type, TArray<struct FInventoryItem>* out_items)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.Factory_Internal_PeekOutputInventory");

	UFGFactoryConnectionComponent_Factory_Internal_PeekOutputInventory_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_items != nullptr)
		*out_items = params.out_items;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.Factory_Internal_GrabOutputInventory
// ()
// Parameters:
// struct FInventoryItem          out_item                       (Parm, OutParm)
// class UClass*                  Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFactoryConnectionComponent::Factory_Internal_GrabOutputInventory(class UClass* Type, struct FInventoryItem* out_item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.Factory_Internal_GrabOutputInventory");

	UFGFactoryConnectionComponent_Factory_Internal_GrabOutputInventory_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_item != nullptr)
		*out_item = params.out_item;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.Factory_GrabOutput
// ()
// Parameters:
// struct FInventoryItem          out_item                       (Parm, OutParm)
// float                          out_OffsetBeyond               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFactoryConnectionComponent::Factory_GrabOutput(class UClass* Type, struct FInventoryItem* out_item, float* out_OffsetBeyond)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.Factory_GrabOutput");

	UFGFactoryConnectionComponent_Factory_GrabOutput_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_item != nullptr)
		*out_item = params.out_item;
	if (out_OffsetBeyond != nullptr)
		*out_OffsetBeyond = params.out_OffsetBeyond;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryLegsComponent.GetLegMeshComponents
// ()
// Parameters:
// TArray<class UStaticMeshComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UStaticMeshComponent*> UFGFactoryLegsComponent::GetLegMeshComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryLegsComponent.GetLegMeshComponents");

	UFGFactoryLegsComponent_GetLegMeshComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryLegsComponent.GetFootMeshComponents
// ()
// Parameters:
// TArray<class UStaticMeshComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UStaticMeshComponent*> UFGFactoryLegsComponent::GetFootMeshComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryLegsComponent.GetFootMeshComponents");

	UFGFactoryLegsComponent_GetFootMeshComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactorySettings.GetRandomDismantleSound
// ()
// Parameters:
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* UFGFactorySettings::GetRandomDismantleSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactorySettings.GetRandomDismantleSound");

	UFGFactorySettings_GetRandomDismantleSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactorySettings.GetRandomConstructionSound
// ()
// Parameters:
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* UFGFactorySettings::GetRandomConstructionSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactorySettings.GetRandomConstructionSound");

	UFGFactorySettings_GetRandomConstructionSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFoliagePickup.Server_PickupWithTransform
// ()
// Parameters:
// class AFGCharacterPlayer*      byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// class AFGFoliageRemoval*       foliageRemoval                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              withTransform                  (Parm, IsPlainOldData)

void AFGFoliagePickup::Server_PickupWithTransform(class AFGCharacterPlayer* byCharacter, class AFGFoliageRemoval* foliageRemoval, const struct FTransform& withTransform)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliagePickup.Server_PickupWithTransform");

	AFGFoliagePickup_Server_PickupWithTransform_Params params;
	params.byCharacter = byCharacter;
	params.foliageRemoval = foliageRemoval;
	params.withTransform = withTransform;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGFoliagePickup.PlayPickupEffect
// ()
// Parameters:
// class UFGFoliageResourceUserData* foliageUserData                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 atLocation                     (Parm, IsPlainOldData)

void AFGFoliagePickup::PlayPickupEffect(class UFGFoliageResourceUserData* foliageUserData, const struct FVector& atLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliagePickup.PlayPickupEffect");

	AFGFoliagePickup_PlayPickupEffect_Params params;
	params.foliageUserData = foliageUserData;
	params.atLocation = atLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGFoliagePickup.BroadcastPickup
// ()
// Parameters:
// class UStaticMesh*             fromStaticMesh                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 atLocation                     (Parm, IsPlainOldData)

void AFGFoliagePickup::BroadcastPickup(class UStaticMesh* fromStaticMesh, const struct FVector& atLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliagePickup.BroadcastPickup");

	AFGFoliagePickup_BroadcastPickup_Params params;
	params.fromStaticMesh = fromStaticMesh;
	params.atLocation = atLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGFoliageRemoval.RemoveInstance
// ()
// Parameters:
// struct FTransform              foliageTransform               (Parm, IsPlainOldData)
// bool                           localSpace                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            InstanceId                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGFoliageRemoval::RemoveInstance(const struct FTransform& foliageTransform, bool localSpace, int InstanceId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemoval.RemoveInstance");

	AFGFoliageRemoval_RemoveInstance_Params params;
	params.foliageTransform = foliageTransform;
	params.localSpace = localSpace;
	params.InstanceId = InstanceId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFoliageRemoval.RegisterWithSubsystem
// ()

void AFGFoliageRemoval::RegisterWithSubsystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemoval.RegisterWithSubsystem");

	AFGFoliageRemoval_RegisterWithSubsystem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.OnLevelRemovedFromWorld
// ()
// Parameters:
// class ULevel*                  inLevel                        (Parm, ZeroConstructor, IsPlainOldData)
// class UWorld*                  inWorld                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGFoliageRemovalSubsystem::OnLevelRemovedFromWorld(class ULevel* inLevel, class UWorld* inWorld)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.OnLevelRemovedFromWorld");

	AFGFoliageRemovalSubsystem_OnLevelRemovedFromWorld_Params params;
	params.inLevel = inLevel;
	params.inWorld = inWorld;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.OnLevelAddedToWorld
// ()
// Parameters:
// class ULevel*                  inLevel                        (Parm, ZeroConstructor, IsPlainOldData)
// class UWorld*                  inWorld                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGFoliageRemovalSubsystem::OnLevelAddedToWorld(class ULevel* inLevel, class UWorld* inWorld)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.OnLevelAddedToWorld");

	AFGFoliageRemovalSubsystem_OnLevelAddedToWorld_Params params;
	params.inLevel = inLevel;
	params.inWorld = inWorld;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.HasIdentifier
// ()
// Parameters:
// class UHierarchicalInstancedStaticMeshComponent* component                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UClass*                  foliageIdentifier              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGFoliageRemovalSubsystem::HasIdentifier(class UHierarchicalInstancedStaticMeshComponent* component, class UClass* foliageIdentifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.HasIdentifier");

	AFGFoliageRemovalSubsystem_HasIdentifier_Params params;
	params.component = component;
	params.foliageIdentifier = foliageIdentifier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.GetLookAtFoliage
// ()
// Parameters:
// struct FVector                 ViewLocation                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 endViewLocation                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UClass*                  foliageIdentifier              (Parm, ZeroConstructor, IsPlainOldData)
// class UHierarchicalInstancedStaticMeshComponent* out_component                  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            out_instanceId                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 out_instanceLocation           (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGFoliageRemovalSubsystem::GetLookAtFoliage(const struct FVector& ViewLocation, const struct FVector& endViewLocation, class UClass* foliageIdentifier, class UHierarchicalInstancedStaticMeshComponent** out_component, int* out_instanceId, struct FVector* out_instanceLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.GetLookAtFoliage");

	AFGFoliageRemovalSubsystem_GetLookAtFoliage_Params params;
	params.ViewLocation = ViewLocation;
	params.endViewLocation = endViewLocation;
	params.foliageIdentifier = foliageIdentifier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_component != nullptr)
		*out_component = params.out_component;
	if (out_instanceId != nullptr)
		*out_instanceId = params.out_instanceId;
	if (out_instanceLocation != nullptr)
		*out_instanceLocation = params.out_instanceLocation;

	return params.ReturnValue;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.GetFoliageWithinRadius
// ()
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isLocalSpace                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<int>                    out_instanceArray              (Parm, OutParm, ZeroConstructor)
// TArray<struct FVector>         out_locationArray              (Parm, OutParm, ZeroConstructor)
// TArray<class UHierarchicalInstancedStaticMeshComponent*> out_componentArray             (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGFoliageRemovalSubsystem::GetFoliageWithinRadius(const struct FVector& Location, float Radius, bool isLocalSpace, TArray<int>* out_instanceArray, TArray<struct FVector>* out_locationArray, TArray<class UHierarchicalInstancedStaticMeshComponent*>* out_componentArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.GetFoliageWithinRadius");

	AFGFoliageRemovalSubsystem_GetFoliageWithinRadius_Params params;
	params.Location = Location;
	params.Radius = Radius;
	params.isLocalSpace = isLocalSpace;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_instanceArray != nullptr)
		*out_instanceArray = params.out_instanceArray;
	if (out_locationArray != nullptr)
		*out_locationArray = params.out_locationArray;
	if (out_componentArray != nullptr)
		*out_componentArray = params.out_componentArray;

	return params.ReturnValue;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.GetFoliageRemovalSubsystem
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGFoliageRemovalSubsystem* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGFoliageRemovalSubsystem* AFGFoliageRemovalSubsystem::GetFoliageRemovalSubsystem(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.GetFoliageRemovalSubsystem");

	AFGFoliageRemovalSubsystem_GetFoliageRemovalSubsystem_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.GetFoliageRemovalActor
// ()
// Parameters:
// class UHierarchicalInstancedStaticMeshComponent* fromComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AFGFoliageRemoval*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGFoliageRemoval* AFGFoliageRemovalSubsystem::GetFoliageRemovalActor(class UHierarchicalInstancedStaticMeshComponent* fromComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.GetFoliageRemovalActor");

	AFGFoliageRemovalSubsystem_GetFoliageRemovalActor_Params params;
	params.fromComponent = fromComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.GetClosestFoliageForComponent
// ()
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// class UHierarchicalInstancedStaticMeshComponent* component                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           isLocalSpace                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            out_instanceId                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 out_instanceLocation           (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGFoliageRemovalSubsystem::GetClosestFoliageForComponent(const struct FVector& Location, float MaxDistance, class UHierarchicalInstancedStaticMeshComponent* component, bool isLocalSpace, int* out_instanceId, struct FVector* out_instanceLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.GetClosestFoliageForComponent");

	AFGFoliageRemovalSubsystem_GetClosestFoliageForComponent_Params params;
	params.Location = Location;
	params.MaxDistance = MaxDistance;
	params.component = component;
	params.isLocalSpace = isLocalSpace;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_instanceId != nullptr)
		*out_instanceId = params.out_instanceId;
	if (out_instanceLocation != nullptr)
		*out_instanceLocation = params.out_instanceLocation;

	return params.ReturnValue;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.GetClosestFoliageArrayForComponent
// ()
// Parameters:
// TArray<struct FVector>         Locations                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float                          MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// class UHierarchicalInstancedStaticMeshComponent* component                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           isLocalSpace                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<int>                    out_instanceArray              (Parm, OutParm, ZeroConstructor)

void AFGFoliageRemovalSubsystem::GetClosestFoliageArrayForComponent(TArray<struct FVector> Locations, float MaxDistance, class UHierarchicalInstancedStaticMeshComponent* component, bool isLocalSpace, TArray<int>* out_instanceArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.GetClosestFoliageArrayForComponent");

	AFGFoliageRemovalSubsystem_GetClosestFoliageArrayForComponent_Params params;
	params.Locations = Locations;
	params.MaxDistance = MaxDistance;
	params.component = component;
	params.isLocalSpace = isLocalSpace;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_instanceArray != nullptr)
		*out_instanceArray = params.out_instanceArray;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.GetClosestFoliage
// ()
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  foliageIdentifier              (Parm, ZeroConstructor, IsPlainOldData)
// class UHierarchicalInstancedStaticMeshComponent* out_component                  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           isLocalSpace                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            out_instanceId                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 out_instanceLocation           (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGFoliageRemovalSubsystem::GetClosestFoliage(const struct FVector& Location, float MaxDistance, class UClass* foliageIdentifier, bool isLocalSpace, class UHierarchicalInstancedStaticMeshComponent** out_component, int* out_instanceId, struct FVector* out_instanceLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.GetClosestFoliage");

	AFGFoliageRemovalSubsystem_GetClosestFoliage_Params params;
	params.Location = Location;
	params.MaxDistance = MaxDistance;
	params.foliageIdentifier = foliageIdentifier;
	params.isLocalSpace = isLocalSpace;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_component != nullptr)
		*out_component = params.out_component;
	if (out_instanceId != nullptr)
		*out_instanceId = params.out_instanceId;
	if (out_instanceLocation != nullptr)
		*out_instanceLocation = params.out_instanceLocation;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicle.UpdatePhysicsVolume
// ()
// Parameters:
// class APhysicsVolume*          PhysicsVolume                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGVehicle::UpdatePhysicsVolume(class APhysicsVolume* PhysicsVolume)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.UpdatePhysicsVolume");

	AFGVehicle_UpdatePhysicsVolume_Params params;
	params.PhysicsVolume = PhysicsVolume;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.SelfDriverEnter
// ()
// Parameters:
// class AAIController*           AI                             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGVehicle::SelfDriverEnter(class AAIController* AI)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.SelfDriverEnter");

	AFGVehicle_SelfDriverEnter_Params params;
	params.AI = AI;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicle.ReceiveOnVehicleStartup
// ()

void AFGVehicle::ReceiveOnVehicleStartup()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.ReceiveOnVehicleStartup");

	AFGVehicle_ReceiveOnVehicleStartup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.ReceiveOnVehicleShutDown
// ()

void AFGVehicle::ReceiveOnVehicleShutDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.ReceiveOnVehicleShutDown");

	AFGVehicle_ReceiveOnVehicleShutDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.ReceiveDied
// ()
// Parameters:
// class AActor*                  thisActor                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGVehicle::ReceiveDied(class AActor* thisActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.ReceiveDied");

	AFGVehicle_ReceiveDied_Params params;
	params.thisActor = thisActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.OnTakeDamage
// ()
// Parameters:
// class AActor*                  damagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGVehicle::OnTakeDamage(class AActor* damagedActor, float damageAmount, class UDamageType* DamageType, class AController* instigatedBy, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.OnTakeDamage");

	AFGVehicle_OnTakeDamage_Params params;
	params.damagedActor = damagedActor;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.instigatedBy = instigatedBy;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.OnRep_SecondaryColor
// ()

void AFGVehicle::OnRep_SecondaryColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.OnRep_SecondaryColor");

	AFGVehicle_OnRep_SecondaryColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.OnRep_PrimaryColor
// ()

void AFGVehicle::OnRep_PrimaryColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.OnRep_PrimaryColor");

	AFGVehicle_OnRep_PrimaryColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.NotifyOnTakeDamage
// ()
// Parameters:
// class AActor*                  damagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGVehicle::NotifyOnTakeDamage(class AActor* damagedActor, float damageAmount, class UDamageType* DamageType, class AController* instigatedBy, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.NotifyOnTakeDamage");

	AFGVehicle_NotifyOnTakeDamage_Params params;
	params.damagedActor = damagedActor;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.instigatedBy = instigatedBy;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.KickAllPlayers
// ()

void AFGVehicle::KickAllPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.KickAllPlayers");

	AFGVehicle_KickAllPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.IsSelfDriving
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGVehicle::IsSelfDriving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.IsSelfDriving");

	AFGVehicle_IsSelfDriving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicle.IsDestructible
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGVehicle::IsDestructible()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.IsDestructible");

	AFGVehicle_IsDestructible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicle.HasAnyPassengerSeatAvailable
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGVehicle::HasAnyPassengerSeatAvailable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.HasAnyPassengerSeatAvailable");

	AFGVehicle_HasAnyPassengerSeatAvailable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicle.GetHealthComponent
// ()
// Parameters:
// class UFGHealthComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGHealthComponent* AFGVehicle::GetHealthComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.GetHealthComponent");

	AFGVehicle_GetHealthComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicle.GetDismantleBlueprintReturns
// ()
// Parameters:
// TArray<struct FInventoryStack> out_returns                    (Parm, OutParm, ZeroConstructor)

void AFGVehicle::GetDismantleBlueprintReturns(TArray<struct FInventoryStack>* out_returns)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.GetDismantleBlueprintReturns");

	AFGVehicle_GetDismantleBlueprintReturns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_returns != nullptr)
		*out_returns = params.out_returns;
}


// Function FactoryGame.FGVehicle.Died
// ()
// Parameters:
// class AActor*                  thisActor                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGVehicle::Died(class AActor* thisActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.Died");

	AFGVehicle_Died_Params params;
	params.thisActor = thisActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.CanSelfDriverEnter
// ()
// Parameters:
// class AAIController*           AI                             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGVehicle::CanSelfDriverEnter(class AAIController* AI)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.CanSelfDriverEnter");

	AFGVehicle_CanSelfDriverEnter_Params params;
	params.AI = AI;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicle.IsOrientationReversed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGRailroadVehicle::IsOrientationReversed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicle.IsOrientationReversed");

	AFGRailroadVehicle_IsOrientationReversed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicle.IsCoupledAt
// ()
// Parameters:
// ERailroadVehicleCoupler        coupler                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGRailroadVehicle::IsCoupledAt(ERailroadVehicleCoupler coupler)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicle.IsCoupledAt");

	AFGRailroadVehicle_IsCoupledAt_Params params;
	params.coupler = coupler;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicle.GetTrainID
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGRailroadVehicle::GetTrainID()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicle.GetTrainID");

	AFGRailroadVehicle_GetTrainID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicle.GetTrackPosition
// ()
// Parameters:
// struct FRailroadTrackPosition  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FRailroadTrackPosition AFGRailroadVehicle::GetTrackPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicle.GetTrackPosition");

	AFGRailroadVehicle_GetTrackPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicle.GetRailroadVehicleMovementComponent
// ()
// Parameters:
// class UFGRailroadVehicleMovementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGRailroadVehicleMovementComponent* AFGRailroadVehicle::GetRailroadVehicleMovementComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicle.GetRailroadVehicleMovementComponent");

	AFGRailroadVehicle_GetRailroadVehicleMovementComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicle.GetLength
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGRailroadVehicle::GetLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicle.GetLength");

	AFGRailroadVehicle_GetLength_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicle.GetCoupledVehicleAt
// ()
// Parameters:
// ERailroadVehicleCoupler        coupler                        (Parm, ZeroConstructor, IsPlainOldData)
// class AFGRailroadVehicle*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGRailroadVehicle* AFGRailroadVehicle::GetCoupledVehicleAt(ERailroadVehicleCoupler coupler)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicle.GetCoupledVehicleAt");

	AFGRailroadVehicle_GetCoupledVehicleAt_Params params;
	params.coupler = coupler;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFreightWagon.GetFreightInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGFreightWagon::GetFreightInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFreightWagon.GetFreightInventory");

	AFGFreightWagon_GetFreightInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameInstance.SetSkipOnboarding
// ()
// Parameters:
// bool                           doSkip                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameInstance::SetSkipOnboarding(bool doSkip)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.SetSkipOnboarding");

	UFGGameInstance_SetSkipOnboarding_Params params;
	params.doSkip = doSkip;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameInstance.SetHasSeenAlphaInfoScreen
// ()
// Parameters:
// bool                           hasSeen                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameInstance::SetHasSeenAlphaInfoScreen(bool hasSeen)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.SetHasSeenAlphaInfoScreen");

	UFGGameInstance_SetHasSeenAlphaInfoScreen_Params params;
	params.hasSeen = hasSeen;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameInstance.PushError
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  errorMessage                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameInstance::PushError(class UObject* WorldContext, class UClass* errorMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.PushError");

	UFGGameInstance_PushError_Params params;
	params.WorldContext = WorldContext;
	params.errorMessage = errorMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameInstance.PeekNextError
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UFGErrorMessage*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGErrorMessage* UFGGameInstance::PeekNextError(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.PeekNextError");

	UFGGameInstance_PeekNextError_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameInstance.HasPlayerSeenAlphaInfoScreen
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameInstance::HasPlayerSeenAlphaInfoScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.HasPlayerSeenAlphaInfoScreen");

	UFGGameInstance_HasPlayerSeenAlphaInfoScreen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameInstance.GetSkipOnboarding
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameInstance::GetSkipOnboarding()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.GetSkipOnboarding");

	UFGGameInstance_GetSkipOnboarding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameInstance.GetNextError
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UFGErrorMessage*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGErrorMessage* UFGGameInstance::GetNextError(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.GetNextError");

	UFGGameInstance_GetNextError_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameInstance.GetGameAnalyticsService
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UAnalyticsService*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnalyticsService* UFGGameInstance::GetGameAnalyticsService(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.GetGameAnalyticsService");

	UFGGameInstance_GetGameAnalyticsService_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameInstance.GetFGUGC
// ()
// Parameters:
// class UClass*                  WeaponClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  EnemyClass                     (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  BossClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  PlayerPawnClass                (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameInstance::GetFGUGC(class UClass* WeaponClass, class UClass* EnemyClass, class UClass* BossClass, class UClass* PlayerPawnClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.GetFGUGC");

	UFGGameInstance_GetFGUGC_Params params;
	params.WeaponClass = WeaponClass;
	params.EnemyClass = EnemyClass;
	params.BossClass = BossClass;
	params.PlayerPawnClass = PlayerPawnClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameInstance.FindModPackages
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameInstance::FindModPackages()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.FindModPackages");

	UFGGameInstance_FindModPackages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameMode.TriggerWorldSave
// ()
// Parameters:
// class FString                  saveGameName                   (Parm, ZeroConstructor)

void AFGGameMode::TriggerWorldSave(const class FString& saveGameName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameMode.TriggerWorldSave");

	AFGGameMode_TriggerWorldSave_Params params;
	params.saveGameName = saveGameName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameMode.TriggerBundledWorldSave
// ()
// Parameters:
// class FString                  saveGameName                   (Parm, ZeroConstructor)

void AFGGameMode::TriggerBundledWorldSave(const class FString& saveGameName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameMode.TriggerBundledWorldSave");

	AFGGameMode_TriggerBundledWorldSave_Params params;
	params.saveGameName = saveGameName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameMode.KickPlayer
// ()
// Parameters:
// class APlayerState*            ps                             (Parm, ZeroConstructor, IsPlainOldData)

void AFGGameMode::KickPlayer(class APlayerState* ps)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameMode.KickPlayer");

	AFGGameMode_KickPlayer_Params params;
	params.ps = ps;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGamePhaseManager.SetGamePhase
// ()
// Parameters:
// TEnumAsByte<EGamePhase>        newPhase                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGGamePhaseManager::SetGamePhase(TEnumAsByte<EGamePhase> newPhase)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.SetGamePhase");

	AFGGamePhaseManager_SetGamePhase_Params params;
	params.newPhase = newPhase;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGamePhaseManager.PayOffOnGamePhase
// ()
// Parameters:
// struct FItemAmount             payOff                         (Parm)
// TEnumAsByte<EGamePhase>        gamePhase                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGGamePhaseManager::PayOffOnGamePhase(const struct FItemAmount& payOff, TEnumAsByte<EGamePhase> gamePhase)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.PayOffOnGamePhase");

	AFGGamePhaseManager_PayOffOnGamePhase_Params params;
	params.payOff = payOff;
	params.gamePhase = gamePhase;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGamePhaseManager.OnRep_GamePhase
// ()

void AFGGamePhaseManager::OnRep_GamePhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.OnRep_GamePhase");

	AFGGamePhaseManager_OnRep_GamePhase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGamePhaseManager.GetGamePhaseName
// ()
// Parameters:
// TEnumAsByte<EGamePhase>        gamePhase                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AFGGamePhaseManager::GetGamePhaseName(TEnumAsByte<EGamePhase> gamePhase)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.GetGamePhaseName");

	AFGGamePhaseManager_GetGamePhaseName_Params params;
	params.gamePhase = gamePhase;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGamePhaseManager.GetGamePhaseForTechTier
// ()
// Parameters:
// int                            techTier                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EGamePhase>        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EGamePhase> AFGGamePhaseManager::GetGamePhaseForTechTier(int techTier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.GetGamePhaseForTechTier");

	AFGGamePhaseManager_GetGamePhaseForTechTier_Params params;
	params.techTier = techTier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGamePhaseManager.GetGamePhaseForSchematic
// ()
// Parameters:
// class UClass*                  inSchematic                    (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EGamePhase>        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EGamePhase> AFGGamePhaseManager::GetGamePhaseForSchematic(class UClass* inSchematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.GetGamePhaseForSchematic");

	AFGGamePhaseManager_GetGamePhaseForSchematic_Params params;
	params.inSchematic = inSchematic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGamePhaseManager.GetGamePhase
// ()
// Parameters:
// TEnumAsByte<EGamePhase>        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EGamePhase> AFGGamePhaseManager::GetGamePhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.GetGamePhase");

	AFGGamePhaseManager_GetGamePhase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGamePhaseManager.GetCostForGamePhase
// ()
// Parameters:
// TEnumAsByte<EGamePhase>        gamePhase                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     out_cost                       (Parm, OutParm, ZeroConstructor, ReferenceParm)

void AFGGamePhaseManager::GetCostForGamePhase(TEnumAsByte<EGamePhase> gamePhase, TArray<struct FItemAmount>* out_cost)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.GetCostForGamePhase");

	AFGGamePhaseManager_GetCostForGamePhase_Params params;
	params.gamePhase = gamePhase;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_cost != nullptr)
		*out_cost = params.out_cost;
}


// Function FactoryGame.FGGamePhaseManager.GetBaseCostForGamePhase
// ()
// Parameters:
// TEnumAsByte<EGamePhase>        gamePhase                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     out_cost                       (Parm, OutParm, ZeroConstructor, ReferenceParm)

void AFGGamePhaseManager::GetBaseCostForGamePhase(TEnumAsByte<EGamePhase> gamePhase, TArray<struct FItemAmount>* out_cost)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.GetBaseCostForGamePhase");

	AFGGamePhaseManager_GetBaseCostForGamePhase_Params params;
	params.gamePhase = gamePhase;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_cost != nullptr)
		*out_cost = params.out_cost;
}


// Function FactoryGame.FGGamePhaseManager.Get
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGGamePhaseManager*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGGamePhaseManager* AFGGamePhaseManager::Get(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.Get");

	AFGGamePhaseManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameplayTask_Attack.GetAttackClass
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGGameplayTask_Attack::GetAttackClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameplayTask_Attack.GetAttackClass");

	UFGGameplayTask_Attack_GetAttackClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameplayTask_AttackJump.StartJump
// ()
// Parameters:
// class AFGEnemy*                Enemy                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  attackClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           StartJump                      (Parm, ZeroConstructor, IsPlainOldData)
// class UFGGameplayTask_AttackJump* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGGameplayTask_AttackJump* UFGGameplayTask_AttackJump::StartJump(class AFGEnemy* Enemy, class UClass* attackClass, bool StartJump)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameplayTask_AttackJump.StartJump");

	UFGGameplayTask_AttackJump_StartJump_Params params;
	params.Enemy = Enemy;
	params.attackClass = attackClass;
	params.StartJump = StartJump;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameplayTask_AttackJump.OnMontageEnded
// ()
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           interrupted                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameplayTask_AttackJump::OnMontageEnded(class UAnimMontage* Montage, bool interrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameplayTask_AttackJump.OnMontageEnded");

	UFGGameplayTask_AttackJump_OnMontageEnded_Params params;
	params.Montage = Montage;
	params.interrupted = interrupted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameplayTask_AttackJump.OnLandedCallback
// ()
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UFGGameplayTask_AttackJump::OnLandedCallback(const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameplayTask_AttackJump.OnLandedCallback");

	UFGGameplayTask_AttackJump_OnLandedCallback_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameplayTask_AttackMelee.OnMontageEnded
// ()
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           interrupted                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameplayTask_AttackMelee::OnMontageEnded(class UAnimMontage* Montage, bool interrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameplayTask_AttackMelee.OnMontageEnded");

	UFGGameplayTask_AttackMelee_OnMontageEnded_Params params;
	params.Montage = Montage;
	params.interrupted = interrupted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameplayTask_AttackMelee.OnMontageBlendingOut
// ()
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           interrupted                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameplayTask_AttackMelee::OnMontageBlendingOut(class UAnimMontage* Montage, bool interrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameplayTask_AttackMelee.OnMontageBlendingOut");

	UFGGameplayTask_AttackMelee_OnMontageBlendingOut_Params params;
	params.Montage = Montage;
	params.interrupted = interrupted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameplayTask_AttackMelee.Attack
// ()
// Parameters:
// class AFGEnemy*                Enemy                          (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class UFGAggroTargetInterface> attackTarget                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  attackClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class UFGGameplayTask_AttackMelee* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGGameplayTask_AttackMelee* UFGGameplayTask_AttackMelee::Attack(class AFGEnemy* Enemy, const TScriptInterface<class UFGAggroTargetInterface>& attackTarget, class UClass* attackClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameplayTask_AttackMelee.Attack");

	UFGGameplayTask_AttackMelee_Attack_Params params;
	params.Enemy = Enemy;
	params.attackTarget = attackTarget;
	params.attackClass = attackClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameSession.ListenForIntroSequenceUpdated
// ()

void AFGGameSession::ListenForIntroSequenceUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameSession.ListenForIntroSequenceUpdated");

	AFGGameSession_ListenForIntroSequenceUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameSession.IntroSequenceUpdated
// ()

void AFGGameSession::IntroSequenceUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameSession.IntroSequenceUpdated");

	AFGGameSession_IntroSequenceUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.SetIsSpaceElevatorBuilt
// ()
// Parameters:
// bool                           IsSpaceElevatorBuilt           (Parm, ZeroConstructor, IsPlainOldData)

void AFGGameState::SetIsSpaceElevatorBuilt(bool IsSpaceElevatorBuilt)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.SetIsSpaceElevatorBuilt");

	AFGGameState_SetIsSpaceElevatorBuilt_Params params;
	params.IsSpaceElevatorBuilt = IsSpaceElevatorBuilt;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.SetHasInitalTradingPostLandAnimPlayed
// ()

void AFGGameState::SetHasInitalTradingPostLandAnimPlayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.SetHasInitalTradingPostLandAnimPlayed");

	AFGGameState_SetHasInitalTradingPostLandAnimPlayed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.SetCheatNoPower
// ()
// Parameters:
// bool                           NoPower                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGGameState::SetCheatNoPower(bool NoPower)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.SetCheatNoPower");

	AFGGameState_SetCheatNoPower_Params params;
	params.NoPower = NoPower;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.SetCheatNoCost
// ()
// Parameters:
// bool                           NoCost                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGGameState::SetCheatNoCost(bool NoCost)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.SetCheatNoCost");

	AFGGameState_SetCheatNoCost_Params params;
	params.NoCost = NoCost;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.SetAndReplicateBuildingColorInSlot
// ()
// Parameters:
// unsigned char                  Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  pColor                         (Parm, IsPlainOldData)
// struct FColor                  sColor                         (Parm, IsPlainOldData)

void AFGGameState::SetAndReplicateBuildingColorInSlot(unsigned char Slot, const struct FColor& pColor, const struct FColor& sColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.SetAndReplicateBuildingColorInSlot");

	AFGGameState_SetAndReplicateBuildingColorInSlot_Params params;
	params.Slot = Slot;
	params.pColor = pColor;
	params.sColor = sColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.SendMessageToPlayer
// ()
// Parameters:
// class UClass*                  inMessage                      (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController*       Controller                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGGameState::SendMessageToPlayer(class UClass* inMessage, class APlayerController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.SendMessageToPlayer");

	AFGGameState_SendMessageToPlayer_Params params;
	params.inMessage = inMessage;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.SendMessageToAllPlayers
// ()
// Parameters:
// class UClass*                  inMessage                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGGameState::SendMessageToAllPlayers(class UClass* inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.SendMessageToAllPlayers");

	AFGGameState_SendMessageToAllPlayers_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.RemoveAllScannableResources
// ()

void AFGGameState::RemoveAllScannableResources()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.RemoveAllScannableResources");

	AFGGameState_RemoveAllScannableResources_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.OnSchematicPurchased
// ()
// Parameters:
// class UClass*                  newSchematic                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGGameState::OnSchematicPurchased(class UClass* newSchematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.OnSchematicPurchased");

	AFGGameState_OnSchematicPurchased_Params params;
	params.newSchematic = newSchematic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.OnRep_MapAreaVisited
// ()

void AFGGameState::OnRep_MapAreaVisited()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.OnRep_MapAreaVisited");

	AFGGameState_OnRep_MapAreaVisited_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.OnRep_BuildingColorSlot
// ()

void AFGGameState::OnRep_BuildingColorSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.OnRep_BuildingColorSlot");

	AFGGameState_OnRep_BuildingColorSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.NotifyPlayerAdded
// ()
// Parameters:
// class AFGCharacterPlayer*      inPlayer                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGGameState::NotifyPlayerAdded(class AFGCharacterPlayer* inPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.NotifyPlayerAdded");

	AFGGameState_NotifyPlayerAdded_Params params;
	params.inPlayer = inPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.IsTradingPostBuilt
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameState::IsTradingPostBuilt()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.IsTradingPostBuilt");

	AFGGameState_IsTradingPostBuilt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.IsSpaceElevatorBuilt
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameState::IsSpaceElevatorBuilt()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.IsSpaceElevatorBuilt");

	AFGGameState_IsSpaceElevatorBuilt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.IsMapAreaVisisted
// ()
// Parameters:
// class UClass*                  inArea                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameState::IsMapAreaVisisted(class UClass* inArea)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.IsMapAreaVisisted");

	AFGGameState_IsMapAreaVisisted_Params params;
	params.inArea = inArea;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.HasInitalTradingPostLandAnimPlayed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameState::HasInitalTradingPostLandAnimPlayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.HasInitalTradingPostLandAnimPlayed");

	AFGGameState_HasInitalTradingPostLandAnimPlayed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetVisitedMapAreas
// ()
// Parameters:
// TArray<class UClass*>          out_VisitedAreas               (Parm, OutParm, ZeroConstructor, ReferenceParm)

void AFGGameState::GetVisitedMapAreas(TArray<class UClass*>* out_VisitedAreas)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetVisitedMapAreas");

	AFGGameState_GetVisitedMapAreas_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_VisitedAreas != nullptr)
		*out_VisitedAreas = params.out_VisitedAreas;
}


// Function FactoryGame.FGGameState.GetTutorialIntroManager
// ()
// Parameters:
// class AFGTutorialIntroManager* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGTutorialIntroManager* AFGGameState::GetTutorialIntroManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetTutorialIntroManager");

	AFGGameState_GetTutorialIntroManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetTotalPlayerInventorySlots
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGGameState::GetTotalPlayerInventorySlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetTotalPlayerInventorySlots");

	AFGGameState_GetTotalPlayerInventorySlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetTotalPlayerArmEquipmentSlots
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGGameState::GetTotalPlayerArmEquipmentSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetTotalPlayerArmEquipmentSlots");

	AFGGameState_GetTotalPlayerArmEquipmentSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetTotalPlayDuration
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGGameState::GetTotalPlayDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetTotalPlayDuration");

	AFGGameState_GetTotalPlayDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetSessionName
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString AFGGameState::GetSessionName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetSessionName");

	AFGGameState_GetSessionName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetSchematicManager
// ()
// Parameters:
// class AFGSchematicManager*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGSchematicManager* AFGGameState::GetSchematicManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetSchematicManager");

	AFGGameState_GetSchematicManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetResearchManager
// ()
// Parameters:
// class AFGResearchManager*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGResearchManager* AFGGameState::GetResearchManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetResearchManager");

	AFGGameState_GetResearchManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetNumInventorySlotsUnlocked
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGGameState::GetNumInventorySlotsUnlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetNumInventorySlotsUnlocked");

	AFGGameState_GetNumInventorySlotsUnlocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetNumArmEquipmentSlotsUnlocked
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGGameState::GetNumArmEquipmentSlotsUnlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetNumArmEquipmentSlotsUnlocked");

	AFGGameState_GetNumArmEquipmentSlotsUnlocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetIsMapUnlocked
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameState::GetIsMapUnlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetIsMapUnlocked");

	AFGGameState_GetIsMapUnlocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetGamePhaseManager
// ()
// Parameters:
// class AFGGamePhaseManager*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGGamePhaseManager* AFGGameState::GetGamePhaseManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetGamePhaseManager");

	AFGGameState_GetGamePhaseManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetCheatNoPower
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameState::GetCheatNoPower()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetCheatNoPower");

	AFGGameState_GetCheatNoPower_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetCheatNoCost
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameState::GetCheatNoCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetCheatNoCost");

	AFGGameState_GetCheatNoCost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetBuildingOverclockUnlocked
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameState::GetBuildingOverclockUnlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetBuildingOverclockUnlocked");

	AFGGameState_GetBuildingOverclockUnlocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetBuildingEfficiencyUnlocked
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameState::GetBuildingEfficiencyUnlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetBuildingEfficiencyUnlocked");

	AFGGameState_GetBuildingEfficiencyUnlocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetActorRepresentationManager
// ()
// Parameters:
// class AFGActorRepresentationManager* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGActorRepresentationManager* AFGGameState::GetActorRepresentationManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetActorRepresentationManager");

	AFGGameState_GetActorRepresentationManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUI.SetWindowWantsInventoryAddon
// ()
// Parameters:
// bool                           doWantAddon                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUI::SetWindowWantsInventoryAddon(bool doWantAddon)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.SetWindowWantsInventoryAddon");

	UFGGameUI_SetWindowWantsInventoryAddon_Params params;
	params.doWantAddon = doWantAddon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.SetShowInventory
// ()
// Parameters:
// bool                           doShow                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUI::SetShowInventory(bool doShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.SetShowInventory");

	UFGGameUI_SetShowInventory_Params params;
	params.doShow = doShow;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.SetCurrentAudioMessage
// ()
// Parameters:
// class UFGAudioMessage*         newMessage                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGGameUI::SetCurrentAudioMessage(class UFGAudioMessage* newMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.SetCurrentAudioMessage");

	UFGGameUI_SetCurrentAudioMessage_Params params;
	params.newMessage = newMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.RemovePawnHUD
// ()

void UFGGameUI::RemovePawnHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.RemovePawnHUD");

	UFGGameUI_RemovePawnHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.RemoveInteractWidget
// ()
// Parameters:
// class UFGInteractWidget*       widgetToRemove                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGGameUI::RemoveInteractWidget(class UFGInteractWidget* widgetToRemove)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.RemoveInteractWidget");

	UFGGameUI_RemoveInteractWidget_Params params;
	params.widgetToRemove = widgetToRemove;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.RemoveAudioMessage
// ()

void UFGGameUI::RemoveAudioMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.RemoveAudioMessage");

	UFGGameUI_RemoveAudioMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.ReceivedMessage
// ()
// Parameters:
// class UClass*                  inMessage                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUI::ReceivedMessage(class UClass* inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.ReceivedMessage");

	UFGGameUI_ReceivedMessage_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.PopAllWidgets
// ()

void UFGGameUI::PopAllWidgets()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.PopAllWidgets");

	UFGGameUI_PopAllWidgets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.HandlePendingMessages
// ()

void UFGGameUI::HandlePendingMessages()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.HandlePendingMessages");

	UFGGameUI_HandlePendingMessages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.HandleFocusLost
// ()

void UFGGameUI::HandleFocusLost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.HandleFocusLost");

	UFGGameUI_HandleFocusLost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.GetWindowWantsInventoryAddon
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUI::GetWindowWantsInventoryAddon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.GetWindowWantsInventoryAddon");

	UFGGameUI_GetWindowWantsInventoryAddon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUI.GetShowInventory
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUI::GetShowInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.GetShowInventory");

	UFGGameUI_GetShowInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUI.GetPendingMessages
// ()
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UFGGameUI::GetPendingMessages()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.GetPendingMessages");

	UFGGameUI_GetPendingMessages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUI.GetInteractWidgetStack
// ()
// Parameters:
// TArray<class UFGInteractWidget*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UFGInteractWidget*> UFGGameUI::GetInteractWidgetStack()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.GetInteractWidgetStack");

	UFGGameUI_GetInteractWidgetStack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUI.GetCurrentAudioMessage
// ()
// Parameters:
// class UFGAudioMessage*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGAudioMessage* UFGGameUI::GetCurrentAudioMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.GetCurrentAudioMessage");

	UFGGameUI_GetCurrentAudioMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUI.ClearHintOnTutorialStepCompleted
// ()

void UFGGameUI::ClearHintOnTutorialStepCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.ClearHintOnTutorialStepCompleted");

	UFGGameUI_ClearHintOnTutorialStepCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.CanReceiveMessage
// ()
// Parameters:
// class UClass*                  inMessage                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUI::CanReceiveMessage(class UClass* inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.CanReceiveMessage");

	UFGGameUI_CanReceiveMessage_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUI.CancelPressed
// ()

void UFGGameUI::CancelPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.CancelPressed");

	UFGGameUI_CancelPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.AddPendingMessage
// ()
// Parameters:
// class UClass*                  newMessage                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUI::AddPendingMessage(class UClass* newMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.AddPendingMessage");

	UFGGameUI_AddPendingMessage_Params params;
	params.newMessage = newMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.AddPawnHUD
// ()
// Parameters:
// class UUserWidget*             newContent                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGGameUI::AddPawnHUD(class UUserWidget* newContent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.AddPawnHUD");

	UFGGameUI_AddPawnHUD_Params params;
	params.newContent = newContent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.AddIntroTutorialInfo
// ()
// Parameters:
// struct FTutorialHintData       TutorialHintData               (Parm)

void UFGGameUI::AddIntroTutorialInfo(const struct FTutorialHintData& TutorialHintData)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.AddIntroTutorialInfo");

	UFGGameUI_AddIntroTutorialInfo_Params params;
	params.TutorialHintData = TutorialHintData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.AddInteractWidget
// ()
// Parameters:
// class UFGInteractWidget*       widgetToAdd                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGGameUI::AddInteractWidget(class UFGInteractWidget* widgetToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.AddInteractWidget");

	UFGGameUI_AddInteractWidget_Params params;
	params.widgetToAdd = widgetToAdd;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.AddCheatWidget
// ()
// Parameters:
// struct FPopupData              PopupData                      (Parm)
// class UFGPopupWidget*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPopupWidget* UFGGameUI::AddCheatWidget(const struct FPopupData& PopupData)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.AddCheatWidget");

	UFGGameUI_AddCheatWidget_Params params;
	params.PopupData = PopupData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.UpdatePostProcessSettings
// ()

void UFGGameUserSettings::UpdatePostProcessSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.UpdatePostProcessSettings");

	UFGGameUserSettings_UpdatePostProcessSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetNeworkQuality
// ()
// Parameters:
// int                            newNetworkQuality              (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetNeworkQuality(int newNetworkQuality)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetNeworkQuality");

	UFGGameUserSettings_SetNeworkQuality_Params params;
	params.newNetworkQuality = newNetworkQuality;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetMotionBlurEnabled
// ()
// Parameters:
// bool                           enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetMotionBlurEnabled(bool enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetMotionBlurEnabled");

	UFGGameUserSettings_SetMotionBlurEnabled_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetInvertedLook
// ()
// Parameters:
// bool                           newInvertLook                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetInvertedLook(bool newInvertLook)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetInvertedLook");

	UFGGameUserSettings_SetInvertedLook_Params params;
	params.newInvertLook = newInvertLook;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetHoldToSprint
// ()
// Parameters:
// bool                           newHoldToSprint                (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetHoldToSprint(bool newHoldToSprint)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetHoldToSprint");

	UFGGameUserSettings_SetHoldToSprint_Params params;
	params.newHoldToSprint = newHoldToSprint;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetHeadBobScale
// ()
// Parameters:
// float                          newHeadBobScale                (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetHeadBobScale(float newHeadBobScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetHeadBobScale");

	UFGGameUserSettings_SetHeadBobScale_Params params;
	params.newHeadBobScale = newHeadBobScale;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetFOV
// ()
// Parameters:
// int                            NewFOV                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetFOV(int NewFOV)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetFOV");

	UFGGameUserSettings_SetFOV_Params params;
	params.NewFOV = NewFOV;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetAutoSortInventory
// ()
// Parameters:
// bool                           shouldAutoSort                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetAutoSortInventory(bool shouldAutoSort)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetAutoSortInventory");

	UFGGameUserSettings_SetAutoSortInventory_Params params;
	params.shouldAutoSort = shouldAutoSort;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetAudioVolume
// ()
// Parameters:
// class FString                  Name                           (Parm, ZeroConstructor)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetAudioVolume(const class FString& Name, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetAudioVolume");

	UFGGameUserSettings_SetAudioVolume_Params params;
	params.Name = Name;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetAudioToDefaults
// ()

void UFGGameUserSettings::SetAudioToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetAudioToDefaults");

	UFGGameUserSettings_SetAudioToDefaults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetArachnophobiaMode
// ()
// Parameters:
// bool                           newArachnophobiaMode           (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetArachnophobiaMode(bool newArachnophobiaMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetArachnophobiaMode");

	UFGGameUserSettings_SetArachnophobiaMode_Params params;
	params.newArachnophobiaMode = newArachnophobiaMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetAnalyticsDisabled
// ()
// Parameters:
// bool                           IsDisabled                     (Parm, ZeroConstructor, IsPlainOldData)
// class UAnalyticsService*       AnalyticsService               (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetAnalyticsDisabled(bool IsDisabled, class UAnalyticsService* AnalyticsService)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetAnalyticsDisabled");

	UFGGameUserSettings_SetAnalyticsDisabled_Params params;
	params.IsDisabled = IsDisabled;
	params.AnalyticsService = AnalyticsService;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.ResetAudioToCurrentSettings
// ()

void UFGGameUserSettings::ResetAudioToCurrentSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.ResetAudioToCurrentSettings");

	UFGGameUserSettings_ResetAudioToCurrentSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.IsUsingCustomQualitySetting
// ()
// Parameters:
// class FString                  SettingName                    (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::IsUsingCustomQualitySetting(const class FString& SettingName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.IsUsingCustomQualitySetting");

	UFGGameUserSettings_IsUsingCustomQualitySetting_Params params;
	params.SettingName = SettingName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.IsPostProcessUsingCustomSettings
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::IsPostProcessUsingCustomSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.IsPostProcessUsingCustomSettings");

	UFGGameUserSettings_IsPostProcessUsingCustomSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.IsMotionBlurEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::IsMotionBlurEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.IsMotionBlurEnabled");

	UFGGameUserSettings_IsMotionBlurEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.IsMotionBlurDirty
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::IsMotionBlurDirty()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.IsMotionBlurDirty");

	UFGGameUserSettings_IsMotionBlurDirty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetNeworkQuality
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGGameUserSettings::GetNeworkQuality()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetNeworkQuality");

	UFGGameUserSettings_GetNeworkQuality_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetKeyMappings
// ()
// Parameters:
// TArray<struct FFGKeyMapping>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FFGKeyMapping> UFGGameUserSettings::GetKeyMappings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetKeyMappings");

	UFGGameUserSettings_GetKeyMappings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetInvertedLook
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::GetInvertedLook()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetInvertedLook");

	UFGGameUserSettings_GetInvertedLook_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetHoldToSprint
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::GetHoldToSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetHoldToSprint");

	UFGGameUserSettings_GetHoldToSprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetHeadBobScale
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGGameUserSettings::GetHeadBobScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetHeadBobScale");

	UFGGameUserSettings_GetHeadBobScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetFOV
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGGameUserSettings::GetFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetFOV");

	UFGGameUserSettings_GetFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetFGGameUserSettings
// ()
// Parameters:
// class UFGGameUserSettings*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGGameUserSettings* UFGGameUserSettings::GetFGGameUserSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetFGGameUserSettings");

	UFGGameUserSettings_GetFGGameUserSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetDefaultQualitySetting
// ()
// Parameters:
// class FString                  SettingName                    (Parm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGGameUserSettings::GetDefaultQualitySetting(const class FString& SettingName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetDefaultQualitySetting");

	UFGGameUserSettings_GetDefaultQualitySetting_Params params;
	params.SettingName = SettingName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetAutoSortInventory
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::GetAutoSortInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetAutoSortInventory");

	UFGGameUserSettings_GetAutoSortInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetAudioVolume
// ()
// Parameters:
// class FString                  Name                           (Parm, ZeroConstructor)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGGameUserSettings::GetAudioVolume(const class FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetAudioVolume");

	UFGGameUserSettings_GetAudioVolume_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetArachnophobiaMode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::GetArachnophobiaMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetArachnophobiaMode");

	UFGGameUserSettings_GetArachnophobiaMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetAnalyticsDisabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::GetAnalyticsDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetAnalyticsDisabled");

	UFGGameUserSettings_GetAnalyticsDisabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGlobalSettings.GetSubsystemClassesCDO
// ()
// Parameters:
// class UFGSubsystemClasses*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGSubsystemClasses* UFGGlobalSettings::GetSubsystemClassesCDO()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGlobalSettings.GetSubsystemClassesCDO");

	UFGGlobalSettings_GetSubsystemClassesCDO_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGlobalSettings.GetSignSettingsCDO
// ()
// Parameters:
// class UFGSignSettings*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGSignSettings* UFGGlobalSettings::GetSignSettingsCDO()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGlobalSettings.GetSignSettingsCDO");

	UFGGlobalSettings_GetSignSettingsCDO_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGlobalSettings.GetResourceSettingsCDO
// ()
// Parameters:
// class UFGResourceSettings*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGResourceSettings* UFGGlobalSettings::GetResourceSettingsCDO()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGlobalSettings.GetResourceSettingsCDO");

	UFGGlobalSettings_GetResourceSettingsCDO_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGlobalSettings.GetHardDriveSettingsCDO
// ()
// Parameters:
// class UFGHardDriveSettings*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGHardDriveSettings* UFGGlobalSettings::GetHardDriveSettingsCDO()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGlobalSettings.GetHardDriveSettingsCDO");

	UFGGlobalSettings_GetHardDriveSettingsCDO_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGlobalSettings.GetGlobalSettingsClassCDO
// ()
// Parameters:
// class UFGGlobalSettings*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGGlobalSettings* UFGGlobalSettings::GetGlobalSettingsClassCDO()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGlobalSettings.GetGlobalSettingsClassCDO");

	UFGGlobalSettings_GetGlobalSettingsClassCDO_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGlobalSettings.GetFactorySettingsCDO
// ()
// Parameters:
// class UFGFactorySettings*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGFactorySettings* UFGGlobalSettings::GetFactorySettingsCDO()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGlobalSettings.GetFactorySettingsCDO");

	UFGGlobalSettings_GetFactorySettingsCDO_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGlobalSettings.GetEnvironmentSettingsCDO
// ()
// Parameters:
// class UFGEnvironmentSettings*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGEnvironmentSettings* UFGGlobalSettings::GetEnvironmentSettingsCDO()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGlobalSettings.GetEnvironmentSettingsCDO");

	UFGGlobalSettings_GetEnvironmentSettingsCDO_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGlobalSettings.GetDropPodSettingsCDO
// ()
// Parameters:
// class UFGDropPodSettings*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGDropPodSettings* UFGGlobalSettings::GetDropPodSettingsCDO()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGlobalSettings.GetDropPodSettingsCDO");

	UFGGlobalSettings_GetDropPodSettingsCDO_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHardDriveSettings.GetResearchRewardPackages
// ()
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  calledByResearch               (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FResearchRecipeReward> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FResearchRecipeReward> UFGHardDriveSettings::GetResearchRewardPackages(class UWorld* World, class UClass* calledByResearch)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHardDriveSettings.GetResearchRewardPackages");

	UFGHardDriveSettings_GetResearchRewardPackages_Params params;
	params.World = World;
	params.calledByResearch = calledByResearch;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHealthComponent.TakeRadialDamage
// ()
// Parameters:
// class AActor*                  damagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitLocation                    (Parm, IsPlainOldData)
// struct FHitResult              HitInfo                        (Parm, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::TakeRadialDamage(class AActor* damagedActor, float Damage, class UDamageType* DamageType, const struct FVector& HitLocation, const struct FHitResult& HitInfo, class AController* instigatedBy, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.TakeRadialDamage");

	UFGHealthComponent_TakeRadialDamage_Params params;
	params.damagedActor = damagedActor;
	params.Damage = Damage;
	params.DamageType = DamageType;
	params.HitLocation = HitLocation;
	params.HitInfo = HitInfo;
	params.instigatedBy = instigatedBy;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.TakePointDamage
// ()
// Parameters:
// class AActor*                  damagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitLocation                    (Parm, IsPlainOldData)
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ShotFromDirection              (Parm, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::TakePointDamage(class AActor* damagedActor, float Damage, class AController* instigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* HitComponent, const struct FName& BoneName, const struct FVector& ShotFromDirection, class UDamageType* DamageType, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.TakePointDamage");

	UFGHealthComponent_TakePointDamage_Params params;
	params.damagedActor = damagedActor;
	params.Damage = Damage;
	params.instigatedBy = instigatedBy;
	params.HitLocation = HitLocation;
	params.HitComponent = HitComponent;
	params.BoneName = BoneName;
	params.ShotFromDirection = ShotFromDirection;
	params.DamageType = DamageType;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.TakeDamage
// ()
// Parameters:
// class AActor*                  damagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::TakeDamage(class AActor* damagedActor, float damageAmount, class UDamageType* DamageType, class AController* instigatedBy, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.TakeDamage");

	UFGHealthComponent_TakeDamage_Params params;
	params.damagedActor = damagedActor;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.instigatedBy = instigatedBy;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.ReviveResetHealth
// ()

void UFGHealthComponent::ReviveResetHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.ReviveResetHealth");

	UFGHealthComponent_ReviveResetHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.ResetHealthFromDeath
// ()

void UFGHealthComponent::ResetHealthFromDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.ResetHealthFromDeath");

	UFGHealthComponent_ResetHealthFromDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.ResetHealth
// ()

void UFGHealthComponent::ResetHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.ResetHealth");

	UFGHealthComponent_ResetHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.RemoveAdjustDamageListener
// ()
// Parameters:
// struct FScriptDelegate         AdjustDamage                   (Parm, ZeroConstructor)

void UFGHealthComponent::RemoveAdjustDamageListener(const struct FScriptDelegate& AdjustDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.RemoveAdjustDamageListener");

	UFGHealthComponent_RemoveAdjustDamageListener_Params params;
	params.AdjustDamage = AdjustDamage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.Kill
// ()

void UFGHealthComponent::Kill()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.Kill");

	UFGHealthComponent_Kill_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.IsDead
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGHealthComponent::IsDead()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.IsDead");

	UFGHealthComponent_IsDead_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHealthComponent.Heal
// ()
// Parameters:
// float                          healAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::Heal(float healAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.Heal");

	UFGHealthComponent_Heal_Params params;
	params.healAmount = healAmount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.GetMaxHealth
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGHealthComponent::GetMaxHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.GetMaxHealth");

	UFGHealthComponent_GetMaxHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHealthComponent.GetCurrentHealth
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGHealthComponent::GetCurrentHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.GetCurrentHealth");

	UFGHealthComponent_GetCurrentHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHealthComponent.Client_TakeRadialDamage
// ()
// Parameters:
// class AActor*                  damagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitLocation                    (Parm, IsPlainOldData)
// struct FHitResult              HitInfo                        (Parm, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::Client_TakeRadialDamage(class AActor* damagedActor, float Damage, class UDamageType* DamageType, const struct FVector& HitLocation, const struct FHitResult& HitInfo, class AController* instigatedBy, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.Client_TakeRadialDamage");

	UFGHealthComponent_Client_TakeRadialDamage_Params params;
	params.damagedActor = damagedActor;
	params.Damage = Damage;
	params.DamageType = DamageType;
	params.HitLocation = HitLocation;
	params.HitInfo = HitInfo;
	params.instigatedBy = instigatedBy;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.Client_TakePointDamage
// ()
// Parameters:
// class AActor*                  damagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitLocation                    (Parm, IsPlainOldData)
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ShotFromDirection              (Parm, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::Client_TakePointDamage(class AActor* damagedActor, float Damage, class AController* instigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* HitComponent, const struct FName& BoneName, const struct FVector& ShotFromDirection, class UDamageType* DamageType, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.Client_TakePointDamage");

	UFGHealthComponent_Client_TakePointDamage_Params params;
	params.damagedActor = damagedActor;
	params.Damage = Damage;
	params.instigatedBy = instigatedBy;
	params.HitLocation = HitLocation;
	params.HitComponent = HitComponent;
	params.BoneName = BoneName;
	params.ShotFromDirection = ShotFromDirection;
	params.DamageType = DamageType;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.Client_TakeDamage
// ()
// Parameters:
// class AActor*                  damagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController*             instigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  damageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::Client_TakeDamage(class AActor* damagedActor, float damageAmount, class UDamageType* DamageType, class AController* instigatedBy, class AActor* damageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.Client_TakeDamage");

	UFGHealthComponent_Client_TakeDamage_Params params;
	params.damagedActor = damagedActor;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.instigatedBy = instigatedBy;
	params.damageCauser = damageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.Client_Heal
// ()
// Parameters:
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::Client_Heal(float amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.Client_Heal");

	UFGHealthComponent_Client_Heal_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.Client_Died
// ()
// Parameters:
// class AActor*                  DeadActor                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::Client_Died(class AActor* DeadActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.Client_Died");

	UFGHealthComponent_Client_Died_Params params;
	params.DeadActor = DeadActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.AddAdjustDamageListener
// ()
// Parameters:
// struct FScriptDelegate         AdjustDamage                   (Parm, ZeroConstructor)

void UFGHealthComponent::AddAdjustDamageListener(const struct FScriptDelegate& AdjustDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.AddAdjustDamageListener");

	UFGHealthComponent_AddAdjustDamageListener_Params params;
	params.AdjustDamage = AdjustDamage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHookshot.RestoreAudioSourceToOriginalLocation
// ()

void AFGHookshot::RestoreAudioSourceToOriginalLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHookshot.RestoreAudioSourceToOriginalLocation");

	AFGHookshot_RestoreAudioSourceToOriginalLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHookshot.OwnerLanded
// ()
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFGHookshot::OwnerLanded(const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHookshot.OwnerLanded");

	AFGHookshot_OwnerLanded_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHookshot.OnWireDetach
// ()

void AFGHookshot::OnWireDetach()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHookshot.OnWireDetach");

	AFGHookshot_OnWireDetach_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHookshot.OnFire
// ()
// Parameters:
// bool                           attachedToSomething            (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFGHookshot::OnFire(bool attachedToSomething, const struct FHitResult& HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHookshot.OnFire");

	AFGHookshot_OnFire_Params params;
	params.attachedToSomething = attachedToSomething;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHookshot.MoveAudioSourceInFrontOfPlayer
// ()

void AFGHookshot::MoveAudioSourceInFrontOfPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHookshot.MoveAudioSourceInFrontOfPlayer");

	AFGHookshot_MoveAudioSourceInFrontOfPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUDBase.GetBaseUI
// ()
// Parameters:
// class UFGBaseUI*               ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGBaseUI* AFGHUDBase::GetBaseUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUDBase.GetBaseUI");

	AFGHUDBase_GetBaseUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHUD.UpdateCrosshairState
// ()
// Parameters:
// class AFGCharacterPlayer*      Player                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::UpdateCrosshairState(class AFGCharacterPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.UpdateCrosshairState");

	AFGHUD_UpdateCrosshairState_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.UpdateCrosshairColorState
// ()
// Parameters:
// struct FLinearColor            NewColor                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFGHUD::UpdateCrosshairColorState(const struct FLinearColor& NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.UpdateCrosshairColorState");

	AFGHUD_UpdateCrosshairColorState_Params params;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.ShowRespawnUI
// ()

void AFGHUD::ShowRespawnUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.ShowRespawnUI");

	AFGHUD_ShowRespawnUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetShowCrossHair
// ()
// Parameters:
// bool                           showCrosshair                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetShowCrossHair(bool showCrosshair)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetShowCrossHair");

	AFGHUD_SetShowCrossHair_Params params;
	params.showCrosshair = showCrosshair;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetPumpiMode
// ()
// Parameters:
// bool                           hideHUD                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetPumpiMode(bool hideHUD)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetPumpiMode");

	AFGHUD_SetPumpiMode_Params params;
	params.hideHUD = hideHUD;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetPreviewView
// ()
// Parameters:
// struct FItemView               View                           (ConstParm, Parm, OutParm, ReferenceParm)

void AFGHUD::SetPreviewView(const struct FItemView& View)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetPreviewView");

	AFGHUD_SetPreviewView_Params params;
	params.View = View;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetPreviewDistance
// ()
// Parameters:
// float                          previewDistance                (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetPreviewDistance(float previewDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetPreviewDistance");

	AFGHUD_SetPreviewDistance_Params params;
	params.previewDistance = previewDistance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetPreviewActorClass
// ()
// Parameters:
// class UClass*                  ActorClass                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetPreviewActorClass(class UClass* ActorClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetPreviewActorClass");

	AFGHUD_SetPreviewActorClass_Params params;
	params.ActorClass = ActorClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetPartialPumpiMode
// ()
// Parameters:
// bool                           hideHUD                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetPartialPumpiMode(bool hideHUD)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetPartialPumpiMode");

	AFGHUD_SetPartialPumpiMode_Params params;
	params.hideHUD = hideHUD;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetHUDVisibility
// ()
// Parameters:
// bool                           hudVisibility                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetHUDVisibility(bool hudVisibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetHUDVisibility");

	AFGHUD_SetHUDVisibility_Params params;
	params.hudVisibility = hudVisibility;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetForceHideCrossHair
// ()
// Parameters:
// bool                           forceHide                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetForceHideCrossHair(bool forceHide)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetForceHideCrossHair");

	AFGHUD_SetForceHideCrossHair_Params params;
	params.forceHide = forceHide;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetCrustomCrosshairTexture
// ()
// Parameters:
// class UTexture2D*              newTexture                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetCrustomCrosshairTexture(class UTexture2D* newTexture)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetCrustomCrosshairTexture");

	AFGHUD_SetCrustomCrosshairTexture_Params params;
	params.newTexture = newTexture;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetCrosshairState
// ()
// Parameters:
// ECrosshairState                crosshairState                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetCrosshairState(ECrosshairState crosshairState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetCrosshairState");

	AFGHUD_SetCrosshairState_Params params;
	params.crosshairState = crosshairState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.RemoveEquipmentHUD
// ()
// Parameters:
// EEquipmentSlot                 Slot                           (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::RemoveEquipmentHUD(EEquipmentSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.RemoveEquipmentHUD");

	AFGHUD_RemoveEquipmentHUD_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.OpenInteractUI
// ()
// Parameters:
// class UClass*                  WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 interactObject                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::OpenInteractUI(class UClass* WidgetClass, class UObject* interactObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.OpenInteractUI");

	AFGHUD_OpenInteractUI_Params params;
	params.WidgetClass = WidgetClass;
	params.interactObject = interactObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.GetShowCrosshair
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGHUD::GetShowCrosshair()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.GetShowCrosshair");

	AFGHUD_GetShowCrosshair_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHUD.GetPumpiMode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGHUD::GetPumpiMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.GetPumpiMode");

	AFGHUD_GetPumpiMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHUD.GetPreviewTexture
// ()
// Parameters:
// class UTextureRenderTarget2D*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTextureRenderTarget2D* AFGHUD::GetPreviewTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.GetPreviewTexture");

	AFGHUD_GetPreviewTexture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHUD.GetPartialPumpiMode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGHUD::GetPartialPumpiMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.GetPartialPumpiMode");

	AFGHUD_GetPartialPumpiMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHUD.GetHUDVisibility
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGHUD::GetHUDVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.GetHUDVisibility");

	AFGHUD_GetHUDVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHUD.GetGameUI
// ()
// Parameters:
// class UFGGameUI*               ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGGameUI* AFGHUD::GetGameUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.GetGameUI");

	AFGHUD_GetGameUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHUD.GetCrosshairState
// ()
// Parameters:
// ECrosshairState                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECrosshairState AFGHUD::GetCrosshairState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.GetCrosshairState");

	AFGHUD_GetCrosshairState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHUD.EndPreviewActor
// ()

void AFGHUD::EndPreviewActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.EndPreviewActor");

	AFGHUD_EndPreviewActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.CloseRespawnUI
// ()

void AFGHUD::CloseRespawnUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.CloseRespawnUI");

	AFGHUD_CloseRespawnUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.BeginPreviewActor
// ()

void AFGHUD::BeginPreviewActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.BeginPreviewActor");

	AFGHUD_BeginPreviewActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.AddPawnHUD
// ()
// Parameters:
// class UClass*                  WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   Pawn                           (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::AddPawnHUD(class UClass* WidgetClass, class APawn* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.AddPawnHUD");

	AFGHUD_AddPawnHUD_Params params;
	params.WidgetClass = WidgetClass;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.AddEquipmentHUD
// ()
// Parameters:
// class UClass*                  WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// EEquipmentSlot                 Slot                           (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::AddEquipmentHUD(class UClass* WidgetClass, EEquipmentSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.AddEquipmentHUD");

	AFGHUD_AddEquipmentHUD_Params params;
	params.WidgetClass = WidgetClass;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInputLibrary.UpdateInputMappings
// ()
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)

void UFGInputLibrary::UpdateInputMappings(class APlayerController* PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.UpdateInputMappings");

	UFGInputLibrary_UpdateInputMappings_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInputLibrary.RebindKey
// ()
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGKeyMapping           newKeyMapping                  (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInputLibrary::RebindKey(class APlayerController* PlayerController, const struct FFGKeyMapping& newKeyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.RebindKey");

	UFGInputLibrary_RebindKey_Params params;
	params.PlayerController = PlayerController;
	params.newKeyMapping = newKeyMapping;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.NullKeyMappingWithSameKeyCombo
// ()
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGKeyMapping           keyMapping                     (ConstParm, Parm, OutParm, ReferenceParm)

void UFGInputLibrary::NullKeyMappingWithSameKeyCombo(class APlayerController* PlayerController, const struct FFGKeyMapping& keyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.NullKeyMappingWithSameKeyCombo");

	UFGInputLibrary_NullKeyMappingWithSameKeyCombo_Params params;
	params.PlayerController = PlayerController;
	params.keyMapping = keyMapping;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInputLibrary.IsKeyMappingRelevant
// ()
// Parameters:
// struct FName                   keyMappingName                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInputLibrary::IsKeyMappingRelevant(const struct FName& keyMappingName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.IsKeyMappingRelevant");

	UFGInputLibrary_IsKeyMappingRelevant_Params params;
	params.keyMappingName = keyMappingName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.IsFGKeyMappingAvailable
// ()
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGKeyMapping           keyMapping                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInputLibrary::IsFGKeyMappingAvailable(class APlayerController* PlayerController, const struct FFGKeyMapping& keyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.IsFGKeyMappingAvailable");

	UFGInputLibrary_IsFGKeyMappingAvailable_Params params;
	params.PlayerController = PlayerController;
	params.keyMapping = keyMapping;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.IsAxisMappingUsingSameKeys
// ()
// Parameters:
// struct FInputAxisKeyMapping    mappingA                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FInputAxisKeyMapping    mappingB                       (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInputLibrary::IsAxisMappingUsingSameKeys(const struct FInputAxisKeyMapping& mappingA, const struct FInputAxisKeyMapping& mappingB)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.IsAxisMappingUsingSameKeys");

	UFGInputLibrary_IsAxisMappingUsingSameKeys_Params params;
	params.mappingA = mappingA;
	params.mappingB = mappingB;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.IsAxisKeyMappingAvailable
// ()
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGKeyMapping           keyMapping                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInputLibrary::IsAxisKeyMappingAvailable(class APlayerController* PlayerController, const struct FFGKeyMapping& keyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.IsAxisKeyMappingAvailable");

	UFGInputLibrary_IsAxisKeyMappingAvailable_Params params;
	params.PlayerController = PlayerController;
	params.keyMapping = keyMapping;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.IsActionMappingUsingSameKeys
// ()
// Parameters:
// struct FInputActionKeyMapping  mappingA                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FInputActionKeyMapping  mappingB                       (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInputLibrary::IsActionMappingUsingSameKeys(const struct FInputActionKeyMapping& mappingA, const struct FInputActionKeyMapping& mappingB)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.IsActionMappingUsingSameKeys");

	UFGInputLibrary_IsActionMappingUsingSameKeys_Params params;
	params.mappingA = mappingA;
	params.mappingB = mappingB;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.IsActionKeyMappingAvailable
// ()
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGKeyMapping           keyMapping                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInputLibrary::IsActionKeyMappingAvailable(class APlayerController* PlayerController, const struct FFGKeyMapping& keyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.IsActionKeyMappingAvailable");

	UFGInputLibrary_IsActionKeyMappingAvailable_Params params;
	params.PlayerController = PlayerController;
	params.keyMapping = keyMapping;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.IsActionAndAxisMappingUsingSameKeys
// ()
// Parameters:
// struct FInputActionKeyMapping  actionMapping                  (ConstParm, Parm, OutParm, ReferenceParm)
// struct FInputAxisKeyMapping    axisMapping                    (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInputLibrary::IsActionAndAxisMappingUsingSameKeys(const struct FInputActionKeyMapping& actionMapping, const struct FInputAxisKeyMapping& axisMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.IsActionAndAxisMappingUsingSameKeys");

	UFGInputLibrary_IsActionAndAxisMappingUsingSameKeys_Params params;
	params.actionMapping = actionMapping;
	params.axisMapping = axisMapping;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.GetOverlappingKeyMapping
// ()
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGKeyMapping           keyMapping                     (ConstParm, Parm, OutParm, ReferenceParm)
// struct FFGKeyMapping           ReturnValue                    (Parm, OutParm, ReturnParm)

struct FFGKeyMapping UFGInputLibrary::GetOverlappingKeyMapping(class APlayerController* PlayerController, const struct FFGKeyMapping& keyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.GetOverlappingKeyMapping");

	UFGInputLibrary_GetOverlappingKeyMapping_Params params;
	params.PlayerController = PlayerController;
	params.keyMapping = keyMapping;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.GetKeyNameForAxis
// ()
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   AxisName                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           positiveAxisScale              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           getGamepadKey                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGInputLibrary::GetKeyNameForAxis(class APlayerController* PlayerController, const struct FName& AxisName, bool positiveAxisScale, bool getGamepadKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.GetKeyNameForAxis");

	UFGInputLibrary_GetKeyNameForAxis_Params params;
	params.PlayerController = PlayerController;
	params.AxisName = AxisName;
	params.positiveAxisScale = positiveAxisScale;
	params.getGamepadKey = getGamepadKey;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.GetKeyNameForAction
// ()
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           getGamepadKey                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           abbreviateKeyName              (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGInputLibrary::GetKeyNameForAction(class APlayerController* PlayerController, const struct FName& ActionName, bool getGamepadKey, bool abbreviateKeyName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.GetKeyNameForAction");

	UFGInputLibrary_GetKeyNameForAction_Params params;
	params.PlayerController = PlayerController;
	params.ActionName = ActionName;
	params.getGamepadKey = getGamepadKey;
	params.abbreviateKeyName = abbreviateKeyName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.GetKeyMappingForAction
// ()
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   inAction                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           getGamepadKey                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FInputActionKeyMapping  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FInputActionKeyMapping UFGInputLibrary::GetKeyMappingForAction(class APlayerController* PlayerController, const struct FName& inAction, bool getGamepadKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.GetKeyMappingForAction");

	UFGInputLibrary_GetKeyMappingForAction_Params params;
	params.PlayerController = PlayerController;
	params.inAction = inAction;
	params.getGamepadKey = getGamepadKey;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.GetKeyForAxis
// ()
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   AxisName                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           positiveAxisScale              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           getGamepadKey                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FKey                    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FKey UFGInputLibrary::GetKeyForAxis(class APlayerController* PlayerController, const struct FName& AxisName, bool positiveAxisScale, bool getGamepadKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.GetKeyForAxis");

	UFGInputLibrary_GetKeyForAxis_Params params;
	params.PlayerController = PlayerController;
	params.AxisName = AxisName;
	params.positiveAxisScale = positiveAxisScale;
	params.getGamepadKey = getGamepadKey;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.GetAbbreviatedKeyName
// ()
// Parameters:
// struct FKey                    Key                            (Parm)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGInputLibrary::GetAbbreviatedKeyName(const struct FKey& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.GetAbbreviatedKeyName");

	UFGInputLibrary_GetAbbreviatedKeyName_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.FormatStringWithKeyNames
// ()
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   textToFormat                   (Parm)
// bool                           abbreviateKeyNames             (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGInputLibrary::FormatStringWithKeyNames(class APlayerController* PlayerController, const struct FText& textToFormat, bool abbreviateKeyNames)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.FormatStringWithKeyNames");

	UFGInputLibrary_FormatStringWithKeyNames_Params params;
	params.PlayerController = PlayerController;
	params.textToFormat = textToFormat;
	params.abbreviateKeyNames = abbreviateKeyNames;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.CreateFGKeyMappingStruct
// ()
// Parameters:
// struct FName                   ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsAxisMapping                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           positiveAxisScale              (Parm, ZeroConstructor, IsPlainOldData)
// struct FInputEvent             InputEvent                     (Parm)
// struct FKey                    keyPressed                     (Parm)
// struct FFGKeyMapping           ReturnValue                    (Parm, OutParm, ReturnParm)

struct FFGKeyMapping UFGInputLibrary::CreateFGKeyMappingStruct(const struct FName& ActionName, bool IsAxisMapping, bool positiveAxisScale, const struct FInputEvent& InputEvent, const struct FKey& keyPressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.CreateFGKeyMappingStruct");

	UFGInputLibrary_CreateFGKeyMappingStruct_Params params;
	params.ActionName = ActionName;
	params.IsAxisMapping = IsAxisMapping;
	params.positiveAxisScale = positiveAxisScale;
	params.InputEvent = InputEvent;
	params.keyPressed = keyPressed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInteractableMarker.SetTrackedActor
// ()
// Parameters:
// class AActor*                  trackedActor                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGInteractableMarker::SetTrackedActor(class AActor* trackedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractableMarker.SetTrackedActor");

	AFGInteractableMarker_SetTrackedActor_Params params;
	params.trackedActor = trackedActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractableMarker.OnSetActorTracked
// ()

void AFGInteractableMarker::OnSetActorTracked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractableMarker.OnSetActorTracked");

	AFGInteractableMarker_OnSetActorTracked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractableMarker.GetTrackedActor
// ()
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AFGInteractableMarker::GetTrackedActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractableMarker.GetTrackedActor");

	AFGInteractableMarker_GetTrackedActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInteractWidget.UpdateIgnoreMoveInput
// ()

void UFGInteractWidget::UpdateIgnoreMoveInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.UpdateIgnoreMoveInput");

	UFGInteractWidget_UpdateIgnoreMoveInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.UpdateIgnoreLookInput
// ()

void UFGInteractWidget::UpdateIgnoreLookInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.UpdateIgnoreLookInput");

	UFGInteractWidget_UpdateIgnoreLookInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.SetupDefaultFocus
// ()

void UFGInteractWidget::SetupDefaultFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.SetupDefaultFocus");

	UFGInteractWidget_SetupDefaultFocus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.SetInputMode
// ()

void UFGInteractWidget::SetInputMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.SetInputMode");

	UFGInteractWidget_SetInputMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.SetDesiredVerticalAlignment
// ()
// Parameters:
// TEnumAsByte<EVerticalAlignment> newAlignment                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGInteractWidget::SetDesiredVerticalAlignment(TEnumAsByte<EVerticalAlignment> newAlignment)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.SetDesiredVerticalAlignment");

	UFGInteractWidget_SetDesiredVerticalAlignment_Params params;
	params.newAlignment = newAlignment;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.SetDesiredHorizontalAlignment
// ()
// Parameters:
// TEnumAsByte<EHorizontalAlignment> newAlignment                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGInteractWidget::SetDesiredHorizontalAlignment(TEnumAsByte<EHorizontalAlignment> newAlignment)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.SetDesiredHorizontalAlignment");

	UFGInteractWidget_SetDesiredHorizontalAlignment_Params params;
	params.newAlignment = newAlignment;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.SetDesiredAlignmentSize
// ()
// Parameters:
// struct FSlateChildSize         newSize                        (Parm)

void UFGInteractWidget::SetDesiredAlignmentSize(const struct FSlateChildSize& newSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.SetDesiredAlignmentSize");

	UFGInteractWidget_SetDesiredAlignmentSize_Params params;
	params.newSize = newSize;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.SetDefaultFocusWidget
// ()
// Parameters:
// class UWidget*                 FocusWidget                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGInteractWidget::SetDefaultFocusWidget(class UWidget* FocusWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.SetDefaultFocusWidget");

	UFGInteractWidget_SetDefaultFocusWidget_Params params;
	params.FocusWidget = FocusWidget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.OnEscapePressed
// ()

void UFGInteractWidget::OnEscapePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.OnEscapePressed");

	UFGInteractWidget_OnEscapePressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.OnConsume
// ()

void UFGInteractWidget::OnConsume()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.OnConsume");

	UFGInteractWidget_OnConsume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.Init
// ()

void UFGInteractWidget::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.Init");

	UFGInteractWidget_Init_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.GetUseGamepadCursor
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInteractWidget::GetUseGamepadCursor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.GetUseGamepadCursor");

	UFGInteractWidget_GetUseGamepadCursor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInteractWidget.GetSupportsStacking
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInteractWidget::GetSupportsStacking()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.GetSupportsStacking");

	UFGInteractWidget_GetSupportsStacking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInteractWidget.GetDesiredVerticalAlignment
// ()
// Parameters:
// TEnumAsByte<EVerticalAlignment> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EVerticalAlignment> UFGInteractWidget::GetDesiredVerticalAlignment()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.GetDesiredVerticalAlignment");

	UFGInteractWidget_GetDesiredVerticalAlignment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInteractWidget.GetDesiredHorizontalAlignment
// ()
// Parameters:
// TEnumAsByte<EHorizontalAlignment> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EHorizontalAlignment> UFGInteractWidget::GetDesiredHorizontalAlignment()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.GetDesiredHorizontalAlignment");

	UFGInteractWidget_GetDesiredHorizontalAlignment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInteractWidget.GetDesiredAlignmentSize
// ()
// Parameters:
// struct FSlateChildSize         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateChildSize UFGInteractWidget::GetDesiredAlignmentSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.GetDesiredAlignmentSize");

	UFGInteractWidget_GetDesiredAlignmentSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInteractWidget.GetDefaultFocusWidget
// ()
// Parameters:
// class UWidget*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidget* UFGInteractWidget::GetDefaultFocusWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.GetDefaultFocusWidget");

	UFGInteractWidget_GetDefaultFocusWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.SplitStackAtIdx
// ()
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// int                            numItemsToMove                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryComponent::SplitStackAtIdx(int idx, int numItemsToMove)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.SplitStackAtIdx");

	UFGInventoryComponent_SplitStackAtIdx_Params params;
	params.idx = idx;
	params.numItemsToMove = numItemsToMove;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.SortInventory
// ()

void UFGInventoryComponent::SortInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.SortInventory");

	UFGInventoryComponent_SortInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.SetCanBeRearranged
// ()
// Parameters:
// bool                           canBeRearranged                (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryComponent::SetCanBeRearranged(bool canBeRearranged)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.SetCanBeRearranged");

	UFGInventoryComponent_SetCanBeRearranged_Params params;
	params.canBeRearranged = canBeRearranged;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.SetAllowedItemOnIndex
// ()
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  allowedItemClass               (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryComponent::SetAllowedItemOnIndex(int idx, class UClass* allowedItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.SetAllowedItemOnIndex");

	UFGInventoryComponent_SetAllowedItemOnIndex_Params params;
	params.idx = idx;
	params.allowedItemClass = allowedItemClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.Server_SortInventory
// ()

void UFGInventoryComponent::Server_SortInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.Server_SortInventory");

	UFGInventoryComponent_Server_SortInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.Resize
// ()
// Parameters:
// int                            newSize                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryComponent::Resize(int newSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.Resize");

	UFGInventoryComponent_Resize_Params params;
	params.newSize = newSize;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.RemoveFromIndex
// ()
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// int                            Num                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryComponent::RemoveFromIndex(int idx, int Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.RemoveFromIndex");

	UFGInventoryComponent_RemoveFromIndex_Params params;
	params.idx = idx;
	params.Num = Num;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.RemoveAllFromIndex
// ()
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryComponent::RemoveAllFromIndex(int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.RemoveAllFromIndex");

	UFGInventoryComponent_RemoveAllFromIndex_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.Remove
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            Num                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryComponent::Remove(class UClass* ItemClass, int Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.Remove");

	UFGInventoryComponent_Remove_Params params;
	params.ItemClass = ItemClass;
	params.Num = Num;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.OnRep_InventoryStacks
// ()

void UFGInventoryComponent::OnRep_InventoryStacks()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.OnRep_InventoryStacks");

	UFGInventoryComponent_OnRep_InventoryStacks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.IsValidIndex
// ()
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::IsValidIndex(int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.IsValidIndex");

	UFGInventoryComponent_IsValidIndex_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.IsSomethingOnIndex
// ()
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::IsSomethingOnIndex(int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.IsSomethingOnIndex");

	UFGInventoryComponent_IsSomethingOnIndex_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.IsItemAllowed
// ()
// Parameters:
// class UClass*                  Item                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            idx                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::IsItemAllowed(class UClass* Item, int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.IsItemAllowed");

	UFGInventoryComponent_IsItemAllowed_Params params;
	params.Item = Item;
	params.idx = idx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.IsIndexEmpty
// ()
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::IsIndexEmpty(int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.IsIndexEmpty");

	UFGInventoryComponent_IsIndexEmpty_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.IsEmpty
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::IsEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.IsEmpty");

	UFGInventoryComponent_IsEmpty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.HasItems
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            Num                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::HasItems(class UClass* ItemClass, int Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.HasItems");

	UFGInventoryComponent_HasItems_Params params;
	params.ItemClass = ItemClass;
	params.Num = Num;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.HasEnoughSpaceForStacks
// ()
// Parameters:
// TArray<struct FInventoryStack> stacks                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::HasEnoughSpaceForStacks(TArray<struct FInventoryStack> stacks)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.HasEnoughSpaceForStacks");

	UFGInventoryComponent_HasEnoughSpaceForStacks_Params params;
	params.stacks = stacks;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.HasEnoughSpaceForStack
// ()
// Parameters:
// struct FInventoryStack         stack                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::HasEnoughSpaceForStack(const struct FInventoryStack& stack)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.HasEnoughSpaceForStack");

	UFGInventoryComponent_HasEnoughSpaceForStack_Params params;
	params.stack = stack;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.HasEnoughSpaceForItem
// ()
// Parameters:
// struct FInventoryItem          stack                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::HasEnoughSpaceForItem(const struct FInventoryItem& stack)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.HasEnoughSpaceForItem");

	UFGInventoryComponent_HasEnoughSpaceForItem_Params params;
	params.stack = stack;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.HasAuthority
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::HasAuthority()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.HasAuthority");

	UFGInventoryComponent_HasAuthority_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.GetStackFromIndex
// ()
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FInventoryStack         out_stack                      (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::GetStackFromIndex(int idx, struct FInventoryStack* out_stack)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.GetStackFromIndex");

	UFGInventoryComponent_GetStackFromIndex_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_stack != nullptr)
		*out_stack = params.out_stack;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.GetSlotSize
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  itemDesc                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryComponent::GetSlotSize(int Index, class UClass* itemDesc)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.GetSlotSize");

	UFGInventoryComponent_GetSlotSize_Params params;
	params.Index = Index;
	params.itemDesc = itemDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.GetSizeLinear
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryComponent::GetSizeLinear()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.GetSizeLinear");

	UFGInventoryComponent_GetSizeLinear_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.GetNumItems
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryComponent::GetNumItems(class UClass* ItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.GetNumItems");

	UFGInventoryComponent_GetNumItems_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.GetInventoryStacks
// ()
// Parameters:
// TArray<struct FInventoryStack> out_stacks                     (Parm, OutParm, ZeroConstructor)

void UFGInventoryComponent::GetInventoryStacks(TArray<struct FInventoryStack>* out_stacks)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.GetInventoryStacks");

	UFGInventoryComponent_GetInventoryStacks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_stacks != nullptr)
		*out_stacks = params.out_stacks;
}


// Function FactoryGame.FGInventoryComponent.GetFullestStackIndex
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryComponent::GetFullestStackIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.GetFullestStackIndex");

	UFGInventoryComponent_GetFullestStackIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.GetCanBeRearranged
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::GetCanBeRearranged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.GetCanBeRearranged");

	UFGInventoryComponent_GetCanBeRearranged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.GetAllowedItemOnIndex
// ()
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGInventoryComponent::GetAllowedItemOnIndex(int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.GetAllowedItemOnIndex");

	UFGInventoryComponent_GetAllowedItemOnIndex_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.FindEmptyIndex
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryComponent::FindEmptyIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.FindEmptyIndex");

	UFGInventoryComponent_FindEmptyIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.Empty
// ()

void UFGInventoryComponent::Empty()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.Empty");

	UFGInventoryComponent_Empty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.CanSplitStackAtIdx
// ()
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::CanSplitStackAtIdx(int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.CanSplitStackAtIdx");

	UFGInventoryComponent_CanSplitStackAtIdx_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.AddStackToIndex
// ()
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FInventoryStack         stack                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           allowPartial                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryComponent::AddStackToIndex(int idx, const struct FInventoryStack& stack, bool allowPartial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.AddStackToIndex");

	UFGInventoryComponent_AddStackToIndex_Params params;
	params.idx = idx;
	params.stack = stack;
	params.allowPartial = allowPartial;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.AddStacks
// ()
// Parameters:
// TArray<struct FInventoryStack> stacks                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGInventoryComponent::AddStacks(TArray<struct FInventoryStack> stacks)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.AddStacks");

	UFGInventoryComponent_AddStacks_Params params;
	params.stacks = stacks;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.AddStack
// ()
// Parameters:
// struct FInventoryStack         stack                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           allowPartialAdd                (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryComponent::AddStack(const struct FInventoryStack& stack, bool allowPartialAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.AddStack");

	UFGInventoryComponent_AddStack_Params params;
	params.stack = stack;
	params.allowPartialAdd = allowPartialAdd;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.AddArbitrarySlotSize
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            arbitrarySlotSize              (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryComponent::AddArbitrarySlotSize(int Index, int arbitrarySlotSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.AddArbitrarySlotSize");

	UFGInventoryComponent_AddArbitrarySlotSize_Params params;
	params.Index = Index;
	params.arbitrarySlotSize = arbitrarySlotSize;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponentEquipment.GetEquipmentSlotEnum
// ()
// Parameters:
// EEquipmentSlot                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EEquipmentSlot UFGInventoryComponentEquipment::GetEquipmentSlotEnum()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponentEquipment.GetEquipmentSlotEnum");

	UFGInventoryComponentEquipment_GetEquipmentSlotEnum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponentEquipment.GetActiveIndex
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryComponentEquipment::GetActiveIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponentEquipment.GetActiveIndex");

	UFGInventoryComponentEquipment_GetActiveIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.MoveInventoryItem
// ()
// Parameters:
// class UFGInventoryComponent*   SourceComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            sourceIdx                      (Parm, ZeroConstructor, IsPlainOldData)
// class UFGInventoryComponent*   destinationComponent           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            destinationIdx                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryLibrary::MoveInventoryItem(class UFGInventoryComponent* SourceComponent, int sourceIdx, class UFGInventoryComponent* destinationComponent, int destinationIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.MoveInventoryItem");

	UFGInventoryLibrary_MoveInventoryItem_Params params;
	params.SourceComponent = SourceComponent;
	params.sourceIdx = sourceIdx;
	params.destinationComponent = destinationComponent;
	params.destinationIdx = destinationIdx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.MergeInventoryItem
// ()
// Parameters:
// TArray<struct FInventoryStack> Items                          (Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FInventoryStack         Item                           (ConstParm, Parm, OutParm, ReferenceParm)

void UFGInventoryLibrary::MergeInventoryItem(const struct FInventoryStack& Item, TArray<struct FInventoryStack>* Items)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.MergeInventoryItem");

	UFGInventoryLibrary_MergeInventoryItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Items != nullptr)
		*Items = params.Items;
}


// Function FactoryGame.FGInventoryLibrary.MakeInventoryStack
// ()
// Parameters:
// int                            NumItems                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FInventoryItem          Item                           (Parm)
// struct FInventoryStack         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FInventoryStack UFGInventoryLibrary::MakeInventoryStack(int NumItems, const struct FInventoryItem& Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.MakeInventoryStack");

	UFGInventoryLibrary_MakeInventoryStack_Params params;
	params.NumItems = NumItems;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.MakeInventoryItem
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FInventoryItem          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FInventoryItem UFGInventoryLibrary::MakeInventoryItem(class UClass* ItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.MakeInventoryItem");

	UFGInventoryLibrary_MakeInventoryItem_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.IsValidItem
// ()
// Parameters:
// struct FInventoryItem          Item                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryLibrary::IsValidItem(const struct FInventoryItem& Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.IsValidItem");

	UFGInventoryLibrary_IsValidItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.HasState
// ()
// Parameters:
// struct FInventoryItem          Item                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryLibrary::HasState(const struct FInventoryItem& Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.HasState");

	UFGInventoryLibrary_HasState_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.HasItems
// ()
// Parameters:
// struct FInventoryStack         stack                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryLibrary::HasItems(const struct FInventoryStack& stack)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.HasItems");

	UFGInventoryLibrary_HasItems_Params params;
	params.stack = stack;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.GrabAllItemsFromInventory
// ()
// Parameters:
// class UFGInventoryComponent*   SourceComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UFGInventoryComponent*   destinationComponent           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UClass*                  onlyGrabOfDesc                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryLibrary::GrabAllItemsFromInventory(class UFGInventoryComponent* SourceComponent, class UFGInventoryComponent* destinationComponent, class UClass* onlyGrabOfDesc)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.GrabAllItemsFromInventory");

	UFGInventoryLibrary_GrabAllItemsFromInventory_Params params;
	params.SourceComponent = SourceComponent;
	params.destinationComponent = destinationComponent;
	params.onlyGrabOfDesc = onlyGrabOfDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.GetMinNumSlotsForItems
// ()
// Parameters:
// TArray<struct FInventoryStack> Items                          (Parm, OutParm, ZeroConstructor, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryLibrary::GetMinNumSlotsForItems(TArray<struct FInventoryStack>* Items)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.GetMinNumSlotsForItems");

	UFGInventoryLibrary_GetMinNumSlotsForItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Items != nullptr)
		*Items = params.Items;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.CreateInventoryComponentOfClass
// ()
// Parameters:
// class AActor*                  Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* UFGInventoryLibrary::CreateInventoryComponentOfClass(class AActor* Owner, class UClass* inClass, const struct FName& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.CreateInventoryComponentOfClass");

	UFGInventoryLibrary_CreateInventoryComponentOfClass_Params params;
	params.Owner = Owner;
	params.inClass = inClass;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.CreateInventoryComponent
// ()
// Parameters:
// class AActor*                  Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* UFGInventoryLibrary::CreateInventoryComponent(class AActor* Owner, const struct FName& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.CreateInventoryComponent");

	UFGInventoryLibrary_CreateInventoryComponent_Params params;
	params.Owner = Owner;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.ConsolidateItemsAmount
// ()
// Parameters:
// TArray<struct FItemAmount>     Items                          (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGInventoryLibrary::ConsolidateItemsAmount(TArray<struct FItemAmount>* Items)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.ConsolidateItemsAmount");

	UFGInventoryLibrary_ConsolidateItemsAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Items != nullptr)
		*Items = params.Items;
}


// Function FactoryGame.FGInventoryLibrary.ConsolidateInventoryItems
// ()
// Parameters:
// TArray<struct FInventoryStack> Items                          (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGInventoryLibrary::ConsolidateInventoryItems(TArray<struct FInventoryStack>* Items)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.ConsolidateInventoryItems");

	UFGInventoryLibrary_ConsolidateInventoryItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Items != nullptr)
		*Items = params.Items;
}


// Function FactoryGame.FGInventoryLibrary.BreakInventoryStack
// ()
// Parameters:
// struct FInventoryStack         stack                          (ConstParm, Parm, OutParm, ReferenceParm)
// int                            out_numItems                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FInventoryItem          out_item                       (Parm, OutParm)

void UFGInventoryLibrary::BreakInventoryStack(const struct FInventoryStack& stack, int* out_numItems, struct FInventoryItem* out_item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.BreakInventoryStack");

	UFGInventoryLibrary_BreakInventoryStack_Params params;
	params.stack = stack;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_numItems != nullptr)
		*out_numItems = params.out_numItems;
	if (out_item != nullptr)
		*out_item = params.out_item;
}


// Function FactoryGame.FGInventoryLibrary.BreakInventoryItem
// ()
// Parameters:
// struct FInventoryItem          Item                           (ConstParm, Parm, OutParm, ReferenceParm)
// class UClass*                  out_itemClass                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AActor*                  out_itemState                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UFGInventoryLibrary::BreakInventoryItem(const struct FInventoryItem& Item, class UClass** out_itemClass, class AActor** out_itemState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.BreakInventoryItem");

	UFGInventoryLibrary_BreakInventoryItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_itemClass != nullptr)
		*out_itemClass = params.out_itemClass;
	if (out_itemState != nullptr)
		*out_itemState = params.out_itemState;
}


// Function FactoryGame.FGItemDescriptorNuclearFuel.GetSpentFuelClass
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGItemDescriptorNuclearFuel::GetSpentFuelClass(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptorNuclearFuel.GetSpentFuelClass");

	UFGItemDescriptorNuclearFuel_GetSpentFuelClass_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemPickup.SetNumItems
// ()
// Parameters:
// int                            NumItems                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGItemPickup::SetNumItems(int NumItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.SetNumItems");

	AFGItemPickup_SetNumItems_Params params;
	params.NumItems = NumItems;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGItemPickup.PlayPickupEffect
// ()

void AFGItemPickup::PlayPickupEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.PlayPickupEffect");

	AFGItemPickup_PlayPickupEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGItemPickup.PickUpByCharacter
// ()
// Parameters:
// class AFGCharacterPlayer*      byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGItemPickup::PickUpByCharacter(class AFGCharacterPlayer* byCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.PickUpByCharacter");

	AFGItemPickup_PickUpByCharacter_Params params;
	params.byCharacter = byCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGItemPickup.PickupByAmount
// ()
// Parameters:
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGItemPickup::PickupByAmount(int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.PickupByAmount");

	AFGItemPickup_PickupByAmount_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemPickup.OnRep_PickedUp
// ()

void AFGItemPickup::OnRep_PickedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.OnRep_PickedUp");

	AFGItemPickup_OnRep_PickedUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGItemPickup.OnPickup
// ()
// Parameters:
// class AFGCharacterPlayer*      byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGItemPickup::OnPickup(class AFGCharacterPlayer* byCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.OnPickup");

	AFGItemPickup_OnPickup_Params params;
	params.byCharacter = byCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGItemPickup.IsPickedUp
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGItemPickup::IsPickedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.IsPickedUp");

	AFGItemPickup_IsPickedUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemPickup.GetPickupItems
// ()
// Parameters:
// struct FInventoryStack         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FInventoryStack AFGItemPickup::GetPickupItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.GetPickupItems");

	AFGItemPickup_GetPickupItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemPickup.GetNumItems
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGItemPickup::GetNumItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.GetNumItems");

	AFGItemPickup_GetNumItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemPickup.GetNormalizedCollectionProgress
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGItemPickup::GetNormalizedCollectionProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.GetNormalizedCollectionProgress");

	AFGItemPickup_GetNormalizedCollectionProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemPickup_Spawnable.PlaySpawnEffect
// ()

void AFGItemPickup_Spawnable::PlaySpawnEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup_Spawnable.PlaySpawnEffect");

	AFGItemPickup_Spawnable_PlaySpawnEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGItemPickup_Spawnable.FindGroundLocationAndRotation
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 fromLocation                   (Parm, IsPlainOldData)
// TArray<class AActor*>          ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector                 out_location                   (Parm, OutParm, IsPlainOldData)
// struct FRotator                out_rotation                   (Parm, OutParm, IsPlainOldData)

void AFGItemPickup_Spawnable::FindGroundLocationAndRotation(class UObject* WorldContext, const struct FVector& fromLocation, TArray<class AActor*> ActorsToIgnore, struct FVector* out_location, struct FRotator* out_rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup_Spawnable.FindGroundLocationAndRotation");

	AFGItemPickup_Spawnable_FindGroundLocationAndRotation_Params params;
	params.WorldContext = WorldContext;
	params.fromLocation = fromLocation;
	params.ActorsToIgnore = ActorsToIgnore;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_location != nullptr)
		*out_location = params.out_location;
	if (out_rotation != nullptr)
		*out_rotation = params.out_rotation;
}


// Function FactoryGame.FGItemPickup_Spawnable.CreateItemDropsInCylinder
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FInventoryStack> Items                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector                 aroundLocation                 (Parm, IsPlainOldData)
// float                          SphereRadius                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class AFGItemPickup_Spawnable*> out_itemDrops                  (Parm, OutParm, ZeroConstructor)
// class UClass*                  itemDropClass                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGItemPickup_Spawnable::CreateItemDropsInCylinder(class UObject* WorldContext, TArray<struct FInventoryStack> Items, const struct FVector& aroundLocation, float SphereRadius, TArray<class AActor*> ActorsToIgnore, class UClass* itemDropClass, TArray<class AFGItemPickup_Spawnable*>* out_itemDrops)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup_Spawnable.CreateItemDropsInCylinder");

	AFGItemPickup_Spawnable_CreateItemDropsInCylinder_Params params;
	params.WorldContext = WorldContext;
	params.Items = Items;
	params.aroundLocation = aroundLocation;
	params.SphereRadius = SphereRadius;
	params.ActorsToIgnore = ActorsToIgnore;
	params.itemDropClass = itemDropClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_itemDrops != nullptr)
		*out_itemDrops = params.out_itemDrops;
}


// Function FactoryGame.FGItemPickup_Spawnable.CreateItemDrop
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FInventoryStack         Item                           (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector                 SpawnLocation                  (Parm, IsPlainOldData)
// struct FRotator                spawnRotation                  (Parm, IsPlainOldData)
// class UClass*                  itemDropClass                  (Parm, ZeroConstructor, IsPlainOldData)
// class AFGItemPickup_Spawnable* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGItemPickup_Spawnable* AFGItemPickup_Spawnable::CreateItemDrop(class UObject* WorldContext, const struct FInventoryStack& Item, const struct FVector& SpawnLocation, const struct FRotator& spawnRotation, class UClass* itemDropClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup_Spawnable.CreateItemDrop");

	AFGItemPickup_Spawnable_CreateItemDrop_Params params;
	params.WorldContext = WorldContext;
	params.Item = Item;
	params.SpawnLocation = SpawnLocation;
	params.spawnRotation = spawnRotation;
	params.itemDropClass = itemDropClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJetPack.OnStopThrusting
// ()

void AFGJetPack::OnStopThrusting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPack.OnStopThrusting");

	AFGJetPack_OnStopThrusting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGJetPack.OnStartThrusting
// ()

void AFGJetPack::OnStartThrusting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPack.OnStartThrusting");

	AFGJetPack_OnStartThrusting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGJetPack.GetNewVelocityWhenThrusting
// ()
// Parameters:
// float                          Delta                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector AFGJetPack::GetNewVelocityWhenThrusting(float Delta)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPack.GetNewVelocityWhenThrusting");

	AFGJetPack_GetNewVelocityWhenThrusting_Params params;
	params.Delta = Delta;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJetPack.GetMaxFuel
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGJetPack::GetMaxFuel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPack.GetMaxFuel");

	AFGJetPack_GetMaxFuel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJetPack.GetCurrentFuel
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGJetPack::GetCurrentFuel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPack.GetCurrentFuel");

	AFGJetPack_GetCurrentFuel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJetPack.CanThrust
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGJetPack::CanThrust()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPack.CanThrust");

	AFGJetPack_CanThrust_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJetPackAttachment.OnStopThrusting
// ()

void AFGJetPackAttachment::OnStopThrusting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPackAttachment.OnStopThrusting");

	AFGJetPackAttachment_OnStopThrusting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGJetPackAttachment.OnStartThrusting
// ()

void AFGJetPackAttachment::OnStartThrusting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPackAttachment.OnStartThrusting");

	AFGJetPackAttachment_OnStartThrusting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGJetPackAttachment.OnRep_IsThrusting
// ()

void AFGJetPackAttachment::OnRep_IsThrusting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPackAttachment.OnRep_IsThrusting");

	AFGJetPackAttachment_OnRep_IsThrusting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGJumpingStilts.GetNormalizedFallSpeedUntilDamaged
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGJumpingStilts::GetNormalizedFallSpeedUntilDamaged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJumpingStilts.GetNormalizedFallSpeedUntilDamaged");

	AFGJumpingStilts_GetNormalizedFallSpeedUntilDamaged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJumpingStilts.GetMaxFallSpeedBeforeDamage
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGJumpingStilts::GetMaxFallSpeedBeforeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJumpingStilts.GetMaxFallSpeedBeforeDamage");

	AFGJumpingStilts_GetMaxFallSpeedBeforeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJumpingStilts.GetCurrentFallSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGJumpingStilts::GetCurrentFallSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJumpingStilts.GetCurrentFallSpeed");

	AFGJumpingStilts_GetCurrentFallSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJumpingStilts.GetAdjustedZJumpSpeed
// ()
// Parameters:
// float                          defaultJumpZ                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGJumpingStilts::GetAdjustedZJumpSpeed(float defaultJumpZ)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJumpingStilts.GetAdjustedZJumpSpeed");

	AFGJumpingStilts_GetAdjustedZJumpSpeed_Params params;
	params.defaultJumpZ = defaultJumpZ;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJumpingStilts.GetAdjustedMaxSpeed
// ()
// Parameters:
// float                          defaultMaxSpeed                (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGJumpingStilts::GetAdjustedMaxSpeed(float defaultMaxSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJumpingStilts.GetAdjustedMaxSpeed");

	AFGJumpingStilts_GetAdjustedMaxSpeed_Params params;
	params.defaultMaxSpeed = defaultMaxSpeed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLadderComponent.EndPotentialClimberOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGLadderComponent::EndPotentialClimberOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLadderComponent.EndPotentialClimberOverlap");

	UFGLadderComponent_EndPotentialClimberOverlap_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLadderComponent.BeginPotentialClimberOverlap
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isFromSweep                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UFGLadderComponent::BeginPotentialClimberOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool isFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLadderComponent.BeginPotentialClimberOverlap");

	UFGLadderComponent_BeginPotentialClimberOverlap_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.isFromSweep = isFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGListView.Refresh
// ()

void UFGListView::Refresh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGListView.Refresh");

	UFGListView_Refresh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FactoryGame.FGListView.OnGenerateRow__DelegateSignature
// ()
// Parameters:
// int                            Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class UWidget*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidget* UFGListView::OnGenerateRow__DelegateSignature(int Item)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FactoryGame.FGListView.OnGenerateRow__DelegateSignature");

	UFGListView_OnGenerateRow__DelegateSignature_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FactoryGame.FGListView.GetNumRows__DelegateSignature
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGListView::GetNumRows__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FactoryGame.FGListView.GetNumRows__DelegateSignature");

	UFGListView_GetNumRows__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocalPlayer.UpdatePresence
// ()

void UFGLocalPlayer::UpdatePresence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.UpdatePresence");

	UFGLocalPlayer_UpdatePresence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocalPlayer.OpenMap_SetupServer
// ()

void UFGLocalPlayer::OpenMap_SetupServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.OpenMap_SetupServer");

	UFGLocalPlayer_OpenMap_SetupServer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocalPlayer.GetUsername
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGLocalPlayer::GetUsername()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.GetUsername");

	UFGLocalPlayer_GetUsername_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocalPlayer.GetLoginState
// ()
// Parameters:
// TEnumAsByte<ELoginState>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ELoginState> UFGLocalPlayer::GetLoginState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.GetLoginState");

	UFGLocalPlayer_GetLoginState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocalPlayer.GetFriendList
// ()
// Parameters:
// TArray<struct FFGOnlineFriend> out_friends                    (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGLocalPlayer::GetFriendList(TArray<struct FFGOnlineFriend>* out_friends)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.GetFriendList");

	UFGLocalPlayer_GetFriendList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_friends != nullptr)
		*out_friends = params.out_friends;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocalPlayer.CreateOfflineSession_SetupServer
// ()
// Parameters:
// bool                           startOffline                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGLocalPlayer::CreateOfflineSession_SetupServer(bool startOffline)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.CreateOfflineSession_SetupServer");

	UFGLocalPlayer_CreateOfflineSession_SetupServer_Params params;
	params.startOffline = startOffline;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocalPlayer.AutoLogin
// ()

void UFGLocalPlayer::AutoLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.AutoLogin");

	UFGLocalPlayer_AutoLogin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotive.UpdateTargetPoints
// ()
// Parameters:
// float                          MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGLocomotive::UpdateTargetPoints(float MaxDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.UpdateTargetPoints");

	AFGLocomotive_UpdateTargetPoints_Params params;
	params.MaxDistance = MaxDistance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotive.UpdatePathSegment
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGLocomotive::UpdatePathSegment()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.UpdatePathSegment");

	AFGLocomotive_UpdatePathSegment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotive.SetSelfDrivingEnabled
// ()
// Parameters:
// bool                           IsEnabled                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGLocomotive::SetSelfDrivingEnabled(bool IsEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.SetSelfDrivingEnabled");

	AFGLocomotive_SetSelfDrivingEnabled_Params params;
	params.IsEnabled = IsEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotive.SetPath
// ()
// Parameters:
// struct FRailroadPathFindingResult Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGLocomotive::SetPath(const struct FRailroadPathFindingResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.SetPath");

	AFGLocomotive_SetPath_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotive.SetMultipleUnitControlMaster
// ()
// Parameters:
// bool                           Force                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGLocomotive::SetMultipleUnitControlMaster(bool Force)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.SetMultipleUnitControlMaster");

	AFGLocomotive_SetMultipleUnitControlMaster_Params params;
	params.Force = Force;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotive.ReportSelfDrivingError
// ()
// Parameters:
// ESelfDrivingLocomotiveError    Error                          (Parm, ZeroConstructor, IsPlainOldData)

void AFGLocomotive::ReportSelfDrivingError(ESelfDrivingLocomotiveError Error)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.ReportSelfDrivingError");

	AFGLocomotive_ReportSelfDrivingError_Params params;
	params.Error = Error;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotive.OnRep_ReplicatedMovementTransform
// ()

void AFGLocomotive::OnRep_ReplicatedMovementTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.OnRep_ReplicatedMovementTransform");

	AFGLocomotive_OnRep_ReplicatedMovementTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotive.IsSelfDrivingEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGLocomotive::IsSelfDrivingEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.IsSelfDrivingEnabled");

	AFGLocomotive_IsSelfDrivingEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotive.HasPath
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGLocomotive::HasPath()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.HasPath");

	AFGLocomotive_HasPath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotive.GetTargetPoints
// ()
// Parameters:
// TArray<struct FRailroadPathPoint> out_points                     (Parm, OutParm, ZeroConstructor)

void AFGLocomotive::GetTargetPoints(TArray<struct FRailroadPathPoint>* out_points)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.GetTargetPoints");

	AFGLocomotive_GetTargetPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_points != nullptr)
		*out_points = params.out_points;
}


// Function FactoryGame.FGLocomotive.GetSelfDrivingError
// ()
// Parameters:
// ESelfDrivingLocomotiveError    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESelfDrivingLocomotiveError AFGLocomotive::GetSelfDrivingError()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.GetSelfDrivingError");

	AFGLocomotive_GetSelfDrivingError_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotive.GetPowerInfo
// ()
// Parameters:
// class UFGPowerInfoComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPowerInfoComponent* AFGLocomotive::GetPowerInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.GetPowerInfo");

	AFGLocomotive_GetPowerInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotive.GetPath
// ()
// Parameters:
// TArray<struct FRailroadPathPoint> out_points                     (Parm, OutParm, ZeroConstructor)

void AFGLocomotive::GetPath(TArray<struct FRailroadPathPoint>* out_points)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.GetPath");

	AFGLocomotive_GetPath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_points != nullptr)
		*out_points = params.out_points;
}


// Function FactoryGame.FGLocomotive.GetMultipleUnitRole
// ()
// Parameters:
// EMultipleUnitControl           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EMultipleUnitControl AFGLocomotive::GetMultipleUnitRole()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.GetMultipleUnitRole");

	AFGLocomotive_GetMultipleUnitRole_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotive.GetLocomotiveMovementComponent
// ()
// Parameters:
// class UFGLocomotiveMovementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGLocomotiveMovementComponent* AFGLocomotive::GetLocomotiveMovementComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.GetLocomotiveMovementComponent");

	AFGLocomotive_GetLocomotiveMovementComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotive.ClearSelfDrivingError
// ()

void AFGLocomotive::ClearSelfDrivingError()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.ClearSelfDrivingError");

	AFGLocomotive_ClearSelfDrivingError_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotive.ClearPath
// ()

void AFGLocomotive::ClearPath()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.ClearPath");

	AFGLocomotive_ClearPath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotive.ClearMultipleUnitControlMaster
// ()

void AFGLocomotive::ClearMultipleUnitControlMaster()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.ClearMultipleUnitControlMaster");

	AFGLocomotive_ClearMultipleUnitControlMaster_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotive.CanSetTrainMultipleUnitMaster
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGLocomotive::CanSetTrainMultipleUnitMaster()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.CanSetTrainMultipleUnitMaster");

	AFGLocomotive_CanSetTrainMultipleUnitMaster_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.SetPayloadMass
// ()
// Parameters:
// float                          payload                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGRailroadVehicleMovementComponent::SetPayloadMass(float payload)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.SetPayloadMass");

	UFGRailroadVehicleMovementComponent_SetPayloadMass_Params params;
	params.payload = payload;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.IsMoving
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGRailroadVehicleMovementComponent::IsMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.IsMoving");

	UFGRailroadVehicleMovementComponent_IsMoving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetWheelsetRotation
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UFGRailroadVehicleMovementComponent::GetWheelsetRotation(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetWheelsetRotation");

	UFGRailroadVehicleMovementComponent_GetWheelsetRotation_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetWheelsetOffset
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetWheelsetOffset(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetWheelsetOffset");

	UFGRailroadVehicleMovementComponent_GetWheelsetOffset_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetTractiveForce
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetTractiveForce()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetTractiveForce");

	UFGRailroadVehicleMovementComponent_GetTractiveForce_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetTrackGrade
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetTrackGrade()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetTrackGrade");

	UFGRailroadVehicleMovementComponent_GetTrackGrade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetTrackCurvature
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetTrackCurvature()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetTrackCurvature");

	UFGRailroadVehicleMovementComponent_GetTrackCurvature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetRelativeForwardSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetRelativeForwardSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetRelativeForwardSpeed");

	UFGRailroadVehicleMovementComponent_GetRelativeForwardSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetPayloadMass
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetPayloadMass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetPayloadMass");

	UFGRailroadVehicleMovementComponent_GetPayloadMass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetNumWheelsets
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGRailroadVehicleMovementComponent::GetNumWheelsets()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetNumWheelsets");

	UFGRailroadVehicleMovementComponent_GetNumWheelsets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetMaxForwardSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetMaxForwardSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetMaxForwardSpeed");

	UFGRailroadVehicleMovementComponent_GetMaxForwardSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetMaxAirBrakingEffort
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetMaxAirBrakingEffort()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetMaxAirBrakingEffort");

	UFGRailroadVehicleMovementComponent_GetMaxAirBrakingEffort_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetMass
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetMass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetMass");

	UFGRailroadVehicleMovementComponent_GetMass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetForwardSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetForwardSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetForwardSpeed");

	UFGRailroadVehicleMovementComponent_GetForwardSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetDynamicBrakingForce
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetDynamicBrakingForce()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetDynamicBrakingForce");

	UFGRailroadVehicleMovementComponent_GetDynamicBrakingForce_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetCouplerRotationAndExtention
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          out_extention                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UFGRailroadVehicleMovementComponent::GetCouplerRotationAndExtention(int Index, float* out_extention)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetCouplerRotationAndExtention");

	UFGRailroadVehicleMovementComponent_GetCouplerRotationAndExtention_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_extention != nullptr)
		*out_extention = params.out_extention;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetAirBrakingForce
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetAirBrakingForce()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetAirBrakingForce");

	UFGRailroadVehicleMovementComponent_GetAirBrakingForce_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotiveMovementComponent.UseReplicatedState
// ()

void UFGLocomotiveMovementComponent::UseReplicatedState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.UseReplicatedState");

	UFGLocomotiveMovementComponent_UseReplicatedState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotiveMovementComponent.SetThrottleInput
// ()
// Parameters:
// float                          Throttle                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGLocomotiveMovementComponent::SetThrottleInput(float Throttle)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.SetThrottleInput");

	UFGLocomotiveMovementComponent_SetThrottleInput_Params params;
	params.Throttle = Throttle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotiveMovementComponent.SetSteeringInput
// ()
// Parameters:
// float                          Steering                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGLocomotiveMovementComponent::SetSteeringInput(float Steering)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.SetSteeringInput");

	UFGLocomotiveMovementComponent_SetSteeringInput_Params params;
	params.Steering = Steering;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotiveMovementComponent.SetReverserInput
// ()
// Parameters:
// int                            reverser                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGLocomotiveMovementComponent::SetReverserInput(int reverser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.SetReverserInput");

	UFGLocomotiveMovementComponent_SetReverserInput_Params params;
	params.reverser = reverser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotiveMovementComponent.SetEmergencyBrake
// ()

void UFGLocomotiveMovementComponent::SetEmergencyBrake()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.SetEmergencyBrake");

	UFGLocomotiveMovementComponent_SetEmergencyBrake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotiveMovementComponent.SetAirBrakeInput
// ()
// Parameters:
// float                          Brake                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGLocomotiveMovementComponent::SetAirBrakeInput(float Brake)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.SetAirBrakeInput");

	UFGLocomotiveMovementComponent_SetAirBrakeInput_Params params;
	params.Brake = Brake;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotiveMovementComponent.ServerUpdateState
// ()
// Parameters:
// int                            inReverserInput                (Parm, ZeroConstructor, IsPlainOldData)
// float                          InSteeringInput                (Parm, ZeroConstructor, IsPlainOldData)
// float                          InThrottleInput                (Parm, ZeroConstructor, IsPlainOldData)
// float                          inDynamicBrakeInput            (Parm, ZeroConstructor, IsPlainOldData)
// float                          inAirBrakeInput                (Parm, ZeroConstructor, IsPlainOldData)

void UFGLocomotiveMovementComponent::ServerUpdateState(int inReverserInput, float InSteeringInput, float InThrottleInput, float inDynamicBrakeInput, float inAirBrakeInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.ServerUpdateState");

	UFGLocomotiveMovementComponent_ServerUpdateState_Params params;
	params.inReverserInput = inReverserInput;
	params.InSteeringInput = InSteeringInput;
	params.InThrottleInput = InThrottleInput;
	params.inDynamicBrakeInput = inDynamicBrakeInput;
	params.inAirBrakeInput = inAirBrakeInput;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotiveMovementComponent.GetThrottle
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGLocomotiveMovementComponent::GetThrottle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.GetThrottle");

	UFGLocomotiveMovementComponent_GetThrottle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotiveMovementComponent.GetReverser
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGLocomotiveMovementComponent::GetReverser()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.GetReverser");

	UFGLocomotiveMovementComponent_GetReverser_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotiveMovementComponent.GetMaxTractiveEffort
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGLocomotiveMovementComponent::GetMaxTractiveEffort()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.GetMaxTractiveEffort");

	UFGLocomotiveMovementComponent_GetMaxTractiveEffort_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotiveMovementComponent.GetMaxDynamicBrakingEffort
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGLocomotiveMovementComponent::GetMaxDynamicBrakingEffort()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.GetMaxDynamicBrakingEffort");

	UFGLocomotiveMovementComponent_GetMaxDynamicBrakingEffort_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotiveMovementComponent.GetDynamicBrake
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGLocomotiveMovementComponent::GetDynamicBrake()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.GetDynamicBrake");

	UFGLocomotiveMovementComponent_GetDynamicBrake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotiveMovementComponent.GetAirBrake
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGLocomotiveMovementComponent::GetAirBrake()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.GetAirBrake");

	UFGLocomotiveMovementComponent_GetAirBrake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLootSettings.GetLootSettingsDefaultObject
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UFGLootSettings::GetLootSettingsDefaultObject(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLootSettings.GetLootSettingsDefaultObject");

	UFGLootSettings_GetLootSettingsDefaultObject_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGManta.GetSpline
// ()
// Parameters:
// class USplineComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USplineComponent* AFGManta::GetSpline()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGManta.GetSpline");

	AFGManta_GetSpline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGManta.GetCurrentTime
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGManta::GetCurrentTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGManta.GetCurrentTime");

	AFGManta_GetCurrentTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGManufacturingButton.SetButton
// ()
// Parameters:
// class UButton*                 inButton                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGManufacturingButton::SetButton(class UButton* inButton)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGManufacturingButton.SetButton");

	UFGManufacturingButton_SetButton_Params params;
	params.inButton = inButton;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGManufacturingButton.OnReleasedButton
// ()

void UFGManufacturingButton::OnReleasedButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGManufacturingButton.OnReleasedButton");

	UFGManufacturingButton_OnReleasedButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGManufacturingButton.OnPressedButton
// ()

void UFGManufacturingButton::OnPressedButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGManufacturingButton.OnPressedButton");

	UFGManufacturingButton_OnPressedButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapArea.GetZoneType
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGMapArea::GetZoneType(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapArea.GetZoneType");

	UFGMapArea_GetZoneType_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapArea.GetUserSetAreaDisplayName
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGMapArea::GetUserSetAreaDisplayName(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapArea.GetUserSetAreaDisplayName");

	UFGMapArea_GetUserSetAreaDisplayName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapArea.GetAreaDisplayName
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGMapArea::GetAreaDisplayName(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapArea.GetAreaDisplayName");

	UFGMapArea_GetAreaDisplayName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapAreaTexture.OnNewMapAreaVisisted
// ()
// Parameters:
// class UClass*                  newMapArea                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapAreaTexture::OnNewMapAreaVisisted(class UClass* newMapArea)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapAreaTexture.OnNewMapAreaVisisted");

	UFGMapAreaTexture_OnNewMapAreaVisisted_Params params;
	params.newMapArea = newMapArea;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapAreaTexture.GetFogOfWarTexture
// ()
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFGMapAreaTexture::GetFogOfWarTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapAreaTexture.GetFogOfWarTexture");

	UFGMapAreaTexture_GetFogOfWarTexture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapAreaZoneDescriptor.GetZoneType
// ()
// Parameters:
// class FString                  out_zoneType                   (Parm, OutParm, ZeroConstructor)

void UFGMapAreaZoneDescriptor::GetZoneType(class FString* out_zoneType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapAreaZoneDescriptor.GetZoneType");

	UFGMapAreaZoneDescriptor_GetZoneType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_zoneType != nullptr)
		*out_zoneType = params.out_zoneType;
}


// Function FactoryGame.FGMapFunctionLibrary.GetWorldBounds
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               Min                            (Parm, OutParm, IsPlainOldData)
// struct FVector2D               Max                            (Parm, OutParm, IsPlainOldData)

void UFGMapFunctionLibrary::GetWorldBounds(class UObject* WorldContext, struct FVector2D* Min, struct FVector2D* Max)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapFunctionLibrary.GetWorldBounds");

	UFGMapFunctionLibrary_GetWorldBounds_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Min != nullptr)
		*Min = params.Min;
	if (Max != nullptr)
		*Max = params.Max;
}


// Function FactoryGame.FGMapFunctionLibrary.GetNormalizedPosition
// ()
// Parameters:
// class AFGMinimapCaptureActor*  minimapCaptureActor            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 WorldLocation                  (Parm, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UFGMapFunctionLibrary::GetNormalizedPosition(class AFGMinimapCaptureActor* minimapCaptureActor, const struct FVector& WorldLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapFunctionLibrary.GetNormalizedPosition");

	UFGMapFunctionLibrary_GetNormalizedPosition_Params params;
	params.minimapCaptureActor = minimapCaptureActor;
	params.WorldLocation = WorldLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapFunctionLibrary.GetMinimapCaptureActor
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGMinimapCaptureActor*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGMinimapCaptureActor* UFGMapFunctionLibrary::GetMinimapCaptureActor(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapFunctionLibrary.GetMinimapCaptureActor");

	UFGMapFunctionLibrary_GetMinimapCaptureActor_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapFunctionLibrary.GetMapPosition
// ()
// Parameters:
// class AFGMinimapCaptureActor*  minimapCaptureActor            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 WorldLocation                  (Parm, IsPlainOldData)
// float                          mapResolution                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D UFGMapFunctionLibrary::GetMapPosition(class AFGMinimapCaptureActor* minimapCaptureActor, const struct FVector& WorldLocation, float mapResolution)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapFunctionLibrary.GetMapPosition");

	UFGMapFunctionLibrary_GetMapPosition_Params params;
	params.minimapCaptureActor = minimapCaptureActor;
	params.WorldLocation = WorldLocation;
	params.mapResolution = mapResolution;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapFunctionLibrary.GetMapDistance
// ()
// Parameters:
// class AFGMinimapCaptureActor*  minimapCaptureActor            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          worldDistance                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          mapResolution                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGMapFunctionLibrary::GetMapDistance(class AFGMinimapCaptureActor* minimapCaptureActor, float worldDistance, float mapResolution)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapFunctionLibrary.GetMapDistance");

	UFGMapFunctionLibrary_GetMapDistance_Params params;
	params.minimapCaptureActor = minimapCaptureActor;
	params.worldDistance = worldDistance;
	params.mapResolution = mapResolution;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapManager.OnActorRepresentationUpdated
// ()
// Parameters:
// class UFGActorRepresentation*  actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void AFGMapManager::OnActorRepresentationUpdated(class UFGActorRepresentation* actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapManager.OnActorRepresentationUpdated");

	AFGMapManager_OnActorRepresentationUpdated_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapManager.OnActorRepresentationRemoved
// ()
// Parameters:
// class UFGActorRepresentation*  actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void AFGMapManager::OnActorRepresentationRemoved(class UFGActorRepresentation* actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapManager.OnActorRepresentationRemoved");

	AFGMapManager_OnActorRepresentationRemoved_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapManager.OnActorRepresentationAdded
// ()
// Parameters:
// class UFGActorRepresentation*  actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void AFGMapManager::OnActorRepresentationAdded(class UFGActorRepresentation* actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapManager.OnActorRepresentationAdded");

	AFGMapManager_OnActorRepresentationAdded_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapManager.GetFogOfWarTexture
// ()
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* AFGMapManager::GetFogOfWarTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapManager.GetFogOfWarTexture");

	AFGMapManager_GetFogOfWarTexture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapManager.Get
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGMapManager*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGMapManager* AFGMapManager::Get(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapManager.Get");

	AFGMapManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapObjectWidget.OnObjectMoved
// ()
// Parameters:
// struct FVector2D               normalizedLocation             (Parm, IsPlainOldData)

void UFGMapObjectWidget::OnObjectMoved(const struct FVector2D& normalizedLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapObjectWidget.OnObjectMoved");

	UFGMapObjectWidget_OnObjectMoved_Params params;
	params.normalizedLocation = normalizedLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapObjectWidget.OnObjectFiltered
// ()
// Parameters:
// bool                           FilteredIn                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapObjectWidget::OnObjectFiltered(bool FilteredIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapObjectWidget.OnObjectFiltered");

	UFGMapObjectWidget_OnObjectFiltered_Params params;
	params.FilteredIn = FilteredIn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapObjectWidget.OnActorRepresentationUpdated
// ()

void UFGMapObjectWidget::OnActorRepresentationUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapObjectWidget.OnActorRepresentationUpdated");

	UFGMapObjectWidget_OnActorRepresentationUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapWidget.OnObjectUpdatedOnMap
// ()
// Parameters:
// class UFGActorRepresentation*  actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapWidget::OnObjectUpdatedOnMap(class UFGActorRepresentation* actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapWidget.OnObjectUpdatedOnMap");

	UFGMapWidget_OnObjectUpdatedOnMap_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapWidget.OnObjectRemovedFromMap
// ()
// Parameters:
// class UFGActorRepresentation*  actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapWidget::OnObjectRemovedFromMap(class UFGActorRepresentation* actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapWidget.OnObjectRemovedFromMap");

	UFGMapWidget_OnObjectRemovedFromMap_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapWidget.OnObjectAddedToMap
// ()
// Parameters:
// class UFGActorRepresentation*  actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapWidget::OnObjectAddedToMap(class UFGActorRepresentation* actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapWidget.OnObjectAddedToMap");

	UFGMapWidget_OnObjectAddedToMap_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapWidget.OnMapCentered
// ()
// Parameters:
// struct FVector2D               normalizedWorldLocation        (Parm, IsPlainOldData)

void UFGMapWidget::OnMapCentered(const struct FVector2D& normalizedWorldLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapWidget.OnMapCentered");

	UFGMapWidget_OnMapCentered_Params params;
	params.normalizedWorldLocation = normalizedWorldLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapWidget.OnActorRepresentationUpdated
// ()
// Parameters:
// class UFGActorRepresentation*  actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapWidget::OnActorRepresentationUpdated(class UFGActorRepresentation* actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapWidget.OnActorRepresentationUpdated");

	UFGMapWidget_OnActorRepresentationUpdated_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapWidget.OnActorRepresentationRemoved
// ()
// Parameters:
// class UFGActorRepresentation*  actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapWidget::OnActorRepresentationRemoved(class UFGActorRepresentation* actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapWidget.OnActorRepresentationRemoved");

	UFGMapWidget_OnActorRepresentationRemoved_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapWidget.OnActorRepresentationAdded
// ()
// Parameters:
// class UFGActorRepresentation*  actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapWidget::OnActorRepresentationAdded(class UFGActorRepresentation* actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapWidget.OnActorRepresentationAdded");

	UFGMapWidget_OnActorRepresentationAdded_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapWidget.GetFogOfWarTexture
// ()
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFGMapWidget::GetFogOfWarTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapWidget.GetFogOfWarTexture");

	UFGMapWidget_GetFogOfWarTexture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMaterialEffectComponent.SetMeshes
// ()
// Parameters:
// TArray<class UMeshComponent*>  meshes                         (Parm, ZeroConstructor)

void UFGMaterialEffectComponent::SetMeshes(TArray<class UMeshComponent*> meshes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.SetMeshes");

	UFGMaterialEffectComponent_SetMeshes_Params params;
	params.meshes = meshes;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMaterialEffectComponent.SetMaterialScalarParameterValue
// ()
// Parameters:
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGMaterialEffectComponent::SetMaterialScalarParameterValue(const struct FName& Name, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.SetMaterialScalarParameterValue");

	UFGMaterialEffectComponent_SetMaterialScalarParameterValue_Params params;
	params.Name = Name;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMaterialEffectComponent.SetDuration
// ()
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGMaterialEffectComponent::SetDuration(float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.SetDuration");

	UFGMaterialEffectComponent_SetDuration_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMaterialEffectComponent.PreStarted
// ()

void UFGMaterialEffectComponent::PreStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.PreStarted");

	UFGMaterialEffectComponent_PreStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMaterialEffectComponent.OnUpdate
// ()
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGMaterialEffectComponent::OnUpdate(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.OnUpdate");

	UFGMaterialEffectComponent_OnUpdate_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMaterialEffectComponent.OnStarted
// ()

void UFGMaterialEffectComponent::OnStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.OnStarted");

	UFGMaterialEffectComponent_OnStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMaterialEffectComponent.OnEnded
// ()

void UFGMaterialEffectComponent::OnEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.OnEnded");

	UFGMaterialEffectComponent_OnEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMaterialEffectComponent.GetMeshesBounds
// ()
// Parameters:
// bool                           onlyVisible                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           onlyColliding                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 out_origin                     (Parm, OutParm, IsPlainOldData)
// struct FVector                 out_boxExtent                  (Parm, OutParm, IsPlainOldData)

void UFGMaterialEffectComponent::GetMeshesBounds(bool onlyVisible, bool onlyColliding, struct FVector* out_origin, struct FVector* out_boxExtent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.GetMeshesBounds");

	UFGMaterialEffectComponent_GetMeshesBounds_Params params;
	params.onlyVisible = onlyVisible;
	params.onlyColliding = onlyColliding;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_origin != nullptr)
		*out_origin = params.out_origin;
	if (out_boxExtent != nullptr)
		*out_boxExtent = params.out_boxExtent;
}


// Function FactoryGame.FGMaterialEffectComponent.GetMeshes
// ()
// Parameters:
// TArray<class UMeshComponent*>  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UMeshComponent*> UFGMaterialEffectComponent::GetMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.GetMeshes");

	UFGMaterialEffectComponent_GetMeshes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMaterialEffectComponent.GetDuration
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGMaterialEffectComponent::GetDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.GetDuration");

	UFGMaterialEffectComponent_GetDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMaterialEffect_Build.GetSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGMaterialEffect_Build::GetSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffect_Build.GetSpeed");

	UFGMaterialEffect_Build_GetSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMaterialEffect_Build.GetInstigator
// ()
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UFGMaterialEffect_Build::GetInstigator()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffect_Build.GetInstigator");

	UFGMaterialEffect_Build_GetInstigator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMaterialEffect_Build.GetCost
// ()
// Parameters:
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> UFGMaterialEffect_Build::GetCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffect_Build.GetCost");

	UFGMaterialEffect_Build_GetCost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMaterialFlowAnalysisFunctionLibrary.PerformMaterialFlowAnalysis
// ()
// Parameters:
// TArray<class UClass*>          recipes                        (Parm, ZeroConstructor)
// class AFGRecipeManager*        recipeManager                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FMaterialFlowGraph      ReturnValue                    (Parm, OutParm, ReturnParm)

struct FMaterialFlowGraph UFGMaterialFlowAnalysisFunctionLibrary::PerformMaterialFlowAnalysis(TArray<class UClass*> recipes, class AFGRecipeManager* recipeManager)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialFlowAnalysisFunctionLibrary.PerformMaterialFlowAnalysis");

	UFGMaterialFlowAnalysisFunctionLibrary_PerformMaterialFlowAnalysis_Params params;
	params.recipes = recipes;
	params.recipeManager = recipeManager;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMaterialFlowAnalysisFunctionLibrary.GetGraphNodes
// ()
// Parameters:
// struct FMaterialFlowGraph      graph                          (ConstParm, Parm, OutParm, ReferenceParm)
// int                            Depth                          (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FMaterialFlowNode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FMaterialFlowNode> UFGMaterialFlowAnalysisFunctionLibrary::GetGraphNodes(const struct FMaterialFlowGraph& graph, int Depth)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialFlowAnalysisFunctionLibrary.GetGraphNodes");

	UFGMaterialFlowAnalysisFunctionLibrary_GetGraphNodes_Params params;
	params.graph = graph;
	params.Depth = Depth;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMaterialFlowAnalysisFunctionLibrary.GetGraphDepth
// ()
// Parameters:
// struct FMaterialFlowGraph      graph                          (ConstParm, Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGMaterialFlowAnalysisFunctionLibrary::GetGraphDepth(const struct FMaterialFlowGraph& graph)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialFlowAnalysisFunctionLibrary.GetGraphDepth");

	UFGMaterialFlowAnalysisFunctionLibrary_GetGraphDepth_Params params;
	params.graph = graph;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMenuBase.OnMenuExitDone
// ()

void UFGMenuBase::OnMenuExitDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMenuBase.OnMenuExitDone");

	UFGMenuBase_OnMenuExitDone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMenuBase.OnMenuExit
// ()
// Parameters:
// class UWidget*                 prevMenu                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           noAnimation                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGMenuBase::OnMenuExit(class UWidget* prevMenu, bool noAnimation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMenuBase.OnMenuExit");

	UFGMenuBase_OnMenuExit_Params params;
	params.prevMenu = prevMenu;
	params.noAnimation = noAnimation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMenuBase.OnMenuEnterDone
// ()

void UFGMenuBase::OnMenuEnterDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMenuBase.OnMenuEnterDone");

	UFGMenuBase_OnMenuEnterDone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMenuBase.OnMenuEnter
// ()
// Parameters:
// class UWidget*                 prevMenu                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGMenuBase::OnMenuEnter(class UWidget* prevMenu)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMenuBase.OnMenuEnter");

	UFGMenuBase_OnMenuEnter_Params params;
	params.prevMenu = prevMenu;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMessageSender.GetSenderDefaultObject
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UFGMessageSender::GetSenderDefaultObject(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMessageSender.GetSenderDefaultObject");

	UFGMessageSender_GetSenderDefaultObject_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMinimapCaptureActor.GetMapAreaTexture
// ()
// Parameters:
// class UFGMapAreaTexture*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGMapAreaTexture* AFGMinimapCaptureActor::GetMapAreaTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMinimapCaptureActor.GetMapAreaTexture");

	AFGMinimapCaptureActor_GetMapAreaTexture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMultiplayerVerticalBox.Sort
// ()

void UFGMultiplayerVerticalBox::Sort()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMultiplayerVerticalBox.Sort");

	UFGMultiplayerVerticalBox_Sort_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMusicManager.Stop
// ()

void UFGMusicManager::Stop()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMusicManager.Stop");

	UFGMusicManager_Stop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMusicManager.Play
// ()

void UFGMusicManager::Play()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMusicManager.Play");

	UFGMusicManager_Play_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMusicManager.Pause
// ()

void UFGMusicManager::Pause()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMusicManager.Pause");

	UFGMusicManager_Pause_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMusicManager.OnPlayerNearBaseChanged
// ()
// Parameters:
// bool                           isNear                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGMusicManager::OnPlayerNearBaseChanged(bool isNear)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMusicManager.OnPlayerNearBaseChanged");

	UFGMusicManager_OnPlayerNearBaseChanged_Params params;
	params.isNear = isNear;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMusicManager.OnPlayerEnteredArea
// ()
// Parameters:
// class UClass*                  mapArea                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGMusicManager::OnPlayerEnteredArea(class UClass* mapArea)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMusicManager.OnPlayerEnteredArea");

	UFGMusicManager_OnPlayerEnteredArea_Params params;
	params.mapArea = mapArea;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMusicManager.NotifyPostLoadMap
// ()
// Parameters:
// class UWorld*                  loadedWorld                    (Parm, ZeroConstructor, IsPlainOldData)
// class AWorldSettings*          WorldSettings                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGMusicManager::NotifyPostLoadMap(class UWorld* loadedWorld, class AWorldSettings* WorldSettings)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMusicManager.NotifyPostLoadMap");

	UFGMusicManager_NotifyPostLoadMap_Params params;
	params.loadedWorld = loadedWorld;
	params.WorldSettings = WorldSettings;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMusicManager.Get
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UFGMusicManager*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGMusicManager* UFGMusicManager::Get(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMusicManager.Get");

	UFGMusicManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPresenceLibrary.NetIdHasValidPresence
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FUniqueNetIdRepl        netId                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPresenceLibrary::NetIdHasValidPresence(class UObject* WorldContext, const struct FUniqueNetIdRepl& netId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPresenceLibrary.NetIdHasValidPresence");

	UFGPresenceLibrary_NetIdHasValidPresence_Params params;
	params.WorldContext = WorldContext;
	params.netId = netId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPresenceLibrary.IsValid_OnlinePresence
// ()
// Parameters:
// struct FOnlinePresence         A                              (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPresenceLibrary::IsValid_OnlinePresence(const struct FOnlinePresence& A)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPresenceLibrary.IsValid_OnlinePresence");

	UFGPresenceLibrary_IsValid_OnlinePresence_Params params;
	params.A = A;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPresenceLibrary.IsPlayingThisGame
// ()
// Parameters:
// struct FOnlinePresence         presence                       (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPresenceLibrary::IsPlayingThisGame(const struct FOnlinePresence& presence)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPresenceLibrary.IsPlayingThisGame");

	UFGPresenceLibrary_IsPlayingThisGame_Params params;
	params.presence = presence;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPresenceLibrary.IsPlayingOtherGame
// ()
// Parameters:
// struct FOnlinePresence         presence                       (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPresenceLibrary::IsPlayingOtherGame(const struct FOnlinePresence& presence)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPresenceLibrary.IsPlayingOtherGame");

	UFGPresenceLibrary_IsPlayingOtherGame_Params params;
	params.presence = presence;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPresenceLibrary.IsOnline
// ()
// Parameters:
// struct FOnlinePresence         presence                       (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPresenceLibrary::IsOnline(const struct FOnlinePresence& presence)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPresenceLibrary.IsOnline");

	UFGPresenceLibrary_IsOnline_Params params;
	params.presence = presence;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPresenceLibrary.GetSessionFromPresence
// ()
// Parameters:
// struct FOnlinePresence         presence                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FBlueprintSessionResult ReturnValue                    (Parm, OutParm, ReturnParm)

struct FBlueprintSessionResult UFGPresenceLibrary::GetSessionFromPresence(const struct FOnlinePresence& presence)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPresenceLibrary.GetSessionFromPresence");

	UFGPresenceLibrary_GetSessionFromPresence_Params params;
	params.presence = presence;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPresenceLibrary.GetPresenceString
// ()
// Parameters:
// struct FOnlinePresence         presence                       (ConstParm, Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGPresenceLibrary::GetPresenceString(const struct FOnlinePresence& presence)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPresenceLibrary.GetPresenceString");

	UFGPresenceLibrary_GetPresenceString_Params params;
	params.presence = presence;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPresenceLibrary.GetPresenceFromNetId
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FUniqueNetIdRepl        netId                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FOnlinePresence         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FOnlinePresence UFGPresenceLibrary::GetPresenceFromNetId(class UObject* WorldContext, const struct FUniqueNetIdRepl& netId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPresenceLibrary.GetPresenceFromNetId");

	UFGPresenceLibrary_GetPresenceFromNetId_Params params;
	params.WorldContext = WorldContext;
	params.netId = netId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFriendsLibrary.IsWaitingForData
// ()
// Parameters:
// class ULocalPlayer*            friendOf                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGOnlineFriend         onlineFriend                   (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFriendsLibrary::IsWaitingForData(class ULocalPlayer* friendOf, const struct FFGOnlineFriend& onlineFriend)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFriendsLibrary.IsWaitingForData");

	UFGFriendsLibrary_IsWaitingForData_Params params;
	params.friendOf = friendOf;
	params.onlineFriend = onlineFriend;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFriendsLibrary.IsValid_Friend
// ()
// Parameters:
// struct FFGOnlineFriend         A                              (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFriendsLibrary::IsValid_Friend(const struct FFGOnlineFriend& A)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFriendsLibrary.IsValid_Friend");

	UFGFriendsLibrary_IsValid_Friend_Params params;
	params.A = A;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFriendsLibrary.IsFriendJoinable
// ()
// Parameters:
// class ULocalPlayer*            friendOf                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGOnlineFriend         onlineFriend                   (ConstParm, Parm, OutParm, ReferenceParm)
// TEnumAsByte<ECantJoinReason>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ECantJoinReason> UFGFriendsLibrary::IsFriendJoinable(class ULocalPlayer* friendOf, const struct FFGOnlineFriend& onlineFriend)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFriendsLibrary.IsFriendJoinable");

	UFGFriendsLibrary_IsFriendJoinable_Params params;
	params.friendOf = friendOf;
	params.onlineFriend = onlineFriend;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFriendsLibrary.GetFriendUniqueNetId
// ()
// Parameters:
// struct FFGOnlineFriend         onlineFriend                   (ConstParm, Parm, OutParm, ReferenceParm)
// struct FUniqueNetIdRepl        ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUniqueNetIdRepl UFGFriendsLibrary::GetFriendUniqueNetId(const struct FFGOnlineFriend& onlineFriend)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFriendsLibrary.GetFriendUniqueNetId");

	UFGFriendsLibrary_GetFriendUniqueNetId_Params params;
	params.onlineFriend = onlineFriend;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFriendsLibrary.GetFriendName
// ()
// Parameters:
// class ULocalPlayer*            friendOf                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGOnlineFriend         onlineFriend                   (ConstParm, Parm, OutParm, ReferenceParm)
// class FString                  out_displayName                (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFriendsLibrary::GetFriendName(class ULocalPlayer* friendOf, const struct FFGOnlineFriend& onlineFriend, class FString* out_displayName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFriendsLibrary.GetFriendName");

	UFGFriendsLibrary_GetFriendName_Params params;
	params.friendOf = friendOf;
	params.onlineFriend = onlineFriend;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_displayName != nullptr)
		*out_displayName = params.out_displayName;

	return params.ReturnValue;
}


// Function FactoryGame.FGFriendsLibrary.GetFriendFromNetId
// ()
// Parameters:
// class ULocalPlayer*            friendOf                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FUniqueNetIdRepl        netId                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FFGOnlineFriend         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FFGOnlineFriend UFGFriendsLibrary::GetFriendFromNetId(class ULocalPlayer* friendOf, const struct FUniqueNetIdRepl& netId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFriendsLibrary.GetFriendFromNetId");

	UFGFriendsLibrary_GetFriendFromNetId_Params params;
	params.friendOf = friendOf;
	params.netId = netId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFriendsLibrary.EqualEqual_FriendFriend
// ()
// Parameters:
// struct FFGOnlineFriend         A                              (ConstParm, Parm, OutParm, ReferenceParm)
// struct FFGOnlineFriend         B                              (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFriendsLibrary::EqualEqual_FriendFriend(const struct FFGOnlineFriend& A, const struct FFGOnlineFriend& B)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFriendsLibrary.EqualEqual_FriendFriend");

	UFGFriendsLibrary_EqualEqual_FriendFriend_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSessionLibrary.SetSessionVisibility
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESessionVisibility> Visibility                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGSessionLibrary::SetSessionVisibility(class UObject* WorldContext, TEnumAsByte<ESessionVisibility> Visibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.SetSessionVisibility");

	UFGSessionLibrary_SetSessionVisibility_Params params;
	params.WorldContext = WorldContext;
	params.Visibility = Visibility;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSessionLibrary.JoinSession
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FBlueprintSessionResult session                        (ConstParm, Parm, OutParm, ReferenceParm)

void UFGSessionLibrary::JoinSession(class UObject* WorldContext, const struct FBlueprintSessionResult& session)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.JoinSession");

	UFGSessionLibrary_JoinSession_Params params;
	params.WorldContext = WorldContext;
	params.session = session;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSessionLibrary.IsSessionValid
// ()
// Parameters:
// struct FBlueprintSessionResult session                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSessionLibrary::IsSessionValid(const struct FBlueprintSessionResult& session)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.IsSessionValid");

	UFGSessionLibrary_IsSessionValid_Params params;
	params.session = session;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSessionLibrary.IsInGameSession
// ()
// Parameters:
// class ULocalPlayer*            LocalPlayer                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSessionLibrary::IsInGameSession(class ULocalPlayer* LocalPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.IsInGameSession");

	UFGSessionLibrary_IsInGameSession_Params params;
	params.LocalPlayer = LocalPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSessionLibrary.InOnlineSession
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FUniqueNetIdRepl        PlayerId                       (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSessionLibrary::InOnlineSession(class UObject* WorldContext, const struct FUniqueNetIdRepl& PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.InOnlineSession");

	UFGSessionLibrary_InOnlineSession_Params params;
	params.WorldContext = WorldContext;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSessionLibrary.GetSessionVisibility
// ()
// Parameters:
// struct FBlueprintSessionResult session                        (ConstParm, Parm, OutParm, ReferenceParm)
// TEnumAsByte<ESessionVisibility> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ESessionVisibility> UFGSessionLibrary::GetSessionVisibility(const struct FBlueprintSessionResult& session)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.GetSessionVisibility");

	UFGSessionLibrary_GetSessionVisibility_Params params;
	params.session = session;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSessionLibrary.GetSessionSettings
// ()
// Parameters:
// struct FBlueprintSessionResult session                        (ConstParm, Parm, OutParm, ReferenceParm)
// struct FFGOnlineSessionSettings ReturnValue                    (Parm, OutParm, ReturnParm)

struct FFGOnlineSessionSettings UFGSessionLibrary::GetSessionSettings(const struct FBlueprintSessionResult& session)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.GetSessionSettings");

	UFGSessionLibrary_GetSessionSettings_Params params;
	params.session = session;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSessionLibrary.GetMySession
// ()
// Parameters:
// class ULocalPlayer*            LocalPlayer                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FBlueprintSessionResult ReturnValue                    (Parm, OutParm, ReturnParm)

struct FBlueprintSessionResult UFGSessionLibrary::GetMySession(class ULocalPlayer* LocalPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.GetMySession");

	UFGSessionLibrary_GetMySession_Params params;
	params.LocalPlayer = LocalPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSessionLibrary.GetMaxNumberOfPlayers
// ()
// Parameters:
// struct FBlueprintSessionResult session                        (ConstParm, Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGSessionLibrary::GetMaxNumberOfPlayers(const struct FBlueprintSessionResult& session)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.GetMaxNumberOfPlayers");

	UFGSessionLibrary_GetMaxNumberOfPlayers_Params params;
	params.session = session;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInviteLibrary.SendInviteToFriend
// ()
// Parameters:
// class ULocalPlayer*            fromPlayer                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGOnlineFriend         toFriend                       (ConstParm, Parm, OutParm, ReferenceParm)

void UFGInviteLibrary::SendInviteToFriend(class ULocalPlayer* fromPlayer, const struct FFGOnlineFriend& toFriend)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInviteLibrary.SendInviteToFriend");

	UFGInviteLibrary_SendInviteToFriend_Params params;
	params.fromPlayer = fromPlayer;
	params.toFriend = toFriend;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInviteLibrary.JoinInvite
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FPendingInvite          invite                         (ConstParm, Parm, OutParm, ReferenceParm)

void UFGInviteLibrary::JoinInvite(class UObject* WorldContext, const struct FPendingInvite& invite)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInviteLibrary.JoinInvite");

	UFGInviteLibrary_JoinInvite_Params params;
	params.WorldContext = WorldContext;
	params.invite = invite;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInviteLibrary.GetPendingInvites
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FPendingInvite>  out_invites                    (Parm, OutParm, ZeroConstructor)

void UFGInviteLibrary::GetPendingInvites(class UObject* WorldContext, TArray<struct FPendingInvite>* out_invites)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInviteLibrary.GetPendingInvites");

	UFGInviteLibrary_GetPendingInvites_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_invites != nullptr)
		*out_invites = params.out_invites;
}


// Function FactoryGame.FGInviteLibrary.GetInviteSenderUniqueNetId
// ()
// Parameters:
// struct FPendingInvite          invite                         (ConstParm, Parm, OutParm, ReferenceParm)
// struct FUniqueNetIdRepl        ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUniqueNetIdRepl UFGInviteLibrary::GetInviteSenderUniqueNetId(const struct FPendingInvite& invite)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInviteLibrary.GetInviteSenderUniqueNetId");

	UFGInviteLibrary_GetInviteSenderUniqueNetId_Params params;
	params.invite = invite;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInviteLibrary.GetInviteFromSender
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FUniqueNetIdRepl        Sender                         (ConstParm, Parm, OutParm, ReferenceParm)
// struct FPendingInvite          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPendingInvite UFGInviteLibrary::GetInviteFromSender(class UObject* WorldContext, const struct FUniqueNetIdRepl& Sender)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInviteLibrary.GetInviteFromSender");

	UFGInviteLibrary_GetInviteFromSender_Params params;
	params.WorldContext = WorldContext;
	params.Sender = Sender;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInviteLibrary.DiscardInvite
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FPendingInvite          invite                         (ConstParm, Parm, OutParm, ReferenceParm)

void UFGInviteLibrary::DiscardInvite(class UObject* WorldContext, const struct FPendingInvite& invite)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInviteLibrary.DiscardInvite");

	UFGInviteLibrary_DiscardInvite_Params params;
	params.WorldContext = WorldContext;
	params.invite = invite;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNetworkLibrary.SubmitFeedback
// ()
// Parameters:
// struct FUserFeedbackFrontEndData frontEndFeedbackData           (Parm)
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGNetworkLibrary::SubmitFeedback(const struct FUserFeedbackFrontEndData& frontEndFeedbackData, class APlayerController* PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.SubmitFeedback");

	UFGNetworkLibrary_SubmitFeedback_Params params;
	params.frontEndFeedbackData = frontEndFeedbackData;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNetworkLibrary.QueryNATType
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGNetworkLibrary::QueryNATType(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.QueryNATType");

	UFGNetworkLibrary_QueryNATType_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNetworkLibrary.OpenWebURL
// ()
// Parameters:
// class FString                  URL                            (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGNetworkLibrary::OpenWebURL(const class FString& URL)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.OpenWebURL");

	UFGNetworkLibrary_OpenWebURL_Params params;
	params.URL = URL;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNetworkLibrary.NATTypeToText
// ()
// Parameters:
// ECachedNATType                 natType                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGNetworkLibrary::NATTypeToText(ECachedNATType natType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.NATTypeToText");

	UFGNetworkLibrary_NATTypeToText_Params params;
	params.natType = natType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNetworkLibrary.IsValid_UniqueNetId
// ()
// Parameters:
// struct FUniqueNetIdRepl        A                              (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGNetworkLibrary::IsValid_UniqueNetId(const struct FUniqueNetIdRepl& A)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.IsValid_UniqueNetId");

	UFGNetworkLibrary_IsValid_UniqueNetId_Params params;
	params.A = A;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNetworkLibrary.IsServer
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGNetworkLibrary::IsServer(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.IsServer");

	UFGNetworkLibrary_IsServer_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNetworkLibrary.GetNameFromUniqueNetId
// ()
// Parameters:
// class ULocalPlayer*            querier                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FUniqueNetIdRepl        netId                          (ConstParm, Parm, OutParm, ReferenceParm)
// class FString                  out_name                       (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGNetworkLibrary::GetNameFromUniqueNetId(class ULocalPlayer* querier, const struct FUniqueNetIdRepl& netId, class FString* out_name)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.GetNameFromUniqueNetId");

	UFGNetworkLibrary_GetNameFromUniqueNetId_Params params;
	params.querier = querier;
	params.netId = netId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_name != nullptr)
		*out_name = params.out_name;

	return params.ReturnValue;
}


// Function FactoryGame.FGNetworkLibrary.GetCachedNATType
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// ECachedNATType                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECachedNATType UFGNetworkLibrary::GetCachedNATType(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.GetCachedNATType");

	UFGNetworkLibrary_GetCachedNATType_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNetworkLibrary.EqualEqual_NetIdNetId
// ()
// Parameters:
// struct FUniqueNetIdRepl        A                              (ConstParm, Parm, OutParm, ReferenceParm)
// struct FUniqueNetIdRepl        B                              (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGNetworkLibrary::EqualEqual_NetIdNetId(const struct FUniqueNetIdRepl& A, const struct FUniqueNetIdRepl& B)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.EqualEqual_NetIdNetId");

	UFGNetworkLibrary_EqualEqual_NetIdNetId_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNobeliskDetonator.Server_StartDetonations
// ()

void AFGNobeliskDetonator::Server_StartDetonations()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.Server_StartDetonations");

	AFGNobeliskDetonator_Server_StartDetonations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonator.Server_SpawnExplosive
// ()
// Parameters:
// struct FTransform              SpawnTransform                 (Parm, IsPlainOldData)
// int                            throwForce                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGNobeliskDetonator::Server_SpawnExplosive(const struct FTransform& SpawnTransform, int throwForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.Server_SpawnExplosive");

	AFGNobeliskDetonator_Server_SpawnExplosive_Params params;
	params.SpawnTransform = SpawnTransform;
	params.throwForce = throwForce;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonator.Server_ExecuteSecondaryFire
// ()

void AFGNobeliskDetonator::Server_ExecuteSecondaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.Server_ExecuteSecondaryFire");

	AFGNobeliskDetonator_Server_ExecuteSecondaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonator.Server_ExecutePrimaryFire
// ()

void AFGNobeliskDetonator::Server_ExecutePrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.Server_ExecutePrimaryFire");

	AFGNobeliskDetonator_Server_ExecutePrimaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonator.OnViewportFocusChanged
// ()
// Parameters:
// bool                           IsOpen                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  interactionClass               (Parm, ZeroConstructor, IsPlainOldData)

void AFGNobeliskDetonator::OnViewportFocusChanged(bool IsOpen, class UClass* interactionClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.OnViewportFocusChanged");

	AFGNobeliskDetonator_OnViewportFocusChanged_Params params;
	params.IsOpen = IsOpen;
	params.interactionClass = interactionClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonator.OnSecondaryFirePressed
// ()

void AFGNobeliskDetonator::OnSecondaryFirePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.OnSecondaryFirePressed");

	AFGNobeliskDetonator_OnSecondaryFirePressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonator.GetChargePct
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGNobeliskDetonator::GetChargePct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.GetChargePct");

	AFGNobeliskDetonator_GetChargePct_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNobeliskDetonator.ExecuteSecondaryFire
// ()

void AFGNobeliskDetonator::ExecuteSecondaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.ExecuteSecondaryFire");

	AFGNobeliskDetonator_ExecuteSecondaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonator.ExecutePrimaryFire
// ()

void AFGNobeliskDetonator::ExecutePrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.ExecutePrimaryFire");

	AFGNobeliskDetonator_ExecutePrimaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponAttachment.PlayFireEffect
// ()
// Parameters:
// struct FVector                 flashLocation                  (Parm, IsPlainOldData)

void AFGWeaponAttachment::PlayFireEffect(const struct FVector& flashLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponAttachment.PlayFireEffect");

	AFGWeaponAttachment_PlayFireEffect_Params params;
	params.flashLocation = flashLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponAttachment.Multicast_SetFlashLocation
// ()
// Parameters:
// struct FVector                 newFlashLocation               (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void AFGWeaponAttachment::Multicast_SetFlashLocation(const struct FVector& newFlashLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponAttachment.Multicast_SetFlashLocation");

	AFGWeaponAttachment_Multicast_SetFlashLocation_Params params;
	params.newFlashLocation = newFlashLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponAttachment.Multicast_PlayReloadEffectMulticast
// ()

void AFGWeaponAttachment::Multicast_PlayReloadEffectMulticast()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponAttachment.Multicast_PlayReloadEffectMulticast");

	AFGWeaponAttachment_Multicast_PlayReloadEffectMulticast_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponAttachment.ClientPlayReloadEffect
// ()

void AFGWeaponAttachment::ClientPlayReloadEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponAttachment.ClientPlayReloadEffect");

	AFGWeaponAttachment_ClientPlayReloadEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonatorAttachment.OnIsLoadedSet
// ()

void AFGNobeliskDetonatorAttachment::OnIsLoadedSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonatorAttachment.OnIsLoadedSet");

	AFGNobeliskDetonatorAttachment_OnIsLoadedSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonatorAttachment.Multicast_SetIsLoaded
// ()
// Parameters:
// bool                           isLoaded                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGNobeliskDetonatorAttachment::Multicast_SetIsLoaded(bool isLoaded)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonatorAttachment.Multicast_SetIsLoaded");

	AFGNobeliskDetonatorAttachment_Multicast_SetIsLoaded_Params params;
	params.isLoaded = isLoaded;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskExplosive.OnRep_DetonateIn
// ()

void AFGNobeliskExplosive::OnRep_DetonateIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskExplosive.OnRep_DetonateIn");

	AFGNobeliskExplosive_OnRep_DetonateIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskExplosiveAttachment.OnIsLoadedSet
// ()

void AFGNobeliskExplosiveAttachment::OnIsLoadedSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskExplosiveAttachment.OnIsLoadedSet");

	AFGNobeliskExplosiveAttachment_OnIsLoadedSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskExplosiveAttachment.OnBeginFireEffect
// ()
// Parameters:
// struct FVector                 Location                       (Parm, IsPlainOldData)

void AFGNobeliskExplosiveAttachment::OnBeginFireEffect(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskExplosiveAttachment.OnBeginFireEffect");

	AFGNobeliskExplosiveAttachment_OnBeginFireEffect_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskExplosiveAttachment.Multicast_SetIsLoaded
// ()
// Parameters:
// bool                           isLoaded                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGNobeliskExplosiveAttachment::Multicast_SetIsLoaded(bool isLoaded)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskExplosiveAttachment.Multicast_SetIsLoaded");

	AFGNobeliskExplosiveAttachment_Multicast_SetIsLoaded_Params params;
	params.isLoaded = isLoaded;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskExplosiveAttachment.Multicast_PlayBeginFireEffect
// ()
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void AFGNobeliskExplosiveAttachment::Multicast_PlayBeginFireEffect(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskExplosiveAttachment.Multicast_PlayBeginFireEffect");

	AFGNobeliskExplosiveAttachment_Multicast_PlayBeginFireEffect_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGObjectScanner.UpdateScannerVisuals
// ()
// Parameters:
// bool                           wasChange                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGObjectScanner::UpdateScannerVisuals(bool wasChange)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScanner.UpdateScannerVisuals");

	AFGObjectScanner_UpdateScannerVisuals_Params params;
	params.wasChange = wasChange;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGObjectScanner.SetScannableEntry
// ()
// Parameters:
// class UClass*                  ScannableClass                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGObjectScanner::SetScannableEntry(class UClass* ScannableClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScanner.SetScannableEntry");

	AFGObjectScanner_SetScannableEntry_Params params;
	params.ScannableClass = ScannableClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGObjectScanner.PlayBeep
// ()
// Parameters:
// bool                           isObjectInRange                (Parm, ZeroConstructor, IsPlainOldData)

void AFGObjectScanner::PlayBeep(bool isObjectInRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScanner.PlayBeep");

	AFGObjectScanner_PlayBeep_Params params;
	params.isObjectInRange = isObjectInRange;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGObjectScanner.IsBeeping
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGObjectScanner::IsBeeping()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScanner.IsBeeping");

	AFGObjectScanner_IsBeeping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGObjectScanner.GetCurrentDetails
// ()
// Parameters:
// struct FScannableDetails       ReturnValue                    (Parm, OutParm, ReturnParm)

struct FScannableDetails AFGObjectScanner::GetCurrentDetails()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScanner.GetCurrentDetails");

	AFGObjectScanner_GetCurrentDetails_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGObjectScanner.GetAvailableObjectDetails
// ()
// Parameters:
// TArray<struct FScannableDetails> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FScannableDetails> AFGObjectScanner::GetAvailableObjectDetails()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScanner.GetAvailableObjectDetails");

	AFGObjectScanner_GetAvailableObjectDetails_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGObjectScanner.CycleForward
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGObjectScanner::CycleForward()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScanner.CycleForward");

	AFGObjectScanner_CycleForward_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGObjectScanner.CycleBackward
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGObjectScanner::CycleBackward()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScanner.CycleBackward");

	AFGObjectScanner_CycleBackward_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGObjectScannerAttachment.UpdateScannerVisuals
// ()

void AFGObjectScannerAttachment::UpdateScannerVisuals()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScannerAttachment.UpdateScannerVisuals");

	AFGObjectScannerAttachment_UpdateScannerVisuals_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGObjectScannerAttachment.OnRep_ScannerLightColor
// ()

void AFGObjectScannerAttachment::OnRep_ScannerLightColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScannerAttachment.OnRep_ScannerLightColor");

	AFGObjectScannerAttachment_OnRep_ScannerLightColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGObjectScannerAttachment.OnRep_IsBeeping
// ()

void AFGObjectScannerAttachment::OnRep_IsBeeping()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScannerAttachment.OnRep_IsBeeping");

	AFGObjectScannerAttachment_OnRep_IsBeeping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGObjectScannerAttachment.IsBeeping
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGObjectScannerAttachment::IsBeeping()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScannerAttachment.IsBeeping");

	AFGObjectScannerAttachment_IsBeeping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGObjectScannerAttachment.GetScannerLightColor
// ()
// Parameters:
// struct FColor                  ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FColor AFGObjectScannerAttachment::GetScannerLightColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScannerAttachment.GetScannerLightColor");

	AFGObjectScannerAttachment_GetScannerLightColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGOutlineComponent.UpdateProxyOutlineMesh
// ()
// Parameters:
// class UStaticMesh*             newOutlineMesh                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGOutlineComponent::UpdateProxyOutlineMesh(class UStaticMesh* newOutlineMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOutlineComponent.UpdateProxyOutlineMesh");

	UFGOutlineComponent_UpdateProxyOutlineMesh_Params params;
	params.newOutlineMesh = newOutlineMesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGOutlineComponent.UpdateProxyOutlineLocationAndRotation
// ()
// Parameters:
// struct FVector                 NewLocation                    (Parm, IsPlainOldData)
// struct FRotator                NewRotation                    (Parm, IsPlainOldData)

void UFGOutlineComponent::UpdateProxyOutlineLocationAndRotation(const struct FVector& NewLocation, const struct FRotator& NewRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOutlineComponent.UpdateProxyOutlineLocationAndRotation");

	UFGOutlineComponent_UpdateProxyOutlineLocationAndRotation_Params params;
	params.NewLocation = NewLocation;
	params.NewRotation = NewRotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGOutlineComponent.ShowProxyOutline
// ()
// Parameters:
// class UStaticMesh*             outlineMesh                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              Transform                      (ConstParm, Parm, IsPlainOldData)
// EOutlineColor                  Color                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGOutlineComponent::ShowProxyOutline(class UStaticMesh* outlineMesh, const struct FTransform& Transform, EOutlineColor Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOutlineComponent.ShowProxyOutline");

	UFGOutlineComponent_ShowProxyOutline_Params params;
	params.outlineMesh = outlineMesh;
	params.Transform = Transform;
	params.Color = Color;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGOutlineComponent.ShowOutline
// ()
// Parameters:
// class AActor*                  actorToOutline                 (Parm, ZeroConstructor, IsPlainOldData)
// EOutlineColor                  Color                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGOutlineComponent::ShowOutline(class AActor* actorToOutline, EOutlineColor Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOutlineComponent.ShowOutline");

	UFGOutlineComponent_ShowOutline_Params params;
	params.actorToOutline = actorToOutline;
	params.Color = Color;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGOutlineComponent.ShowMultiActorOutline
// ()
// Parameters:
// TArray<class AActor*>          actorsToOutline                (Parm, ZeroConstructor)
// EOutlineColor                  Color                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGOutlineComponent::ShowMultiActorOutline(TArray<class AActor*> actorsToOutline, EOutlineColor Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOutlineComponent.ShowMultiActorOutline");

	UFGOutlineComponent_ShowMultiActorOutline_Params params;
	params.actorsToOutline = actorsToOutline;
	params.Color = Color;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGOutlineComponent.IsOutlineVisible
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGOutlineComponent::IsOutlineVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOutlineComponent.IsOutlineVisible");

	UFGOutlineComponent_IsOutlineVisible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGOutlineComponent.HideOutline
// ()

void UFGOutlineComponent::HideOutline()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOutlineComponent.HideOutline");

	UFGOutlineComponent_HideOutline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGOutlineComponent.GetOutlineColor
// ()
// Parameters:
// EOutlineColor                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EOutlineColor UFGOutlineComponent::GetOutlineColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOutlineComponent.GetOutlineColor");

	UFGOutlineComponent_GetOutlineColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGParachute.OnDeployStop
// ()

void AFGParachute::OnDeployStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGParachute.OnDeployStop");

	AFGParachute_OnDeployStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGParachute.OnDeployed
// ()

void AFGParachute::OnDeployed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGParachute.OnDeployed");

	AFGParachute_OnDeployed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGParachute.ModifyVelocity
// ()
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 OldVelocity                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector AFGParachute::ModifyVelocity(float DeltaTime, const struct FVector& OldVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGParachute.ModifyVelocity");

	AFGParachute_ModifyVelocity_Params params;
	params.DeltaTime = DeltaTime;
	params.OldVelocity = OldVelocity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGParachute.IsDeployed
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGParachute::IsDeployed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGParachute.IsDeployed");

	AFGParachute_IsDeployed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGParachuteAttachment.OnRep_IsDeployed
// ()

void AFGParachuteAttachment::OnRep_IsDeployed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGParachuteAttachment.OnRep_IsDeployed");

	AFGParachuteAttachment_OnRep_IsDeployed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGParachuteAttachment.OnDeployStop
// ()

void AFGParachuteAttachment::OnDeployStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGParachuteAttachment.OnDeployStop");

	AFGParachuteAttachment_OnDeployStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGParachuteAttachment.OnDeployed
// ()

void AFGParachuteAttachment::OnDeployed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGParachuteAttachment.OnDeployed");

	AFGParachuteAttachment_OnDeployed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPassengerSeat.UpdateCamera
// ()

void AFGPassengerSeat::UpdateCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPassengerSeat.UpdateCamera");

	AFGPassengerSeat_UpdateCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPassengerSeat.GetOuterVehicle
// ()
// Parameters:
// class AFGVehicle*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGVehicle* AFGPassengerSeat::GetOuterVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPassengerSeat.GetOuterVehicle");

	AFGPassengerSeat_GetOuterVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlanet.UpdatePreview
// ()

void AFGPlanet::UpdatePreview()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlanet.UpdatePreview");

	AFGPlanet_UpdatePreview_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.SetSessionEnabled
// ()
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerControllerBase::SetSessionEnabled(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.SetSessionEnabled");

	AFGPlayerControllerBase_SetSessionEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.SetPresenceEnabled
// ()
// Parameters:
// bool                           Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerControllerBase::SetPresenceEnabled(bool Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.SetPresenceEnabled");

	AFGPlayerControllerBase_SetPresenceEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.SetMouseSensitivity
// ()
// Parameters:
// float                          newSense                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerControllerBase::SetMouseSensitivity(float newSense)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.SetMouseSensitivity");

	AFGPlayerControllerBase_SetMouseSensitivity_Params params;
	params.newSense = newSense;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.SetIsUsingGamepad
// ()
// Parameters:
// bool                           newIsUsingGamepad              (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerControllerBase::SetIsUsingGamepad(bool newIsUsingGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.SetIsUsingGamepad");

	AFGPlayerControllerBase_SetIsUsingGamepad_Params params;
	params.newIsUsingGamepad = newIsUsingGamepad;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.Server_UpdateCappedBandwidth
// ()
// Parameters:
// int                            Cap                            (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerControllerBase::Server_UpdateCappedBandwidth(int Cap)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.Server_UpdateCappedBandwidth");

	AFGPlayerControllerBase_Server_UpdateCappedBandwidth_Params params;
	params.Cap = Cap;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.ResetInputBindings
// ()

void AFGPlayerControllerBase::ResetInputBindings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.ResetInputBindings");

	AFGPlayerControllerBase_ResetInputBindings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.RebindActionKey
// ()
// Parameters:
// struct FFGKeyMapping           newKeyMapping                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerControllerBase::RebindActionKey(const struct FFGKeyMapping& newKeyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.RebindActionKey");

	AFGPlayerControllerBase_RebindActionKey_Params params;
	params.newKeyMapping = newKeyMapping;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerControllerBase.GetPresenceString
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString AFGPlayerControllerBase::GetPresenceString()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.GetPresenceString");

	AFGPlayerControllerBase_GetPresenceString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerControllerBase.GetMouseSensitivity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGPlayerControllerBase::GetMouseSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.GetMouseSensitivity");

	AFGPlayerControllerBase_GetMouseSensitivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerControllerBase.GetKeyNameForAction
// ()
// Parameters:
// struct FName                   inAction                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           getGamepadKey                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AFGPlayerControllerBase::GetKeyNameForAction(const struct FName& inAction, bool getGamepadKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.GetKeyNameForAction");

	AFGPlayerControllerBase_GetKeyNameForAction_Params params;
	params.inAction = inAction;
	params.getGamepadKey = getGamepadKey;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerControllerBase.GetIsUsingGamepad
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerControllerBase::GetIsUsingGamepad()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.GetIsUsingGamepad");

	AFGPlayerControllerBase_GetIsUsingGamepad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerControllerBase.GetDefaultMouseSensitivity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGPlayerControllerBase::GetDefaultMouseSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.GetDefaultMouseSensitivity");

	AFGPlayerControllerBase_GetDefaultMouseSensitivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerControllerBase.FlushPressedKeys
// ()

void AFGPlayerControllerBase::FlushPressedKeys()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.FlushPressedKeys");

	AFGPlayerControllerBase_FlushPressedKeys_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.DiscardInput
// ()

void AFGPlayerControllerBase::DiscardInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.DiscardInput");

	AFGPlayerControllerBase_DiscardInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.Client_UpdateCappedBandwidth
// ()
// Parameters:
// int                            Cap                            (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerControllerBase::Client_UpdateCappedBandwidth(int Cap)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.Client_UpdateCappedBandwidth");

	AFGPlayerControllerBase_Client_UpdateCappedBandwidth_Params params;
	params.Cap = Cap;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.TrackAkMemoryPools
// ()

void AFGPlayerController::TrackAkMemoryPools()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.TrackAkMemoryPools");

	AFGPlayerController_TrackAkMemoryPools_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.TrackAkComponentsWithNoPositionOrOwner
// ()

void AFGPlayerController::TrackAkComponentsWithNoPositionOrOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.TrackAkComponentsWithNoPositionOrOwner");

	AFGPlayerController_TrackAkComponentsWithNoPositionOrOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.TrackAkComponents
// ()
// Parameters:
// bool                           byClass                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::TrackAkComponents(bool byClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.TrackAkComponents");

	AFGPlayerController_TrackAkComponents_Params params;
	params.byClass = byClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.TogglePhotoModeInstructionsWidget
// ()

void AFGPlayerController::TogglePhotoModeInstructionsWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.TogglePhotoModeInstructionsWidget");

	AFGPlayerController_TogglePhotoModeInstructionsWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.TogglePhotoMode
// ()

void AFGPlayerController::TogglePhotoMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.TogglePhotoMode");

	AFGPlayerController_TogglePhotoMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.ToggleHiResPhotoMode
// ()

void AFGPlayerController::ToggleHiResPhotoMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.ToggleHiResPhotoMode");

	AFGPlayerController_ToggleHiResPhotoMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.TakePhoto
// ()

void AFGPlayerController::TakePhoto()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.TakePhoto");

	AFGPlayerController_TakePhoto_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Suicide
// ()

void AFGPlayerController::Suicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Suicide");

	AFGPlayerController_Suicide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.StartRespawn
// ()

void AFGPlayerController::StartRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.StartRespawn");

	AFGPlayerController_StartRespawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.SetSessionName
// ()
// Parameters:
// class FString                  newSessionName                 (Parm, ZeroConstructor)

void AFGPlayerController::SetSessionName(const class FString& newSessionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.SetSessionName");

	AFGPlayerController_SetSessionName_Params params;
	params.newSessionName = newSessionName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.SetRecipeShortcutOnIndex
// ()
// Parameters:
// class UClass*                  Recipe                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            onIndex                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::SetRecipeShortcutOnIndex(class UClass* Recipe, int onIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.SetRecipeShortcutOnIndex");

	AFGPlayerController_SetRecipeShortcutOnIndex_Params params;
	params.Recipe = Recipe;
	params.onIndex = onIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.SetDismantleShortcutOnIndex
// ()
// Parameters:
// int                            onIndex                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::SetDismantleShortcutOnIndex(int onIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.SetDismantleShortcutOnIndex");

	AFGPlayerController_SetDismantleShortcutOnIndex_Params params;
	params.onIndex = onIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.SetDisabledInputGate
// ()
// Parameters:
// struct FDisabledInputGate      newDisabledInputGate           (Parm, IsPlainOldData)

void AFGPlayerController::SetDisabledInputGate(const struct FDisabledInputGate& newDisabledInputGate)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.SetDisabledInputGate");

	AFGPlayerController_SetDisabledInputGate_Params params;
	params.newDisabledInputGate = newDisabledInputGate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_Suicide
// ()

void AFGPlayerController::Server_Suicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_Suicide");

	AFGPlayerController_Server_Suicide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_StartRespawn
// ()

void AFGPlayerController::Server_StartRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_StartRespawn");

	AFGPlayerController_Server_StartRespawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_SpawnAttentionPingActor
// ()
// Parameters:
// struct FVector                 pingLocation                   (Parm, IsPlainOldData)
// struct FVector                 pingNormal                     (Parm, IsPlainOldData)

void AFGPlayerController::Server_SpawnAttentionPingActor(const struct FVector& pingLocation, const struct FVector& pingNormal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_SpawnAttentionPingActor");

	AFGPlayerController_Server_SpawnAttentionPingActor_Params params;
	params.pingLocation = pingLocation;
	params.pingNormal = pingNormal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_SetRecipeShortcutOnIndex
// ()
// Parameters:
// class UClass*                  Recipe                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            onIndex                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::Server_SetRecipeShortcutOnIndex(class UClass* Recipe, int onIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_SetRecipeShortcutOnIndex");

	AFGPlayerController_Server_SetRecipeShortcutOnIndex_Params params;
	params.Recipe = Recipe;
	params.onIndex = onIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_SetDismantleShortcutOnIndex
// ()
// Parameters:
// int                            onIndex                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::Server_SetDismantleShortcutOnIndex(int onIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_SetDismantleShortcutOnIndex");

	AFGPlayerController_Server_SetDismantleShortcutOnIndex_Params params;
	params.onIndex = onIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_SendChatMessage
// ()
// Parameters:
// struct FChatMessageStruct      newMessage                     (ConstParm, Parm, ReferenceParm)

void AFGPlayerController::Server_SendChatMessage(const struct FChatMessageStruct& newMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_SendChatMessage");

	AFGPlayerController_Server_SendChatMessage_Params params;
	params.newMessage = newMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_Respawn
// ()

void AFGPlayerController::Server_Respawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_Respawn");

	AFGPlayerController_Server_Respawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_RequestFogOfWarData
// ()

void AFGPlayerController::Server_RequestFogOfWarData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_RequestFogOfWarData");

	AFGPlayerController_Server_RequestFogOfWarData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_FinishRespawn
// ()

void AFGPlayerController::Server_FinishRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_FinishRespawn");

	AFGPlayerController_Server_FinishRespawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_DealRadialDamage
// ()
// Parameters:
// struct FHitResult              impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  inInstigator                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::Server_DealRadialDamage(const struct FHitResult& impact, float Damage, float Radius, class UClass* DamageType, class AActor* inInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_DealRadialDamage");

	AFGPlayerController_Server_DealRadialDamage_Params params;
	params.impact = impact;
	params.Damage = Damage;
	params.Radius = Radius;
	params.DamageType = DamageType;
	params.inInstigator = inInstigator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_DealImpactDamage
// ()
// Parameters:
// struct FHitResult              impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 forwardVector                  (Parm, IsPlainOldData)
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  inInstigator                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::Server_DealImpactDamage(const struct FHitResult& impact, const struct FVector& forwardVector, float Damage, class UClass* DamageType, class AActor* inInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_DealImpactDamage");

	AFGPlayerController_Server_DealImpactDamage_Params params;
	params.impact = impact;
	params.forwardVector = forwardVector;
	params.Damage = Damage;
	params.DamageType = DamageType;
	params.inInstigator = inInstigator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.OnStartRespawn
// ()
// Parameters:
// bool                           isJoining                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::OnStartRespawn(bool isJoining)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.OnStartRespawn");

	AFGPlayerController_OnStartRespawn_Params params;
	params.isJoining = isJoining;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.OnSetupMovementWind
// ()
// Parameters:
// class UAkComponent*            ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UAkComponent* AFGPlayerController::OnSetupMovementWind()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.OnSetupMovementWind");

	AFGPlayerController_OnSetupMovementWind_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.OnRep_IsRespawning
// ()

void AFGPlayerController::OnRep_IsRespawning()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.OnRep_IsRespawning");

	AFGPlayerController_OnRep_IsRespawning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.OnPrimaryFire
// ()

void AFGPlayerController::OnPrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.OnPrimaryFire");

	AFGPlayerController_OnPrimaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.OnFinishRespawn
// ()

void AFGPlayerController::OnFinishRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.OnFinishRespawn");

	AFGPlayerController_OnFinishRespawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.OnDisabledInputGateChanged
// ()

void AFGPlayerController::OnDisabledInputGateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.OnDisabledInputGateChanged");

	AFGPlayerController_OnDisabledInputGateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.NeedRespawn
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerController::NeedRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.NeedRespawn");

	AFGPlayerController_NeedRespawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.MaterialLookup
// ()
// Parameters:
// class FString                  ItemName                       (Parm, ZeroConstructor)

void AFGPlayerController::MaterialLookup(const class FString& ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.MaterialLookup");

	AFGPlayerController_MaterialLookup_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.MaterialFlowAnalysis
// ()
// Parameters:
// class FString                  recipeName                     (Parm, ZeroConstructor)

void AFGPlayerController::MaterialFlowAnalysis(const class FString& recipeName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.MaterialFlowAnalysis");

	AFGPlayerController_MaterialFlowAnalysis_Params params;
	params.recipeName = recipeName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.IsRespawning
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerController::IsRespawning()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.IsRespawning");

	AFGPlayerController_IsRespawning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.IsInTutorialMode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerController::IsInTutorialMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.IsInTutorialMode");

	AFGPlayerController_IsInTutorialMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.IncrementPhotoModeFOV
// ()

void AFGPlayerController::IncrementPhotoModeFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.IncrementPhotoModeFOV");

	AFGPlayerController_IncrementPhotoModeFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.GetValidShortcuts
// ()
// Parameters:
// TArray<class UFGHotbarShortcut*> out_shortcuts                  (Parm, OutParm, ZeroConstructor)

void AFGPlayerController::GetValidShortcuts(TArray<class UFGHotbarShortcut*>* out_shortcuts)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetValidShortcuts");

	AFGPlayerController_GetValidShortcuts_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_shortcuts != nullptr)
		*out_shortcuts = params.out_shortcuts;
}


// Function FactoryGame.FGPlayerController.GetShortcutIndexFromKey
// ()
// Parameters:
// struct FKeyEvent               Key                            (ConstParm, Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGPlayerController::GetShortcutIndexFromKey(const struct FKeyEvent& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetShortcutIndexFromKey");

	AFGPlayerController_GetShortcutIndexFromKey_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetScreenshotPath
// ()
// Parameters:
// bool                           isHighRes                      (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString AFGPlayerController::GetScreenshotPath(bool isHighRes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetScreenshotPath");

	AFGPlayerController_GetScreenshotPath_Params params;
	params.isHighRes = isHighRes;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetScreenBasedObjectRadius
// ()
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          screenRadius                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGPlayerController::GetScreenBasedObjectRadius(class AActor* Actor, float screenRadius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetScreenBasedObjectRadius");

	AFGPlayerController_GetScreenBasedObjectRadius_Params params;
	params.Actor = Actor;
	params.screenRadius = screenRadius;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetRemoteCallObjectOfClass
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UFGRemoteCallObject*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGRemoteCallObject* AFGPlayerController::GetRemoteCallObjectOfClass(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetRemoteCallObjectOfClass");

	AFGPlayerController_GetRemoteCallObjectOfClass_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetRecipeShortcutIndex
// ()
// Parameters:
// class UClass*                  Recipe                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGPlayerController::GetRecipeShortcutIndex(class UClass* Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetRecipeShortcutIndex");

	AFGPlayerController_GetRecipeShortcutIndex_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetPlayerHasMessage
// ()
// Parameters:
// class UClass*                  newMessage                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerController::GetPlayerHasMessage(class UClass* newMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetPlayerHasMessage");

	AFGPlayerController_GetPlayerHasMessage_Params params;
	params.newMessage = newMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetPhotoModeFOV
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGPlayerController::GetPhotoModeFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetPhotoModeFOV");

	AFGPlayerController_GetPhotoModeFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetObjectScreenRadius
// ()
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          boundingRadius                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGPlayerController::GetObjectScreenRadius(class AActor* Actor, float boundingRadius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetObjectScreenRadius");

	AFGPlayerController_GetObjectScreenRadius_Params params;
	params.Actor = Actor;
	params.boundingRadius = boundingRadius;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetIsPhotoMode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerController::GetIsPhotoMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetIsPhotoMode");

	AFGPlayerController_GetIsPhotoMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetHiResPhotoModeEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerController::GetHiResPhotoModeEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetHiResPhotoModeEnabled");

	AFGPlayerController_GetHiResPhotoModeEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetDismantleShortcutIndex
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGPlayerController::GetDismantleShortcutIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetDismantleShortcutIndex");

	AFGPlayerController_GetDismantleShortcutIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetDisabledInputGate
// ()
// Parameters:
// struct FDisabledInputGate      ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FDisabledInputGate AFGPlayerController::GetDisabledInputGate()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetDisabledInputGate");

	AFGPlayerController_GetDisabledInputGate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetCurrentMapArea
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGPlayerController::GetCurrentMapArea()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetCurrentMapArea");

	AFGPlayerController_GetCurrentMapArea_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetAllShortcuts
// ()
// Parameters:
// TArray<class UFGHotbarShortcut*> out_shortcuts                  (Parm, OutParm, ZeroConstructor)

void AFGPlayerController::GetAllShortcuts(TArray<class UFGHotbarShortcut*>* out_shortcuts)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetAllShortcuts");

	AFGPlayerController_GetAllShortcuts_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_shortcuts != nullptr)
		*out_shortcuts = params.out_shortcuts;
}


// Function FactoryGame.FGPlayerController.ExecuteShortcut
// ()
// Parameters:
// int                            shortcutIndex                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::ExecuteShortcut(int shortcutIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.ExecuteShortcut");

	AFGPlayerController_ExecuteShortcut_Params params;
	params.shortcutIndex = shortcutIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.EnterChatMessage
// ()
// Parameters:
// class FString                  inMessage                      (Parm, ZeroConstructor)

void AFGPlayerController::EnterChatMessage(const class FString& inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.EnterChatMessage");

	AFGPlayerController_EnterChatMessage_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.EnablePhotoMode
// ()
// Parameters:
// bool                           IsEnabled                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::EnablePhotoMode(bool IsEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.EnablePhotoMode");

	AFGPlayerController_EnablePhotoMode_Params params;
	params.IsEnabled = IsEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.DecrementPhotoModeFOV
// ()

void AFGPlayerController::DecrementPhotoModeFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.DecrementPhotoModeFOV");

	AFGPlayerController_DecrementPhotoModeFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.CreateSequenceList
// ()

void AFGPlayerController::CreateSequenceList()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.CreateSequenceList");

	AFGPlayerController_CreateSequenceList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Client_WaitForLevelStreaming
// ()

void AFGPlayerController::Client_WaitForLevelStreaming()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Client_WaitForLevelStreaming");

	AFGPlayerController_Client_WaitForLevelStreaming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Client_TransferFogOfWarData
// ()
// Parameters:
// TArray<unsigned char>          fogOfWarRawData                (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::Client_TransferFogOfWarData(TArray<unsigned char> fogOfWarRawData, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Client_TransferFogOfWarData");

	AFGPlayerController_Client_TransferFogOfWarData_Params params;
	params.fogOfWarRawData = fogOfWarRawData;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Client_AddMessage
// ()
// Parameters:
// class UClass*                  newMessage                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::Client_AddMessage(class UClass* newMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Client_AddMessage");

	AFGPlayerController_Client_AddMessage_Params params;
	params.newMessage = newMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.CheckPawnMapArea
// ()

void AFGPlayerController::CheckPawnMapArea()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.CheckPawnMapArea");

	AFGPlayerController_CheckPawnMapArea_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.Server_RemoveRecipe
// ()
// Parameters:
// class UClass*                  Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::Server_RemoveRecipe(class UClass* Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.Server_RemoveRecipe");

	AFGPlayerState_Server_RemoveRecipe_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.RemoveRecipe
// ()
// Parameters:
// class UClass*                  Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::RemoveRecipe(class UClass* Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.RemoveRecipe");

	AFGPlayerState_RemoveRecipe_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.RemoveMessage
// ()
// Parameters:
// class UClass*                  inMessage                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::RemoveMessage(class UClass* inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.RemoveMessage");

	AFGPlayerState_RemoveMessage_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.ReadMessage
// ()
// Parameters:
// class UClass*                  inMessage                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::ReadMessage(class UClass* inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.ReadMessage");

	AFGPlayerState_ReadMessage_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.OnRep_HotbarShortcuts
// ()

void AFGPlayerState::OnRep_HotbarShortcuts()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.OnRep_HotbarShortcuts");

	AFGPlayerState_OnRep_HotbarShortcuts_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.GetUsername
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString AFGPlayerState::GetUsername()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetUsername");

	AFGPlayerState_GetUsername_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetUserID
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString AFGPlayerState::GetUserID()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetUserID");

	AFGPlayerState_GetUserID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetUniqeNetId
// ()
// Parameters:
// struct FUniqueNetIdRepl        ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUniqueNetIdRepl AFGPlayerState::GetUniqeNetId()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetUniqeNetId");

	AFGPlayerState_GetUniqeNetId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetTutorialSubsystem
// ()
// Parameters:
// class UFGTutorialSubsystem*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGTutorialSubsystem* AFGPlayerState::GetTutorialSubsystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetTutorialSubsystem");

	AFGPlayerState_GetTutorialSubsystem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetSteamID
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString AFGPlayerState::GetSteamID()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetSteamID");

	AFGPlayerState_GetSteamID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetSlotNum
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGPlayerState::GetSlotNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetSlotNum");

	AFGPlayerState_GetSlotNum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetSlotData
// ()
// Parameters:
// TArray<struct FSlotData>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FSlotData> AFGPlayerState::GetSlotData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetSlotData");

	AFGPlayerState_GetSlotData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetNumArmSlots
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGPlayerState::GetNumArmSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetNumArmSlots");

	AFGPlayerState_GetNumArmSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetAllMessages
// ()
// Parameters:
// EMessageType                   MessageType                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> AFGPlayerState::GetAllMessages(EMessageType MessageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetAllMessages");

	AFGPlayerState_GetAllMessages_Params params;
	params.MessageType = MessageType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetAllMessageData
// ()
// Parameters:
// TArray<struct FMessageData>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FMessageData> AFGPlayerState::GetAllMessageData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetAllMessageData");

	AFGPlayerState_GetAllMessageData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.CreateShortcut
// ()
// Parameters:
// class UClass*                  shortcutClass                  (Parm, ZeroConstructor, IsPlainOldData)
// class UFGHotbarShortcut*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGHotbarShortcut* AFGPlayerState::CreateShortcut(class UClass* shortcutClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.CreateShortcut");

	AFGPlayerState_CreateShortcut_Params params;
	params.shortcutClass = shortcutClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.AddMessage
// ()
// Parameters:
// class UClass*                  inMessage                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::AddMessage(class UClass* inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.AddMessage");

	AFGPlayerState_AddMessage_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.AddArmSlots
// ()
// Parameters:
// int                            slotsToAdd                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::AddArmSlots(int slotsToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.AddArmSlots");

	AFGPlayerState_AddArmSlots_Params params;
	params.slotsToAdd = slotsToAdd;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPoleDescriptor.GetHeightMeshes
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FPoleHeightMesh> out_heightMeshes               (Parm, OutParm, ZeroConstructor)

void UFGPoleDescriptor::GetHeightMeshes(class UClass* inClass, TArray<struct FPoleHeightMesh>* out_heightMeshes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPoleDescriptor.GetHeightMeshes");

	UFGPoleDescriptor_GetHeightMeshes_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_heightMeshes != nullptr)
		*out_heightMeshes = params.out_heightMeshes;
}


// Function FactoryGame.FGPopupInstigatorInterface.WidgetFactory
// ()
// Parameters:
// class UClass*                  PopupClass                     (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UUserWidget*>     out_widgets                    (Parm, OutParm, ZeroConstructor)

void UFGPopupInstigatorInterface::WidgetFactory(class UClass* PopupClass, TArray<class UUserWidget*>* out_widgets)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupInstigatorInterface.WidgetFactory");

	UFGPopupInstigatorInterface_WidgetFactory_Params params;
	params.PopupClass = PopupClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_widgets != nullptr)
		*out_widgets = params.out_widgets;
}


// Function FactoryGame.FGPopupInstigatorInterface.NotifyPopupClosed
// ()
// Parameters:
// class UClass*                  PopupClass                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            exitCode                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGPopupInstigatorInterface::NotifyPopupClosed(class UClass* PopupClass, int exitCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupInstigatorInterface.NotifyPopupClosed");

	UFGPopupInstigatorInterface_NotifyPopupClosed_Params params;
	params.PopupClass = PopupClass;
	params.exitCode = exitCode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPopupWidget.CallPopupConfirmClicked
// ()

void UFGPopupWidget::CallPopupConfirmClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupWidget.CallPopupConfirmClicked");

	UFGPopupWidget_CallPopupConfirmClicked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPopupWidget.CallPopupClosedClicked
// ()
// Parameters:
// bool                           confirm                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGPopupWidget::CallPopupClosedClicked(bool confirm)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupWidget.CallPopupClosedClicked");

	UFGPopupWidget_CallPopupClosedClicked_Params params;
	params.confirm = confirm;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPopupWidgetContent.SetOptionalTextElements
// ()
// Parameters:
// struct FText                   Title                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   Desc                           (ConstParm, Parm, OutParm, ReferenceParm)

void UFGPopupWidgetContent::SetOptionalTextElements(const struct FText& Title, const struct FText& Desc)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupWidgetContent.SetOptionalTextElements");

	UFGPopupWidgetContent_SetOptionalTextElements_Params params;
	params.Title = Title;
	params.Desc = Desc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPopupWidgetContent.SetInstigatorAndInitialize
// ()
// Parameters:
// class UObject*                 Instigator                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGPopupWidgetContent::SetInstigatorAndInitialize(class UObject* Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupWidgetContent.SetInstigatorAndInitialize");

	UFGPopupWidgetContent_SetInstigatorAndInitialize_Params params;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPopupWidgetContent.NotifyPopupConfirmed
// ()

void UFGPopupWidgetContent::NotifyPopupConfirmed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupWidgetContent.NotifyPopupConfirmed");

	UFGPopupWidgetContent_NotifyPopupConfirmed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPopupWidgetContent.NotifyPopupCanceled
// ()

void UFGPopupWidgetContent::NotifyPopupCanceled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupWidgetContent.NotifyPopupCanceled");

	UFGPopupWidgetContent_NotifyPopupCanceled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPopupWidgetContent.GetShouldOkayBeEnabled
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPopupWidgetContent::GetShouldOkayBeEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupWidgetContent.GetShouldOkayBeEnabled");

	UFGPopupWidgetContent_GetShouldOkayBeEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPortableMiner.OnRep_IsProducing
// ()

void AFGPortableMiner::OnRep_IsProducing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPortableMiner.OnRep_IsProducing");

	AFGPortableMiner_OnRep_IsProducing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPortableMiner.IsProducing
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPortableMiner::IsProducing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPortableMiner.IsProducing");

	AFGPortableMiner_IsProducing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPortableMiner.GetOutputInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGPortableMiner::GetOutputInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPortableMiner.GetOutputInventory");

	AFGPortableMiner_GetOutputInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPortableMiner.GetExtractionProgress
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGPortableMiner::GetExtractionProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPortableMiner.GetExtractionProgress");

	AFGPortableMiner_GetExtractionProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPortableMiner.GetDismantleInventoryReturns
// ()
// Parameters:
// TArray<struct FInventoryStack> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FInventoryStack> AFGPortableMiner::GetDismantleInventoryReturns()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPortableMiner.GetDismantleInventoryReturns");

	AFGPortableMiner_GetDismantleInventoryReturns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPortableMiner.CanProduce
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPortableMiner::CanProduce()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPortableMiner.CanProduce");

	AFGPortableMiner_CanProduce_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPortableMinerDispenser.SpawnPortableMiner
// ()
// Parameters:
// class AFGResourceNode*         resourceNode                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGPortableMinerDispenser::SpawnPortableMiner(class AFGResourceNode* resourceNode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPortableMinerDispenser.SpawnPortableMiner");

	AFGPortableMinerDispenser_SpawnPortableMiner_Params params;
	params.resourceNode = resourceNode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPortableMinerDispenser.Server_PrimaryFire
// ()

void AFGPortableMinerDispenser::Server_PrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPortableMinerDispenser.Server_PrimaryFire");

	AFGPortableMinerDispenser_Server_PrimaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPowerCircuit.ResetFuse
// ()

void UFGPowerCircuit::ResetFuse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerCircuit.ResetFuse");

	UFGPowerCircuit_ResetFuse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPowerCircuit.IsFuseTriggered
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPowerCircuit::IsFuseTriggered()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerCircuit.IsFuseTriggered");

	UFGPowerCircuit_IsFuseTriggered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerCircuit.GetStats
// ()
// Parameters:
// struct FPowerCircuitStats      out_stats                      (Parm, OutParm)

void UFGPowerCircuit::GetStats(struct FPowerCircuitStats* out_stats)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerCircuit.GetStats");

	UFGPowerCircuit_GetStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_stats != nullptr)
		*out_stats = params.out_stats;
}


// Function FactoryGame.FGPowerCircuit.GetNumGraphPoint
// ()
// Parameters:
// struct FPowerCircuitStats      stats                          (ConstParm, Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGPowerCircuit::GetNumGraphPoint(const struct FPowerCircuitStats& stats)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerCircuit.GetNumGraphPoint");

	UFGPowerCircuit_GetNumGraphPoint_Params params;
	params.stats = stats;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerCircuit.GetGraphPointAtIndex
// ()
// Parameters:
// struct FPowerCircuitStats      stats                          (ConstParm, Parm, OutParm, ReferenceParm)
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FPowerGraphPoint        out_item                       (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPowerCircuit::GetGraphPointAtIndex(const struct FPowerCircuitStats& stats, int idx, struct FPowerGraphPoint* out_item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerCircuit.GetGraphPointAtIndex");

	UFGPowerCircuit_GetGraphPointAtIndex_Params params;
	params.stats = stats;
	params.idx = idx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_item != nullptr)
		*out_item = params.out_item;

	return params.ReturnValue;
}


// DelegateFunction FactoryGame.FGPowerCircuitWidget.GetPowerCircuit__DelegateSignature
// ()
// Parameters:
// class UFGPowerCircuit*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGPowerCircuit* UFGPowerCircuitWidget::GetPowerCircuit__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FactoryGame.FGPowerCircuitWidget.GetPowerCircuit__DelegateSignature");

	UFGPowerCircuitWidget_GetPowerCircuit__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerCircuitWidget.GetPowerCircuit
// ()
// Parameters:
// class UFGPowerCircuit*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGPowerCircuit* UFGPowerCircuitWidget::GetPowerCircuit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerCircuitWidget.GetPowerCircuit");

	UFGPowerCircuitWidget_GetPowerCircuit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerConnectionComponent.SetPowerInfo
// ()
// Parameters:
// class UFGPowerInfoComponent*   powerInfo                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGPowerConnectionComponent::SetPowerInfo(class UFGPowerInfoComponent* powerInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerConnectionComponent.SetPowerInfo");

	UFGPowerConnectionComponent_SetPowerInfo_Params params;
	params.powerInfo = powerInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPowerConnectionComponent.GetPowerInfo
// ()
// Parameters:
// class UFGPowerInfoComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPowerInfoComponent* UFGPowerConnectionComponent::GetPowerInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerConnectionComponent.GetPowerInfo");

	UFGPowerConnectionComponent_GetPowerInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerConnectionComponent.GetPowerCircuit
// ()
// Parameters:
// class UFGPowerCircuit*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGPowerCircuit* UFGPowerConnectionComponent::GetPowerCircuit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerConnectionComponent.GetPowerCircuit");

	UFGPowerConnectionComponent_GetPowerCircuit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.SetTargetConsumption
// ()
// Parameters:
// float                          newConsumption                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGPowerInfoComponent::SetTargetConsumption(float newConsumption)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.SetTargetConsumption");

	UFGPowerInfoComponent_SetTargetConsumption_Params params;
	params.newConsumption = newConsumption;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPowerInfoComponent.SetDynamicProductionCapacity
// ()
// Parameters:
// float                          newProduction                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGPowerInfoComponent::SetDynamicProductionCapacity(float newProduction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.SetDynamicProductionCapacity");

	UFGPowerInfoComponent_SetDynamicProductionCapacity_Params params;
	params.newProduction = newProduction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPowerInfoComponent.SetBaseProduction
// ()
// Parameters:
// float                          newProduction                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGPowerInfoComponent::SetBaseProduction(float newProduction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.SetBaseProduction");

	UFGPowerInfoComponent_SetBaseProduction_Params params;
	params.newProduction = newProduction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPowerInfoComponent.IsFuseTriggered
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPowerInfoComponent::IsFuseTriggered()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.IsFuseTriggered");

	UFGPowerInfoComponent_IsFuseTriggered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.IsConnected
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPowerInfoComponent::IsConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.IsConnected");

	UFGPowerInfoComponent_IsConnected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.HasPower
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPowerInfoComponent::HasPower()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.HasPower");

	UFGPowerInfoComponent_HasPower_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.GetTargetConsumption
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGPowerInfoComponent::GetTargetConsumption()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.GetTargetConsumption");

	UFGPowerInfoComponent_GetTargetConsumption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.GetRegulatedDynamicProduction
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGPowerInfoComponent::GetRegulatedDynamicProduction()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.GetRegulatedDynamicProduction");

	UFGPowerInfoComponent_GetRegulatedDynamicProduction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.GetPowerCircuit
// ()
// Parameters:
// class UFGPowerCircuit*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGPowerCircuit* UFGPowerInfoComponent::GetPowerCircuit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.GetPowerCircuit");

	UFGPowerInfoComponent_GetPowerCircuit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.GetDynamicProductionDemandFactor
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGPowerInfoComponent::GetDynamicProductionDemandFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.GetDynamicProductionDemandFactor");

	UFGPowerInfoComponent_GetDynamicProductionDemandFactor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.GetDynamicProductionCapacity
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGPowerInfoComponent::GetDynamicProductionCapacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.GetDynamicProductionCapacity");

	UFGPowerInfoComponent_GetDynamicProductionCapacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.GetBaseProduction
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGPowerInfoComponent::GetBaseProduction()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.GetBaseProduction");

	UFGPowerInfoComponent_GetBaseProduction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.GetActualConsumption
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGPowerInfoComponent::GetActualConsumption()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.GetActualConsumption");

	UFGPowerInfoComponent_GetActualConsumption_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRadiationInterface.ReceiveRadiation
// ()
// Parameters:
// float                          amount                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageType                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGRadiationInterface::ReceiveRadiation(float amount, float Duration, class UClass* DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRadiationInterface.ReceiveRadiation");

	UFGRadiationInterface_ReceiveRadiation_Params params;
	params.amount = amount;
	params.Duration = Duration;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRadioactivitySubsystem.OnActorSpawned
// ()
// Parameters:
// class AActor*                  SpawnedActor                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGRadioactivitySubsystem::OnActorSpawned(class AActor* SpawnedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRadioactivitySubsystem.OnActorSpawned");

	AFGRadioactivitySubsystem_OnActorSpawned_Params params;
	params.SpawnedActor = SpawnedActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRadioactivitySubsystem.OnActorDestroyed
// ()
// Parameters:
// class AActor*                  DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGRadioactivitySubsystem::OnActorDestroyed(class AActor* DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRadioactivitySubsystem.OnActorDestroyed");

	AFGRadioactivitySubsystem_OnActorDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRadioactivitySubsystem.Get
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGRadioactivitySubsystem* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGRadioactivitySubsystem* AFGRadioactivitySubsystem::Get(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRadioactivitySubsystem.Get");

	AFGRadioactivitySubsystem_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadFunctionLibrary.IsValid
// ()
// Parameters:
// struct FRailroadTrackPosition  Position                       (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGRailroadFunctionLibrary::IsValid(const struct FRailroadTrackPosition& Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadFunctionLibrary.IsValid");

	UFGRailroadFunctionLibrary_IsValid_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadFunctionLibrary.GetWorldLocationAndDirection
// ()
// Parameters:
// struct FRailroadTrackPosition  Position                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector                 out_location                   (Parm, OutParm, IsPlainOldData)
// struct FVector                 out_direction                  (Parm, OutParm, IsPlainOldData)

void UFGRailroadFunctionLibrary::GetWorldLocationAndDirection(const struct FRailroadTrackPosition& Position, struct FVector* out_location, struct FVector* out_direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadFunctionLibrary.GetWorldLocationAndDirection");

	UFGRailroadFunctionLibrary_GetWorldLocationAndDirection_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_location != nullptr)
		*out_location = params.out_location;
	if (out_direction != nullptr)
		*out_direction = params.out_direction;
}


// Function FactoryGame.FGRailroadFunctionLibrary.GetTrack
// ()
// Parameters:
// struct FRailroadTrackPosition  Position                       (ConstParm, Parm, OutParm, ReferenceParm)
// class AFGBuildableRailroadTrack* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGBuildableRailroadTrack* UFGRailroadFunctionLibrary::GetTrack(const struct FRailroadTrackPosition& Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadFunctionLibrary.GetTrack");

	UFGRailroadFunctionLibrary_GetTrack_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadFunctionLibrary.DrawDebugTrackPosition
// ()
// Parameters:
// struct FRailroadTrackPosition  Position                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FColor                  Color                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           isPersistentLines              (Parm, ZeroConstructor, IsPlainOldData)

void UFGRailroadFunctionLibrary::DrawDebugTrackPosition(const struct FRailroadTrackPosition& Position, const struct FColor& Color, bool isPersistentLines)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadFunctionLibrary.DrawDebugTrackPosition");

	UFGRailroadFunctionLibrary_DrawDebugTrackPosition_Params params;
	params.Position = Position;
	params.Color = Color;
	params.isPersistentLines = isPersistentLines;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadFunctionLibrary.DrawDebugRailroadPathResult
// ()
// Parameters:
// struct FRailroadTrackPosition  Start                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FRailroadPathFindingResult Result                         (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           isPersistentLines              (Parm, ZeroConstructor, IsPlainOldData)

void UFGRailroadFunctionLibrary::DrawDebugRailroadPathResult(const struct FRailroadTrackPosition& Start, const struct FRailroadPathFindingResult& Result, bool isPersistentLines)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadFunctionLibrary.DrawDebugRailroadPathResult");

	UFGRailroadFunctionLibrary_DrawDebugRailroadPathResult_Params params;
	params.Start = Start;
	params.Result = Result;
	params.isPersistentLines = isPersistentLines;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadInterface.UnregisteredFromTrack
// ()

void UFGRailroadInterface::UnregisteredFromTrack()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadInterface.UnregisteredFromTrack");

	UFGRailroadInterface_UnregisteredFromTrack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadInterface.RegisteredOnTrack
// ()
// Parameters:
// struct FRailroadTrackPosition  Position                       (ConstParm, Parm, OutParm, ReferenceParm)

void UFGRailroadInterface::RegisteredOnTrack(const struct FRailroadTrackPosition& Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadInterface.RegisteredOnTrack");

	UFGRailroadInterface_RegisteredOnTrack_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadInterface.GetTrackPosition
// ()
// Parameters:
// struct FRailroadTrackPosition  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FRailroadTrackPosition UFGRailroadInterface::GetTrackPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadInterface.GetTrackPosition");

	UFGRailroadInterface_GetTrackPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadSubsystem.GetTrainStops
// ()
// Parameters:
// TArray<class AFGBuildableRailroadStation*> out_stops                      (Parm, OutParm, ZeroConstructor)

void AFGRailroadSubsystem::GetTrainStops(TArray<class AFGBuildableRailroadStation*>* out_stops)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadSubsystem.GetTrainStops");

	AFGRailroadSubsystem_GetTrainStops_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_stops != nullptr)
		*out_stops = params.out_stops;
}


// Function FactoryGame.FGRailroadSubsystem.GetTrainOrder
// ()
// Parameters:
// int                            TrainID                        (Parm, ZeroConstructor, IsPlainOldData)
// class AFGRailroadVehicle*      out_firstVehicle               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AFGRailroadVehicle*      out_lastVehicle                (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AFGRailroadSubsystem::GetTrainOrder(int TrainID, class AFGRailroadVehicle** out_firstVehicle, class AFGRailroadVehicle** out_lastVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadSubsystem.GetTrainOrder");

	AFGRailroadSubsystem_GetTrainOrder_Params params;
	params.TrainID = TrainID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_firstVehicle != nullptr)
		*out_firstVehicle = params.out_firstVehicle;
	if (out_lastVehicle != nullptr)
		*out_lastVehicle = params.out_lastVehicle;
}


// Function FactoryGame.FGRailroadSubsystem.GetTrainData
// ()
// Parameters:
// int                            TrainID                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FTrainData              out_trainData                  (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGRailroadSubsystem::GetTrainData(int TrainID, struct FTrainData* out_trainData)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadSubsystem.GetTrainData");

	AFGRailroadSubsystem_GetTrainData_Params params;
	params.TrainID = TrainID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_trainData != nullptr)
		*out_trainData = params.out_trainData;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadSubsystem.Get
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGRailroadSubsystem*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGRailroadSubsystem* AFGRailroadSubsystem::Get(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadSubsystem.Get");

	AFGRailroadSubsystem_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadSubsystem.FindTimeTable
// ()
// Parameters:
// int                            TrainID                        (Parm, ZeroConstructor, IsPlainOldData)
// class UFGRailroadTimeTable*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGRailroadTimeTable* AFGRailroadSubsystem::FindTimeTable(int TrainID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadSubsystem.FindTimeTable");

	AFGRailroadSubsystem_FindTimeTable_Params params;
	params.TrainID = TrainID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadSubsystem.FindPathSync
// ()
// Parameters:
// class AFGLocomotive*           Locomotive                     (Parm, ZeroConstructor, IsPlainOldData)
// class AFGBuildableRailroadStation* Stop                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FRailroadPathFindingResult ReturnValue                    (Parm, OutParm, ReturnParm)

struct FRailroadPathFindingResult AFGRailroadSubsystem::FindPathSync(class AFGLocomotive* Locomotive, class AFGBuildableRailroadStation* Stop)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadSubsystem.FindPathSync");

	AFGRailroadSubsystem_FindPathSync_Params params;
	params.Locomotive = Locomotive;
	params.Stop = Stop;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadSubsystem.FindOrAddTimeTable
// ()
// Parameters:
// int                            TrainID                        (Parm, ZeroConstructor, IsPlainOldData)
// class UFGRailroadTimeTable*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGRailroadTimeTable* AFGRailroadSubsystem::FindOrAddTimeTable(int TrainID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadSubsystem.FindOrAddTimeTable");

	AFGRailroadSubsystem_FindOrAddTimeTable_Params params;
	params.TrainID = TrainID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTimeTable.SetStopDuration
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGRailroadTimeTable::SetStopDuration(int Index, float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.SetStopDuration");

	UFGRailroadTimeTable_SetStopDuration_Params params;
	params.Index = Index;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadTimeTable.SetCurrentStop
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGRailroadTimeTable::SetCurrentStop(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.SetCurrentStop");

	UFGRailroadTimeTable_SetCurrentStop_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadTimeTable.RemoveStop
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGRailroadTimeTable::RemoveStop(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.RemoveStop");

	UFGRailroadTimeTable_RemoveStop_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadTimeTable.IsValidStop
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGRailroadTimeTable::IsValidStop(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.IsValidStop");

	UFGRailroadTimeTable_IsValidStop_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTimeTable.GetStops
// ()
// Parameters:
// TArray<struct FTimeTableStop>  out_stops                      (Parm, OutParm, ZeroConstructor)

void UFGRailroadTimeTable::GetStops(TArray<struct FTimeTableStop>* out_stops)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.GetStops");

	UFGRailroadTimeTable_GetStops_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_stops != nullptr)
		*out_stops = params.out_stops;
}


// Function FactoryGame.FGRailroadTimeTable.GetStop
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FTimeTableStop          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FTimeTableStop UFGRailroadTimeTable::GetStop(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.GetStop");

	UFGRailroadTimeTable_GetStop_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTimeTable.GetNumStops
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGRailroadTimeTable::GetNumStops()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.GetNumStops");

	UFGRailroadTimeTable_GetNumStops_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTimeTable.GetCurrentStop
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGRailroadTimeTable::GetCurrentStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.GetCurrentStop");

	UFGRailroadTimeTable_GetCurrentStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTimeTable.AddStop
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FTimeTableStop          Stop                           (ConstParm, Parm, OutParm, ReferenceParm)

void UFGRailroadTimeTable::AddStop(int Index, const struct FTimeTableStop& Stop)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.AddStop");

	UFGRailroadTimeTable_AddStop_Params params;
	params.Index = Index;
	params.Stop = Stop;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadTrackConnectionComponent.SetSwitchPosition
// ()
// Parameters:
// int                            Position                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGRailroadTrackConnectionComponent::SetSwitchPosition(int Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTrackConnectionComponent.SetSwitchPosition");

	UFGRailroadTrackConnectionComponent_SetSwitchPosition_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadTrackConnectionComponent.GetSwitchPosition
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGRailroadTrackConnectionComponent::GetSwitchPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTrackConnectionComponent.GetSwitchPosition");

	UFGRailroadTrackConnectionComponent_GetSwitchPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTrackConnectionComponent.GetNumSwitchPositions
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGRailroadTrackConnectionComponent::GetNumSwitchPositions()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTrackConnectionComponent.GetNumSwitchPositions");

	UFGRailroadTrackConnectionComponent_GetNumSwitchPositions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTrackConnectionComponent.GetConnection
// ()
// Parameters:
// int                            Position                       (Parm, ZeroConstructor, IsPlainOldData)
// class UFGRailroadTrackConnectionComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGRailroadTrackConnectionComponent* UFGRailroadTrackConnectionComponent::GetConnection(int Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTrackConnectionComponent.GetConnection");

	UFGRailroadTrackConnectionComponent_GetConnection_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTrackHologram.OnRep_SplineData
// ()

void AFGRailroadTrackHologram::OnRep_SplineData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTrackHologram.OnRep_SplineData");

	AFGRailroadTrackHologram_OnRep_SplineData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.UpdateRTPCs
// ()

void UFGRailroadVehicleSoundComponent::UpdateRTPCs()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.UpdateRTPCs");

	UFGRailroadVehicleSoundComponent_UpdateRTPCs_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.OnThrottleReleased
// ()

void UFGRailroadVehicleSoundComponent::OnThrottleReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.OnThrottleReleased");

	UFGRailroadVehicleSoundComponent_OnThrottleReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.OnThrottleApplied
// ()

void UFGRailroadVehicleSoundComponent::OnThrottleApplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.OnThrottleApplied");

	UFGRailroadVehicleSoundComponent_OnThrottleApplied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.OnStoppedMoving
// ()

void UFGRailroadVehicleSoundComponent::OnStoppedMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.OnStoppedMoving");

	UFGRailroadVehicleSoundComponent_OnStoppedMoving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.OnStartedMoving
// ()

void UFGRailroadVehicleSoundComponent::OnStartedMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.OnStartedMoving");

	UFGRailroadVehicleSoundComponent_OnStartedMoving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.OnDynamicBrakesReleased
// ()

void UFGRailroadVehicleSoundComponent::OnDynamicBrakesReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.OnDynamicBrakesReleased");

	UFGRailroadVehicleSoundComponent_OnDynamicBrakesReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.OnDynamicBrakesApplied
// ()

void UFGRailroadVehicleSoundComponent::OnDynamicBrakesApplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.OnDynamicBrakesApplied");

	UFGRailroadVehicleSoundComponent_OnDynamicBrakesApplied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.OnAirBrakesReleased
// ()

void UFGRailroadVehicleSoundComponent::OnAirBrakesReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.OnAirBrakesReleased");

	UFGRailroadVehicleSoundComponent_OnAirBrakesReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.OnAirBrakesApplied
// ()

void UFGRailroadVehicleSoundComponent::OnAirBrakesApplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.OnAirBrakesApplied");

	UFGRailroadVehicleSoundComponent_OnAirBrakesApplied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRecipe.SortByName
// ()
// Parameters:
// TArray<class UClass*>          recipes                        (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGRecipe::SortByName(TArray<class UClass*>* recipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipe.SortByName");

	UFGRecipe_SortByName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (recipes != nullptr)
		*recipes = params.recipes;
}


// Function FactoryGame.FGRecipe.GetRewardedRecipes
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UFGRecipe::GetRewardedRecipes(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipe.GetRewardedRecipes");

	UFGRecipe_GetRewardedRecipes_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipe.GetRecipeName
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGRecipe::GetRecipeName(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipe.GetRecipeName");

	UFGRecipe_GetRecipeName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipe.GetProducts
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           allowChildRecipes              (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> UFGRecipe::GetProducts(class UClass* inClass, bool allowChildRecipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipe.GetProducts");

	UFGRecipe_GetProducts_Params params;
	params.inClass = inClass;
	params.allowChildRecipes = allowChildRecipes;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipe.GetProducedIn
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UFGRecipe::GetProducedIn(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipe.GetProducedIn");

	UFGRecipe_GetProducedIn_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipe.GetManufacturingDuration
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRecipe::GetManufacturingDuration(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipe.GetManufacturingDuration");

	UFGRecipe_GetManufacturingDuration_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipe.GetIngredients
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> UFGRecipe::GetIngredients(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipe.GetIngredients");

	UFGRecipe_GetIngredients_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipeManager.IsRecipeAvailable
// ()
// Parameters:
// class UClass*                  recipeClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGRecipeManager::IsRecipeAvailable(class UClass* recipeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeManager.IsRecipeAvailable");

	AFGRecipeManager_IsRecipeAvailable_Params params;
	params.recipeClass = recipeClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipeManager.GetAvailableRecipesForProducerAndPhase
// ()
// Parameters:
// class UClass*                  forProducer                    (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EGamePhase>        gamePhase                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_recipes                    (Parm, OutParm, ZeroConstructor)

void AFGRecipeManager::GetAvailableRecipesForProducerAndPhase(class UClass* forProducer, TEnumAsByte<EGamePhase> gamePhase, TArray<class UClass*>* out_recipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeManager.GetAvailableRecipesForProducerAndPhase");

	AFGRecipeManager_GetAvailableRecipesForProducerAndPhase_Params params;
	params.forProducer = forProducer;
	params.gamePhase = gamePhase;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_recipes != nullptr)
		*out_recipes = params.out_recipes;
}


// Function FactoryGame.FGRecipeManager.GetAvailableRecipesForProducer
// ()
// Parameters:
// class UClass*                  forProducer                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_recipes                    (Parm, OutParm, ZeroConstructor)

void AFGRecipeManager::GetAvailableRecipesForProducer(class UClass* forProducer, TArray<class UClass*>* out_recipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeManager.GetAvailableRecipesForProducer");

	AFGRecipeManager_GetAvailableRecipesForProducer_Params params;
	params.forProducer = forProducer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_recipes != nullptr)
		*out_recipes = params.out_recipes;
}


// Function FactoryGame.FGRecipeManager.GetAllAvailableRecipes
// ()
// Parameters:
// TArray<class UClass*>          out_recipes                    (Parm, OutParm, ZeroConstructor)

void AFGRecipeManager::GetAllAvailableRecipes(TArray<class UClass*>* out_recipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeManager.GetAllAvailableRecipes");

	AFGRecipeManager_GetAllAvailableRecipes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_recipes != nullptr)
		*out_recipes = params.out_recipes;
}


// Function FactoryGame.FGRecipeManager.Get
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGRecipeManager*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGRecipeManager* AFGRecipeManager::Get(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeManager.Get");

	AFGRecipeManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipeManager.FindRecipesByProduct
// ()
// Parameters:
// class UClass*                  product                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> AFGRecipeManager::FindRecipesByProduct(class UClass* product)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeManager.FindRecipesByProduct");

	AFGRecipeManager_FindRecipesByProduct_Params params;
	params.product = product;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipeManager.FindRecipesByIngredient
// ()
// Parameters:
// class UClass*                  ingredient                     (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> AFGRecipeManager::FindRecipesByIngredient(class UClass* ingredient)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeManager.FindRecipesByIngredient");

	AFGRecipeManager_FindRecipesByIngredient_Params params;
	params.ingredient = ingredient;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipeShortcut.SetRecipe
// ()
// Parameters:
// class UClass*                  Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGRecipeShortcut::SetRecipe(class UClass* Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeShortcut.SetRecipe");

	UFGRecipeShortcut_SetRecipe_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRecipeShortcut.OnRep_Recipe
// ()

void UFGRecipeShortcut::OnRep_Recipe()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeShortcut.OnRep_Recipe");

	UFGRecipeShortcut_OnRep_Recipe_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRecipeShortcut.GetRecipe
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGRecipeShortcut::GetRecipe()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeShortcut.GetRecipe");

	UFGRecipeShortcut_GetRecipe_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRemoteCallObject.GetGameState
// ()
// Parameters:
// class AFGGameState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGGameState* UFGRemoteCallObject::GetGameState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRemoteCallObject.GetGameState");

	UFGRemoteCallObject_GetGameState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRenderTargetStage.UpdateRenderedComponents
// ()

void AFGRenderTargetStage::UpdateRenderedComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRenderTargetStage.UpdateRenderedComponents");

	AFGRenderTargetStage_UpdateRenderedComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRenderTargetStage.SetView
// ()
// Parameters:
// struct FItemView               View                           (ConstParm, Parm, OutParm, ReferenceParm)

void AFGRenderTargetStage::SetView(const struct FItemView& View)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRenderTargetStage.SetView");

	AFGRenderTargetStage_SetView_Params params;
	params.View = View;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRenderTargetStage.SetPreviewDistance
// ()
// Parameters:
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGRenderTargetStage::SetPreviewDistance(float Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRenderTargetStage.SetPreviewDistance");

	AFGRenderTargetStage_SetPreviewDistance_Params params;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRenderTargetStage.GetStage
// ()
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USceneComponent* AFGRenderTargetStage::GetStage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRenderTargetStage.GetStage");

	AFGRenderTargetStage_GetStage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRenderTargetStage.GetRenderTarget
// ()
// Parameters:
// class UTextureRenderTarget2D*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTextureRenderTarget2D* AFGRenderTargetStage::GetRenderTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRenderTargetStage.GetRenderTarget");

	AFGRenderTargetStage_GetRenderTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRenderTargetStage.EndCapture
// ()

void AFGRenderTargetStage::EndCapture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRenderTargetStage.EndCapture");

	AFGRenderTargetStage_EndCapture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRenderTargetStage.CaptureOnce
// ()

void AFGRenderTargetStage::CaptureOnce()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRenderTargetStage.CaptureOnce");

	AFGRenderTargetStage_CaptureOnce_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRenderTargetStage.BeginCapture
// ()

void AFGRenderTargetStage::BeginCapture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRenderTargetStage.BeginCapture");

	AFGRenderTargetStage_BeginCapture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchMachine.SetResearchRecipe
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGResearchMachine::SetResearchRecipe(class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.SetResearchRecipe");

	UFGResearchMachine_SetResearchRecipe_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchMachine.SetResearchMeshCurveScale
// ()
// Parameters:
// class UCurveFloat*             curveScale                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGResearchMachine::SetResearchMeshCurveScale(class UCurveFloat* curveScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.SetResearchMeshCurveScale");

	UFGResearchMachine_SetResearchMeshCurveScale_Params params;
	params.curveScale = curveScale;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchMachine.SetResearchMeshComponent
// ()
// Parameters:
// class UStaticMeshComponent*    StaticMeshComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGResearchMachine::SetResearchMeshComponent(class UStaticMeshComponent* StaticMeshComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.SetResearchMeshComponent");

	UFGResearchMachine_SetResearchMeshComponent_Params params;
	params.StaticMeshComponent = StaticMeshComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchMachine.SetMachineUser
// ()
// Parameters:
// class AFGCharacterPlayer*      Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGResearchMachine::SetMachineUser(class AFGCharacterPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.SetMachineUser");

	UFGResearchMachine_SetMachineUser_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchMachine.OnResearchStarted
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGResearchMachine::OnResearchStarted(class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.OnResearchStarted");

	UFGResearchMachine_OnResearchStarted_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchMachine.OnResearchConcluded
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGResearchMachine::OnResearchConcluded(class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.OnResearchConcluded");

	UFGResearchMachine_OnResearchConcluded_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchMachine.OnRep_ResearchMesh
// ()

void UFGResearchMachine::OnRep_ResearchMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.OnRep_ResearchMesh");

	UFGResearchMachine_OnRep_ResearchMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchMachine.IsResearchBeingConducted
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGResearchMachine::IsResearchBeingConducted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.IsResearchBeingConducted");

	UFGResearchMachine_IsResearchBeingConducted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchMachine.GetResearchMeshComponent
// ()
// Parameters:
// class UStaticMeshComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UStaticMeshComponent* UFGResearchMachine::GetResearchMeshComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.GetResearchMeshComponent");

	UFGResearchMachine_GetResearchMeshComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchMachine.GetMachineUser
// ()
// Parameters:
// class AFGCharacterPlayer*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterPlayer* UFGResearchMachine::GetMachineUser()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.GetMachineUser");

	UFGResearchMachine_GetMachineUser_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.UnlockResearchWithItem
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGResearchManager::UnlockResearchWithItem(class UClass* ItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.UnlockResearchWithItem");

	AFGResearchManager_UnlockResearchWithItem_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchManager.SetSelectedRewardIndexByRecipe
// ()
// Parameters:
// class UClass*                  CompletedResearch              (Parm, ZeroConstructor, IsPlainOldData)
// int                            selectedIndex                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGResearchManager::SetSelectedRewardIndexByRecipe(class UClass* CompletedResearch, int selectedIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.SetSelectedRewardIndexByRecipe");

	AFGResearchManager_SetSelectedRewardIndexByRecipe_Params params;
	params.CompletedResearch = CompletedResearch;
	params.selectedIndex = selectedIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchManager.PayOffOnResearch
// ()
// Parameters:
// struct FItemAmount             payOff                         (Parm)
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGResearchManager::PayOffOnResearch(const struct FItemAmount& payOff, class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.PayOffOnResearch");

	AFGResearchManager_PayOffOnResearch_Params params;
	params.payOff = payOff;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.PayOffFromInventory
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)
// class UFGInventoryComponent*   inventory                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            inventorySlotIndex             (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGResearchManager::PayOffFromInventory(class UClass* researchRecipe, class UFGInventoryComponent* inventory, int inventorySlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.PayOffFromInventory");

	AFGResearchManager_PayOffFromInventory_Params params;
	params.researchRecipe = researchRecipe;
	params.inventory = inventory;
	params.inventorySlotIndex = inventorySlotIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.OnResearchTimerComplete
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGResearchManager::OnResearchTimerComplete(class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.OnResearchTimerComplete");

	AFGResearchManager_OnResearchTimerComplete_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchManager.IsResearchRecipeAccessible
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::IsResearchRecipeAccessible(class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.IsResearchRecipeAccessible");

	AFGResearchManager_IsResearchRecipeAccessible_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.IsResearchComplete
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::IsResearchComplete(class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.IsResearchComplete");

	AFGResearchManager_IsResearchComplete_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.IsResearchBeingConducted
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::IsResearchBeingConducted(class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.IsResearchBeingConducted");

	AFGResearchManager_IsResearchBeingConducted_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.IsResearchAccessibleAndPaidOff
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::IsResearchAccessibleAndPaidOff(class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.IsResearchAccessibleAndPaidOff");

	AFGResearchManager_IsResearchAccessibleAndPaidOff_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.IsCompletedResearchResultSelectable
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::IsCompletedResearchResultSelectable(class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.IsCompletedResearchResultSelectable");

	AFGResearchManager_IsCompletedResearchResultSelectable_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.IsAnyResearchBeingConducted
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::IsAnyResearchBeingConducted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.IsAnyResearchBeingConducted");

	AFGResearchManager_IsAnyResearchBeingConducted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.InitiateResearch
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::InitiateResearch(class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.InitiateResearch");

	AFGResearchManager_InitiateResearch_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.GiveAccessToResearch
// ()
// Parameters:
// class UClass*                  researchRecipeClass            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           accessedViaCheats              (Parm, ZeroConstructor, IsPlainOldData)

void AFGResearchManager::GiveAccessToResearch(class UClass* researchRecipeClass, bool accessedViaCheats)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GiveAccessToResearch");

	AFGResearchManager_GiveAccessToResearch_Params params;
	params.researchRecipeClass = researchRecipeClass;
	params.accessedViaCheats = accessedViaCheats;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchManager.GetStructurePoints
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGResearchManager::GetStructurePoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetStructurePoints");

	AFGResearchManager_GetStructurePoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.GetRewardsFromCompletedResearch
// ()
// Parameters:
// struct FCompletedResearch      CompletedResearch              (Parm)
// TArray<struct FResearchRecipeReward> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FResearchRecipeReward> AFGResearchManager::GetRewardsFromCompletedResearch(const struct FCompletedResearch& CompletedResearch)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetRewardsFromCompletedResearch");

	AFGResearchManager_GetRewardsFromCompletedResearch_Params params;
	params.CompletedResearch = CompletedResearch;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.GetResearchDuration
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGResearchManager::GetResearchDuration(class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetResearchDuration");

	AFGResearchManager_GetResearchDuration_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.GetResearchBeingConducted
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGResearchManager::GetResearchBeingConducted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetResearchBeingConducted");

	AFGResearchManager_GetResearchBeingConducted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.GetPayOffBalanceForResearch
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     out_cost                       (Parm, OutParm, ZeroConstructor)

void AFGResearchManager::GetPayOffBalanceForResearch(class UClass* researchRecipe, TArray<struct FItemAmount>* out_cost)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetPayOffBalanceForResearch");

	AFGResearchManager_GetPayOffBalanceForResearch_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_cost != nullptr)
		*out_cost = params.out_cost;
}


// Function FactoryGame.FGResearchManager.GetOngoingResearchTimeLeft
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGResearchManager::GetOngoingResearchTimeLeft(class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetOngoingResearchTimeLeft");

	AFGResearchManager_GetOngoingResearchTimeLeft_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.GetDecorPoints
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGResearchManager::GetDecorPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetDecorPoints");

	AFGResearchManager_GetDecorPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.GetCompletedResearchRewardByRecipe
// ()
// Parameters:
// class UClass*                  CompletedResearch              (Parm, ZeroConstructor, IsPlainOldData)
// struct FCompletedResearch      ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm)

struct FCompletedResearch AFGResearchManager::GetCompletedResearchRewardByRecipe(class UClass* CompletedResearch)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetCompletedResearchRewardByRecipe");

	AFGResearchManager_GetCompletedResearchRewardByRecipe_Params params;
	params.CompletedResearch = CompletedResearch;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.GetAllResearchRecipes
// ()
// Parameters:
// TArray<class UClass*>          out_ResearchRecipes            (Parm, OutParm, ZeroConstructor)

void AFGResearchManager::GetAllResearchRecipes(TArray<class UClass*>* out_ResearchRecipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetAllResearchRecipes");

	AFGResearchManager_GetAllResearchRecipes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_ResearchRecipes != nullptr)
		*out_ResearchRecipes = params.out_ResearchRecipes;
}


// Function FactoryGame.FGResearchManager.GetAllCompletedAndClaimedResearch
// ()
// Parameters:
// TArray<class UClass*>          out_ResearchRecipes            (Parm, OutParm, ZeroConstructor)

void AFGResearchManager::GetAllCompletedAndClaimedResearch(TArray<class UClass*>* out_ResearchRecipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetAllCompletedAndClaimedResearch");

	AFGResearchManager_GetAllCompletedAndClaimedResearch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_ResearchRecipes != nullptr)
		*out_ResearchRecipes = params.out_ResearchRecipes;
}


// Function FactoryGame.FGResearchManager.GetAllAccessibleResearch
// ()
// Parameters:
// TArray<class UClass*>          out_ResearchRecipes            (Parm, OutParm, ZeroConstructor)

void AFGResearchManager::GetAllAccessibleResearch(TArray<class UClass*>* out_ResearchRecipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetAllAccessibleResearch");

	AFGResearchManager_GetAllAccessibleResearch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_ResearchRecipes != nullptr)
		*out_ResearchRecipes = params.out_ResearchRecipes;
}


// Function FactoryGame.FGResearchManager.Get
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGResearchManager*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGResearchManager* AFGResearchManager::Get(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.Get");

	AFGResearchManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.ContainsAnyCompletedButUnclaimedResearch
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::ContainsAnyCompletedButUnclaimedResearch()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.ContainsAnyCompletedButUnclaimedResearch");

	AFGResearchManager_ContainsAnyCompletedButUnclaimedResearch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.ConsumeStructurePoints
// ()
// Parameters:
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGResearchManager::ConsumeStructurePoints(int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.ConsumeStructurePoints");

	AFGResearchManager_ConsumeStructurePoints_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.ConsumeDecorPoints
// ()
// Parameters:
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGResearchManager::ConsumeDecorPoints(int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.ConsumeDecorPoints");

	AFGResearchManager_ConsumeDecorPoints_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.ClaimResearchResults
// ()
// Parameters:
// class AFGCharacterPlayer*      instigatorPlayer               (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  CompletedResearch              (Parm, ZeroConstructor, IsPlainOldData)
// int                            selectedRewardIndex            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::ClaimResearchResults(class AFGCharacterPlayer* instigatorPlayer, class UClass* CompletedResearch, int selectedRewardIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.ClaimResearchResults");

	AFGResearchManager_ClaimResearchResults_Params params;
	params.instigatorPlayer = instigatorPlayer;
	params.CompletedResearch = CompletedResearch;
	params.selectedRewardIndex = selectedRewardIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.CanResearchRewardBeClaimed
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::CanResearchRewardBeClaimed(class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.CanResearchRewardBeClaimed");

	AFGResearchManager_CanResearchRewardBeClaimed_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.CanResearchBeInitiated
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::CanResearchBeInitiated(class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.CanResearchBeInitiated");

	AFGResearchManager_CanResearchBeInitiated_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.CanConsumeStructurePoints
// ()
// Parameters:
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::CanConsumeStructurePoints(int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.CanConsumeStructurePoints");

	AFGResearchManager_CanConsumeStructurePoints_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.CanConsumeDecorPoints
// ()
// Parameters:
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::CanConsumeDecorPoints(int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.CanConsumeDecorPoints");

	AFGResearchManager_CanConsumeDecorPoints_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.AddStructurePoints
// ()
// Parameters:
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGResearchManager::AddStructurePoints(int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.AddStructurePoints");

	AFGResearchManager_AddStructurePoints_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchManager.AddDecorPoints
// ()
// Parameters:
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGResearchManager::AddDecorPoints(int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.AddDecorPoints");

	AFGResearchManager_AddDecorPoints_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchRecipe.IsValidResearchRecipeReward
// ()
// Parameters:
// struct FResearchRecipeReward   recipeReward                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGResearchRecipe::IsValidResearchRecipeReward(const struct FResearchRecipeReward& recipeReward)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchRecipe.IsValidResearchRecipeReward");

	UFGResearchRecipe_IsValidResearchRecipeReward_Params params;
	params.recipeReward = recipeReward;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchRecipe.IsResearchRepeatable
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGResearchRecipe::IsResearchRepeatable(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchRecipe.IsResearchRepeatable");

	UFGResearchRecipe_IsResearchRepeatable_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchRecipe.GetResearcResults
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FResearchRecipeReward   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FResearchRecipeReward UFGResearchRecipe::GetResearcResults(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchRecipe.GetResearcResults");

	UFGResearchRecipe_GetResearcResults_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchRecipe.GetResearchTriggerItems
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UFGResearchRecipe::GetResearchTriggerItems(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchRecipe.GetResearchTriggerItems");

	UFGResearchRecipe_GetResearchTriggerItems_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchRecipe.GetResearchTime
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGResearchRecipe::GetResearchTime(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchRecipe.GetResearchTime");

	UFGResearchRecipe_GetResearchTime_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.ToggleResourcePickUI
// ()
// Parameters:
// class AFGCharacterPlayer*      Player                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGResourceNode::ToggleResourcePickUI(class AFGCharacterPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.ToggleResourcePickUI");

	AFGResourceNode_ToggleResourcePickUI_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceNode.SetIsOccupied
// ()
// Parameters:
// bool                           occupied                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGResourceNode::SetIsOccupied(bool occupied)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.SetIsOccupied");

	AFGResourceNode_SetIsOccupied_Params params;
	params.occupied = occupied;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceNode.OnRep_IsOccupied
// ()

void AFGResourceNode::OnRep_IsOccupied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.OnRep_IsOccupied");

	AFGResourceNode_OnRep_IsOccupied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceNode.OnIsOccupiedChanged
// ()
// Parameters:
// bool                           newIsOccupied                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGResourceNode::OnIsOccupiedChanged(bool newIsOccupied)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.OnIsOccupiedChanged");

	AFGResourceNode_OnIsOccupiedChanged_Params params;
	params.newIsOccupied = newIsOccupied;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceNode.IsOccupied
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResourceNode::IsOccupied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.IsOccupied");

	AFGResourceNode_IsOccupied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.InitResource
// ()
// Parameters:
// class UClass*                  ResourceClass                  (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EResourceAmount>   amount                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EResourcePurity>   Purity                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGResourceNode::InitResource(class UClass* ResourceClass, TEnumAsByte<EResourceAmount> amount, TEnumAsByte<EResourcePurity> Purity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.InitResource");

	AFGResourceNode_InitResource_Params params;
	params.ResourceClass = ResourceClass;
	params.amount = amount;
	params.Purity = Purity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceNode.HasAnyResources
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResourceNode::HasAnyResources()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.HasAnyResources");

	AFGResourceNode_HasAnyResources_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.GetResourceName
// ()
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AFGResourceNode::GetResourceName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.GetResourceName");

	AFGResourceNode_GetResourceName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.GetResourceClass
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGResourceNode::GetResourceClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.GetResourceClass");

	AFGResourceNode_GetResourceClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.GetResourceAmount
// ()
// Parameters:
// TEnumAsByte<EResourceAmount>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EResourceAmount> AFGResourceNode::GetResourceAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.GetResourceAmount");

	AFGResourceNode_GetResourceAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.GetResoucesLeftText
// ()
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AFGResourceNode::GetResoucesLeftText()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.GetResoucesLeftText");

	AFGResourceNode_GetResoucesLeftText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.GetResoucePurityText
// ()
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AFGResourceNode::GetResoucePurityText()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.GetResoucePurityText");

	AFGResourceNode_GetResoucePurityText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.GetResoucePurity
// ()
// Parameters:
// TEnumAsByte<EResourcePurity>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EResourcePurity> AFGResourceNode::GetResoucePurity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.GetResoucePurity");

	AFGResourceNode_GetResoucePurity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.GetIsLonerNode
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResourceNode::GetIsLonerNode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.GetIsLonerNode");

	AFGResourceNode_GetIsLonerNode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.GetExtractMultiplier
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGResourceNode::GetExtractMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.GetExtractMultiplier");

	AFGResourceNode_GetExtractMultiplier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.GetExtractionSpeedMultiplier
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGResourceNode::GetExtractionSpeedMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.GetExtractionSpeedMultiplier");

	AFGResourceNode_GetExtractionSpeedMultiplier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.ExtractResourceAndGiveToPlayer
// ()
// Parameters:
// class AFGCharacterPlayer*      toPlayer                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            amount                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGResourceNode::ExtractResourceAndGiveToPlayer(class AFGCharacterPlayer* toPlayer, int amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.ExtractResourceAndGiveToPlayer");

	AFGResourceNode_ExtractResourceAndGiveToPlayer_Params params;
	params.toPlayer = toPlayer;
	params.amount = amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceNode.ClearWidget
// ()

void AFGResourceNode::ClearWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.ClearWidget");

	AFGResourceNode_ClearWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceNode.CanPlaceResourceExtractor
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResourceNode::CanPlaceResourceExtractor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.CanPlaceResourceExtractor");

	AFGResourceNode_CanPlaceResourceExtractor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDeposit.PlayDepletedEffect
// ()
// Parameters:
// class UClass*                  Descriptor                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGResourceDeposit::PlayDepletedEffect(class UClass* Descriptor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDeposit.PlayDepletedEffect");

	AFGResourceDeposit_PlayDepletedEffect_Params params;
	params.Descriptor = Descriptor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceDeposit.OnRep_ResourceDepositEmptied
// ()

void AFGResourceDeposit::OnRep_ResourceDepositEmptied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDeposit.OnRep_ResourceDepositEmptied");

	AFGResourceDeposit_OnRep_ResourceDepositEmptied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceDeposit.IsDepositEmpty
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResourceDeposit::IsDepositEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDeposit.IsDepositEmpty");

	AFGResourceDeposit_IsDepositEmpty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDeposit.GetMineAmount
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGResourceDeposit::GetMineAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDeposit.GetMineAmount");

	AFGResourceDeposit_GetMineAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetPingColor
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor UFGResourceDescriptor::GetPingColor(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetPingColor");

	UFGResourceDescriptor_GetPingColor_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetMeshOverrideMaterial
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstance*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstance* UFGResourceDescriptor::GetMeshOverrideMaterial(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetMeshOverrideMaterial");

	UFGResourceDescriptor_GetMeshOverrideMaterial_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetManualMiningParticle
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* UFGResourceDescriptor::GetManualMiningParticle(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetManualMiningParticle");

	UFGResourceDescriptor_GetManualMiningParticle_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetManualMiningAudioName
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UFGResourceDescriptor::GetManualMiningAudioName(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetManualMiningAudioName");

	UFGResourceDescriptor_GetManualMiningAudioName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetGroundMesh
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* UFGResourceDescriptor::GetGroundMesh(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetGroundMesh");

	UFGResourceDescriptor_GetGroundMesh_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetFactoryMiningParticle
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* UFGResourceDescriptor::GetFactoryMiningParticle(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetFactoryMiningParticle");

	UFGResourceDescriptor_GetFactoryMiningParticle_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetDestroyedParticle
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* UFGResourceDescriptor::GetDestroyedParticle(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetDestroyedParticle");

	UFGResourceDescriptor_GetDestroyedParticle_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetDepositMesh
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* UFGResourceDescriptor::GetDepositMesh(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetDepositMesh");

	UFGResourceDescriptor_GetDepositMesh_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetDepositMaterial
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstance*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstance* UFGResourceDescriptor::GetDepositMaterial(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetDepositMaterial");

	UFGResourceDescriptor_GetDepositMaterial_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetDecalSize
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGResourceDescriptor::GetDecalSize(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetDecalSize");

	UFGResourceDescriptor_GetDecalSize_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetDecalMaterial
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterial*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterial* UFGResourceDescriptor::GetDecalMaterial(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetDecalMaterial");

	UFGResourceDescriptor_GetDecalMaterial_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetCompasTexture
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFGResourceDescriptor::GetCompasTexture(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetCompasTexture");

	UFGResourceDescriptor_GetCompasTexture_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetCollectSpeedMultiplier
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGResourceDescriptor::GetCollectSpeedMultiplier(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetCollectSpeedMultiplier");

	UFGResourceDescriptor_GetCollectSpeedMultiplier_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.CanBeHandMined
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGResourceDescriptor::CanBeHandMined(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.CanBeHandMined");

	UFGResourceDescriptor_CanBeHandMined_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceMiner.StopMining
// ()

void AFGResourceMiner::StopMining()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceMiner.StopMining");

	AFGResourceMiner_StopMining_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceMiner.StartMining
// ()

void AFGResourceMiner::StartMining()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceMiner.StartMining");

	AFGResourceMiner_StartMining_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceMiner.SetResourceNode
// ()
// Parameters:
// class AFGResourceNode*         inNode                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGResourceMiner::SetResourceNode(class AFGResourceNode* inNode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceMiner.SetResourceNode");

	AFGResourceMiner_SetResourceNode_Params params;
	params.inNode = inNode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceMiner.Server_ExtractResources
// ()

void AFGResourceMiner::Server_ExtractResources()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceMiner.Server_ExtractResources");

	AFGResourceMiner_Server_ExtractResources_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceMiner.RemoveEquipment
// ()

void AFGResourceMiner::RemoveEquipment()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceMiner.RemoveEquipment");

	AFGResourceMiner_RemoveEquipment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceMiner.GetResourceNode
// ()
// Parameters:
// class AFGResourceNode*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGResourceNode* AFGResourceMiner::GetResourceNode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceMiner.GetResourceNode");

	AFGResourceMiner_GetResourceNode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceMiner.DoMine
// ()

void AFGResourceMiner::DoMine()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceMiner.DoMine");

	AFGResourceMiner_DoMine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceScanner.ShowResourceDescriptorSelectUI
// ()

void AFGResourceScanner::ShowResourceDescriptorSelectUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceScanner.ShowResourceDescriptorSelectUI");

	AFGResourceScanner_ShowResourceDescriptorSelectUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceScanner.SetResourceDescriptorToScanFor
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGResourceScanner::SetResourceDescriptorToScanFor(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceScanner.SetResourceDescriptorToScanFor");

	AFGResourceScanner_SetResourceDescriptorToScanFor_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceScanner.SetPressingScan
// ()
// Parameters:
// bool                           isPressingScan                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGResourceScanner::SetPressingScan(bool isPressingScan)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceScanner.SetPressingScan");

	AFGResourceScanner_SetPressingScan_Params params;
	params.isPressingScan = isPressingScan;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceScanner.Server_ScanReleased
// ()

void AFGResourceScanner::Server_ScanReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceScanner.Server_ScanReleased");

	AFGResourceScanner_Server_ScanReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceScanner.PlayClusterEffects
// ()
// Parameters:
// TArray<struct FNodeClusterData> clusters                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void AFGResourceScanner::PlayClusterEffects(TArray<struct FNodeClusterData> clusters)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceScanner.PlayClusterEffects");

	AFGResourceScanner_PlayClusterEffects_Params params;
	params.clusters = clusters;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceScanner.GetScannableResources
// ()
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> AFGResourceScanner::GetScannableResources()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceScanner.GetScannableResources");

	AFGResourceScanner_GetScannableResources_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceScanner.GetResourceDescriptorToScanFor
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGResourceScanner::GetResourceDescriptorToScanFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceScanner.GetResourceDescriptorToScanFor");

	AFGResourceScanner_GetResourceDescriptorToScanFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceScanner.CloseResourceDescriptorSelectUI
// ()

void AFGResourceScanner::CloseResourceDescriptorSelectUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceScanner.CloseResourceDescriptorSelectUI");

	AFGResourceScanner_CloseResourceDescriptorSelectUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceSettings.GetResourceDepositDataFromClass
// ()
// Parameters:
// class UClass*                  desiredResourceClass           (Parm, ZeroConstructor, IsPlainOldData)
// int                            out_resourceDepositPackageIdx  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AActor*                  WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FResourceDepositPackage ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FResourceDepositPackage UFGResourceSettings::GetResourceDepositDataFromClass(class UClass* desiredResourceClass, class AActor* WorldContext, int* out_resourceDepositPackageIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceSettings.GetResourceDepositDataFromClass");

	UFGResourceSettings_GetResourceDepositDataFromClass_Params params;
	params.desiredResourceClass = desiredResourceClass;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_resourceDepositPackageIdx != nullptr)
		*out_resourceDepositPackageIdx = params.out_resourceDepositPackageIdx;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceSettings.GetRandomResourceDepositData
// ()
// Parameters:
// int                            out_resourceDepositPackageIdx  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AActor*                  WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FResourceDepositPackage ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FResourceDepositPackage UFGResourceSettings::GetRandomResourceDepositData(class AActor* WorldContext, int* out_resourceDepositPackageIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceSettings.GetRandomResourceDepositData");

	UFGResourceSettings_GetRandomResourceDepositData_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_resourceDepositPackageIdx != nullptr)
		*out_resourceDepositPackageIdx = params.out_resourceDepositPackageIdx;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveInterface.ShouldSave
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSaveInterface::ShouldSave()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveInterface.ShouldSave");

	UFGSaveInterface_ShouldSave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveInterface.PreSaveGame
// ()
// Parameters:
// int                            SaveVersion                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            GameVersion                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGSaveInterface::PreSaveGame(int SaveVersion, int GameVersion)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveInterface.PreSaveGame");

	UFGSaveInterface_PreSaveGame_Params params;
	params.SaveVersion = SaveVersion;
	params.GameVersion = GameVersion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSaveInterface.PreLoadGame
// ()
// Parameters:
// int                            SaveVersion                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            GameVersion                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGSaveInterface::PreLoadGame(int SaveVersion, int GameVersion)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveInterface.PreLoadGame");

	UFGSaveInterface_PreLoadGame_Params params;
	params.SaveVersion = SaveVersion;
	params.GameVersion = GameVersion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSaveInterface.PostSaveGame
// ()
// Parameters:
// int                            SaveVersion                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            GameVersion                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGSaveInterface::PostSaveGame(int SaveVersion, int GameVersion)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveInterface.PostSaveGame");

	UFGSaveInterface_PostSaveGame_Params params;
	params.SaveVersion = SaveVersion;
	params.GameVersion = GameVersion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSaveInterface.PostLoadGame
// ()
// Parameters:
// int                            SaveVersion                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            GameVersion                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGSaveInterface::PostLoadGame(int SaveVersion, int GameVersion)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveInterface.PostLoadGame");

	UFGSaveInterface_PostLoadGame_Params params;
	params.SaveVersion = SaveVersion;
	params.GameVersion = GameVersion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSaveInterface.NeedTransform
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSaveInterface::NeedTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveInterface.NeedTransform");

	UFGSaveInterface_NeedTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveInterface.GatherDependencies
// ()
// Parameters:
// TArray<class UObject*>         out_dependentObjects           (Parm, OutParm, ZeroConstructor)

void UFGSaveInterface::GatherDependencies(TArray<class UObject*>* out_dependentObjects)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveInterface.GatherDependencies");

	UFGSaveInterface_GatherDependencies_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_dependentObjects != nullptr)
		*out_dependentObjects = params.out_dependentObjects;
}


// Function FactoryGame.FGSaveSession.SaveGame
// ()
// Parameters:
// class FString                  Filename                       (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSaveSession::SaveGame(const class FString& Filename)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.SaveGame");

	UFGSaveSession_SaveGame_Params params;
	params.Filename = Filename;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.OnActorDestroyed
// ()
// Parameters:
// class AActor*                  DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGSaveSession::OnActorDestroyed(class AActor* DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.OnActorDestroyed");

	UFGSaveSession_OnActorDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSaveSession.LoadGame
// ()
// Parameters:
// class FString                  saveName                       (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSaveSession::LoadGame(const class FString& saveName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.LoadGame");

	UFGSaveSession_LoadGame_Params params;
	params.saveName = saveName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetVersion
// ()
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGSaveSession::GetVersion(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetVersion");

	UFGSaveSession_GetVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetSessionName
// ()
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGSaveSession::GetSessionName(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetSessionName");

	UFGSaveSession_GetSessionName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetSessionID
// ()
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGSaveSession::GetSessionID(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetSessionID");

	UFGSaveSession_GetSessionID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetSaveSessionVisibility
// ()
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// TEnumAsByte<ESessionVisibility> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ESessionVisibility> UFGSaveSession::GetSaveSessionVisibility(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetSaveSessionVisibility");

	UFGSaveSession_GetSaveSessionVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetSaveSessionName
// ()
// Parameters:
// struct FSessionSaveStruct      session                        (Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGSaveSession::GetSaveSessionName(struct FSessionSaveStruct* session)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetSaveSessionName");

	UFGSaveSession_GetSaveSessionName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (session != nullptr)
		*session = params.session;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetSaveSessionID
// ()
// Parameters:
// struct FSessionSaveStruct      session                        (Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGSaveSession::GetSaveSessionID(struct FSessionSaveStruct* session)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetSaveSessionID");

	UFGSaveSession_GetSaveSessionID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (session != nullptr)
		*session = params.session;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetSaveDateTime
// ()
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// struct FDateTime               ReturnValue                    (Parm, OutParm, ReturnParm)

struct FDateTime UFGSaveSession::GetSaveDateTime(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetSaveDateTime");

	UFGSaveSession_GetSaveDateTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetPlayDurationSeconds
// ()
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGSaveSession::GetPlayDurationSeconds(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetPlayDurationSeconds");

	UFGSaveSession_GetPlayDurationSeconds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetName
// ()
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGSaveSession::GetName(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetName");

	UFGSaveSession_GetName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetMapOptions
// ()
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGSaveSession::GetMapOptions(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetMapOptions");

	UFGSaveSession_GetMapOptions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetMapName
// ()
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGSaveSession::GetMapName(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetMapName");

	UFGSaveSession_GetMapName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetBuildVersion
// ()
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGSaveSession::GetBuildVersion(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetBuildVersion");

	UFGSaveSession_GetBuildVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.Get
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UFGSaveSession*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGSaveSession* UFGSaveSession::Get(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.Get");

	UFGSaveSession_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.Autosave
// ()

void UFGSaveSession::Autosave()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.Autosave");

	UFGSaveSession_Autosave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSaveSystem.IsValidSaveName
// ()
// Parameters:
// class FString                  saveName                       (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSaveSystem::IsValidSaveName(const class FString& saveName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSystem.IsValidSaveName");

	UFGSaveSystem_IsValidSaveName_Params params;
	params.saveName = saveName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSystem.IsSessionNameUsed
// ()
// Parameters:
// class FString                  SessionName                    (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSaveSystem::IsSessionNameUsed(const class FString& SessionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSystem.IsSessionNameUsed");

	UFGSaveSystem_IsSessionNameUsed_Params params;
	params.SessionName = SessionName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSystem.GetSaveExists
// ()
// Parameters:
// class FString                  saveName                       (Parm, ZeroConstructor)
// class FString                  currentSessionName             (Parm, ZeroConstructor)
// ESaveExists                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESaveExists UFGSaveSystem::GetSaveExists(const class FString& saveName, const class FString& currentSessionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSystem.GetSaveExists");

	UFGSaveSystem_GetSaveExists_Params params;
	params.saveName = saveName;
	params.currentSessionName = currentSessionName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSystem.GetAllSavesPerSession
// ()
// Parameters:
// TArray<struct FSessionSaveStruct> out_sessions                   (Parm, OutParm, ZeroConstructor)

void UFGSaveSystem::GetAllSavesPerSession(TArray<struct FSessionSaveStruct>* out_sessions)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSystem.GetAllSavesPerSession");

	UFGSaveSystem_GetAllSavesPerSession_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_sessions != nullptr)
		*out_sessions = params.out_sessions;
}


// Function FactoryGame.FGSaveSystem.Get
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UFGSaveSystem*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGSaveSystem* UFGSaveSystem::Get(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSystem.Get");

	UFGSaveSystem_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSystem.FindSaveGames
// ()
// Parameters:
// TArray<struct FSaveHeader>     out_saveGames                  (Parm, OutParm, ZeroConstructor)
// bool                           newestFirst                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGSaveSystem::FindSaveGames(bool newestFirst, TArray<struct FSaveHeader>* out_saveGames)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSystem.FindSaveGames");

	UFGSaveSystem_FindSaveGames_Params params;
	params.newestFirst = newestFirst;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_saveGames != nullptr)
		*out_saveGames = params.out_saveGames;
}


// Function FactoryGame.FGSaveSystem.DeleteSave
// ()
// Parameters:
// class FString                  saveName                       (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSaveSystem::DeleteSave(const class FString& saveName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSystem.DeleteSave");

	UFGSaveSystem_DeleteSave_Params params;
	params.saveName = saveName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.IsIncludedInBuild
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSchematic::IsIncludedInBuild(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.IsIncludedInBuild");

	UFGSchematic_IsIncludedInBuild_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetUnlocksMap
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSchematic::GetUnlocksMap(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetUnlocksMap");

	UFGSchematic_GetUnlocksMap_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetUnlocksInventorySlots
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSchematic::GetUnlocksInventorySlots(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetUnlocksInventorySlots");

	UFGSchematic_GetUnlocksInventorySlots_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetUnlocksBuildOverclock
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSchematic::GetUnlocksBuildOverclock(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetUnlocksBuildOverclock");

	UFGSchematic_GetUnlocksBuildOverclock_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetUnlocksBuildEfficiencyDisplay
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSchematic::GetUnlocksBuildEfficiencyDisplay(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetUnlocksBuildEfficiencyDisplay");

	UFGSchematic_GetUnlocksBuildEfficiencyDisplay_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetUnlocksArmEquipmentSlots
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSchematic::GetUnlocksArmEquipmentSlots(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetUnlocksArmEquipmentSlots");

	UFGSchematic_GetUnlocksArmEquipmentSlots_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetType
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// ESchematicType                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESchematicType UFGSchematic::GetType(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetType");

	UFGSchematic_GetType_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetTechTier
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGSchematic::GetTechTier(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetTechTier");

	UFGSchematic_GetTechTier_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetShipTravelTimeAfterPurchase
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGSchematic::GetShipTravelTimeAfterPurchase(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetShipTravelTimeAfterPurchase");

	UFGSchematic_GetShipTravelTimeAfterPurchase_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetSchematicDisplayName
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGSchematic::GetSchematicDisplayName(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetSchematicDisplayName");

	UFGSchematic_GetSchematicDisplayName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetSchematicCategory
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// ESchematicCategory             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESchematicCategory UFGSchematic::GetSchematicCategory(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetSchematicCategory");

	UFGSchematic_GetSchematicCategory_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetResourceToAddToScanner
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UFGSchematic::GetResourceToAddToScanner(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetResourceToAddToScanner");

	UFGSchematic_GetResourceToAddToScanner_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetRecipes
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UFGSchematic::GetRecipes(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetRecipes");

	UFGSchematic_GetRecipes_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetNumInventorySlotsUnlocked
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGSchematic::GetNumInventorySlotsUnlocked(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetNumInventorySlotsUnlocked");

	UFGSchematic_GetNumInventorySlotsUnlocked_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetNumArmEquipmentSlotsUnlocked
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGSchematic::GetNumArmEquipmentSlotsUnlocked(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetNumArmEquipmentSlotsUnlocked");

	UFGSchematic_GetNumArmEquipmentSlotsUnlocked_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetItemIcon
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateBrush UFGSchematic::GetItemIcon(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetItemIcon");

	UFGSchematic_GetItemIcon_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetDependentOnSchematic
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGSchematic::GetDependentOnSchematic(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetDependentOnSchematic");

	UFGSchematic_GetDependentOnSchematic_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetCost
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> UFGSchematic::GetCost(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetCost");

	UFGSchematic_GetCost_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetAdditionalSchematicDependencies
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UFGSchematic::GetAdditionalSchematicDependencies(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetAdditionalSchematicDependencies");

	UFGSchematic_GetAdditionalSchematicDependencies_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.SetActiveSchematic
// ()
// Parameters:
// class UClass*                  newActiveSchematic             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGSchematicManager::SetActiveSchematic(class UClass* newActiveSchematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.SetActiveSchematic");

	AFGSchematicManager_SetActiveSchematic_Params params;
	params.newActiveSchematic = newActiveSchematic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.PayOffOnSchematic
// ()
// Parameters:
// class UClass*                  Schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     amount                         (Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGSchematicManager::PayOffOnSchematic(class UClass* Schematic, TArray<struct FItemAmount>* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.PayOffOnSchematic");

	AFGSchematicManager_PayOffOnSchematic_Params params;
	params.Schematic = Schematic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (amount != nullptr)
		*amount = params.amount;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.OnRep_PurchasedSchematic
// ()

void AFGSchematicManager::OnRep_PurchasedSchematic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.OnRep_PurchasedSchematic");

	AFGSchematicManager_OnRep_PurchasedSchematic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSchematicManager.OnRep_PaidOffOnSchematic
// ()

void AFGSchematicManager::OnRep_PaidOffOnSchematic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.OnRep_PaidOffOnSchematic");

	AFGSchematicManager_OnRep_PaidOffOnSchematic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSchematicManager.OnRep_ActiveSchematic
// ()

void AFGSchematicManager::OnRep_ActiveSchematic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.OnRep_ActiveSchematic");

	AFGSchematicManager_OnRep_ActiveSchematic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSchematicManager.LaunchShip
// ()

void AFGSchematicManager::LaunchShip()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.LaunchShip");

	AFGSchematicManager_LaunchShip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSchematicManager.IsShipAtTradingPost
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGSchematicManager::IsShipAtTradingPost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.IsShipAtTradingPost");

	AFGSchematicManager_IsShipAtTradingPost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.IsSchematicPurchased
// ()
// Parameters:
// class UClass*                  SchematicClass                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGSchematicManager::IsSchematicPurchased(class UClass* SchematicClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.IsSchematicPurchased");

	AFGSchematicManager_IsSchematicPurchased_Params params;
	params.SchematicClass = SchematicClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.IsSchematicPaidOff
// ()
// Parameters:
// class UClass*                  Schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGSchematicManager::IsSchematicPaidOff(class UClass* Schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.IsSchematicPaidOff");

	AFGSchematicManager_IsSchematicPaidOff_Params params;
	params.Schematic = Schematic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.GiveAccessToSchematic
// ()
// Parameters:
// class UClass*                  SchematicClass                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           accessedViaCheats              (Parm, ZeroConstructor, IsPlainOldData)

void AFGSchematicManager::GiveAccessToSchematic(class UClass* SchematicClass, bool accessedViaCheats)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GiveAccessToSchematic");

	AFGSchematicManager_GiveAccessToSchematic_Params params;
	params.SchematicClass = SchematicClass;
	params.accessedViaCheats = accessedViaCheats;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSchematicManager.GetTimeUntilShipReturn
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGSchematicManager::GetTimeUntilShipReturn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetTimeUntilShipReturn");

	AFGSchematicManager_GetTimeUntilShipReturn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.GetRemainingCostFor
// ()
// Parameters:
// class UClass*                  Schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> AFGSchematicManager::GetRemainingCostFor(class UClass* Schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetRemainingCostFor");

	AFGSchematicManager_GetRemainingCostFor_Params params;
	params.Schematic = Schematic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.GetPurchasedSchematics
// ()
// Parameters:
// TArray<class UClass*>          out_schematics                 (Parm, OutParm, ZeroConstructor)

void AFGSchematicManager::GetPurchasedSchematics(TArray<class UClass*>* out_schematics)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetPurchasedSchematics");

	AFGSchematicManager_GetPurchasedSchematics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_schematics != nullptr)
		*out_schematics = params.out_schematics;
}


// Function FactoryGame.FGSchematicManager.GetPaidOffCostFor
// ()
// Parameters:
// class UClass*                  Schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> AFGSchematicManager::GetPaidOffCostFor(class UClass* Schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetPaidOffCostFor");

	AFGSchematicManager_GetPaidOffCostFor_Params params;
	params.Schematic = Schematic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.GetMaxAllowedTechTier
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGSchematicManager::GetMaxAllowedTechTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetMaxAllowedTechTier");

	AFGSchematicManager_GetMaxAllowedTechTier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.GetHighestAvailableTechTier
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGSchematicManager::GetHighestAvailableTechTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetHighestAvailableTechTier");

	AFGSchematicManager_GetHighestAvailableTechTier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.GetCostFor
// ()
// Parameters:
// class UClass*                  Schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> AFGSchematicManager::GetCostFor(class UClass* Schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetCostFor");

	AFGSchematicManager_GetCostFor_Params params;
	params.Schematic = Schematic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.GetAvailableSchematics
// ()
// Parameters:
// TArray<class UClass*>          out_schematics                 (Parm, OutParm, ZeroConstructor)

void AFGSchematicManager::GetAvailableSchematics(TArray<class UClass*>* out_schematics)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetAvailableSchematics");

	AFGSchematicManager_GetAvailableSchematics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_schematics != nullptr)
		*out_schematics = params.out_schematics;
}


// Function FactoryGame.FGSchematicManager.GetAllSchematicsOfType
// ()
// Parameters:
// ESchematicType                 Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_schematics                 (Parm, OutParm, ZeroConstructor)

void AFGSchematicManager::GetAllSchematicsOfType(ESchematicType Type, TArray<class UClass*>* out_schematics)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetAllSchematicsOfType");

	AFGSchematicManager_GetAllSchematicsOfType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_schematics != nullptr)
		*out_schematics = params.out_schematics;
}


// Function FactoryGame.FGSchematicManager.GetAllSchematics
// ()
// Parameters:
// TArray<class UClass*>          out_schematics                 (Parm, OutParm, ZeroConstructor)

void AFGSchematicManager::GetAllSchematics(TArray<class UClass*>* out_schematics)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetAllSchematics");

	AFGSchematicManager_GetAllSchematics_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_schematics != nullptr)
		*out_schematics = params.out_schematics;
}


// Function FactoryGame.FGSchematicManager.GetActiveSchematic
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGSchematicManager::GetActiveSchematic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetActiveSchematic");

	AFGSchematicManager_GetActiveSchematic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.Get
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGSchematicManager*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGSchematicManager* AFGSchematicManager::Get(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.Get");

	AFGSchematicManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.CanSetAsActiveSchematic
// ()
// Parameters:
// class UClass*                  inSchematic                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGSchematicManager::CanSetAsActiveSchematic(class UClass* inSchematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.CanSetAsActiveSchematic");

	AFGSchematicManager_CanSetAsActiveSchematic_Params params;
	params.inSchematic = inSchematic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.AddAvailableSchematic
// ()
// Parameters:
// class UClass*                  schematicClassToAdd            (Parm, ZeroConstructor, IsPlainOldData)

void AFGSchematicManager::AddAvailableSchematic(class UClass* schematicClassToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.AddAvailableSchematic");

	AFGSchematicManager_AddAvailableSchematic_Params params;
	params.schematicClassToAdd = schematicClassToAdd;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignificanceInterface.LostSignificance
// ()

void UFGSignificanceInterface::LostSignificance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignificanceInterface.LostSignificance");

	UFGSignificanceInterface_LostSignificance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignificanceInterface.GetSignificanceRange
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGSignificanceInterface::GetSignificanceRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignificanceInterface.GetSignificanceRange");

	UFGSignificanceInterface_GetSignificanceRange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignificanceInterface.GetSignificanceBias
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGSignificanceInterface::GetSignificanceBias()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignificanceInterface.GetSignificanceBias");

	UFGSignificanceInterface_GetSignificanceBias_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignificanceInterface.GainedSignificance
// ()

void UFGSignificanceInterface::GainedSignificance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignificanceInterface.GainedSignificance");

	UFGSignificanceInterface_GainedSignificance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignSettings.GetTextMaterialInstanceFromIndex
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInterface* UFGSignSettings::GetTextMaterialInstanceFromIndex(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignSettings.GetTextMaterialInstanceFromIndex");

	UFGSignSettings_GetTextMaterialInstanceFromIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignSettings.GetSignColorData
// ()
// Parameters:
// TArray<struct FSignColorData>  ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<struct FSignColorData> UFGSignSettings::GetSignColorData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignSettings.GetSignColorData");

	UFGSignSettings_GetSignColorData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignSettings.GetBackgroundMaterialInstanceFromIndex
// ()
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInterface* UFGSignSettings::GetBackgroundMaterialInstanceFromIndex(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignSettings.GetBackgroundMaterialInstanceFromIndex");

	UFGSignSettings_GetBackgroundMaterialInstanceFromIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSkySphere.UpdatePreview
// ()

void AFGSkySphere::UpdatePreview()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSkySphere.UpdatePreview");

	AFGSkySphere_UpdatePreview_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSkySphere.GetFloatCurveValue
// ()
// Parameters:
// struct FRuntimeFloatCurve      Curve                          (ConstParm, Parm, OutParm, ReferenceParm)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGSkySphere::GetFloatCurveValue(const struct FRuntimeFloatCurve& Curve, float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSkySphere.GetFloatCurveValue");

	AFGSkySphere_GetFloatCurveValue_Params params;
	params.Curve = Curve;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSkySphere.GetColorCurveValue
// ()
// Parameters:
// struct FRuntimeCurveLinearColor Curve                          (ConstParm, Parm, OutParm, ReferenceParm)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor AFGSkySphere::GetColorCurveValue(const struct FRuntimeCurveLinearColor& Curve, float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSkySphere.GetColorCurveValue");

	AFGSkySphere_GetColorCurveValue_Params params;
	params.Curve = Curve;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSkySphere.ApplySkySphereSettings
// ()
// Parameters:
// struct FSkySphereSettings      Settings                       (ConstParm, Parm, OutParm, ReferenceParm)

void AFGSkySphere::ApplySkySphereSettings(const struct FSkySphereSettings& Settings)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSkySphere.ApplySkySphereSettings");

	AFGSkySphere_ApplySkySphereSettings_Params params;
	params.Settings = Settings;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSoundSplineComponent.SetEmitterInterval
// ()
// Parameters:
// float                          newEmitterInterval             (Parm, ZeroConstructor, IsPlainOldData)

void UFGSoundSplineComponent::SetEmitterInterval(float newEmitterInterval)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSoundSplineComponent.SetEmitterInterval");

	UFGSoundSplineComponent_SetEmitterInterval_Params params;
	params.newEmitterInterval = newEmitterInterval;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSoundSplineComponent.GetEmitterInterval
// ()
// Parameters:
// float                          newEmitterInterval             (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGSoundSplineComponent::GetEmitterInterval(float newEmitterInterval)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSoundSplineComponent.GetEmitterInterval");

	UFGSoundSplineComponent_GetEmitterInterval_Params params;
	params.newEmitterInterval = newEmitterInterval;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSplineComponent.UpdateSplineMeshes
// ()

void UFGSplineComponent::UpdateSplineMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSplineComponent.UpdateSplineMeshes");

	UFGSplineComponent_UpdateSplineMeshes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSplineComponent.SetOverrideMaterial
// ()
// Parameters:
// class UMaterialInterface*      Material                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGSplineComponent::SetOverrideMaterial(class UMaterialInterface* Material)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSplineComponent.SetOverrideMaterial");

	UFGSplineComponent_SetOverrideMaterial_Params params;
	params.Material = Material;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSplineComponent.DrawDebugSpline
// ()
// Parameters:
// struct FColor                  color1                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FColor                  color2                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Thickness                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGSplineComponent::DrawDebugSpline(const struct FColor& color1, const struct FColor& color2, float Thickness)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSplineComponent.DrawDebugSpline");

	UFGSplineComponent_DrawDebugSpline_Params params;
	params.color1 = color1;
	params.color2 = color2;
	params.Thickness = Thickness;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSporeFlower.ActorShouldTriggerFlower
// ()
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGSporeFlower::ActorShouldTriggerFlower(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSporeFlower.ActorShouldTriggerFlower");

	AFGSporeFlower_ActorShouldTriggerFlower_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGStartingPod.StartSequence
// ()

void AFGStartingPod::StartSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStartingPod.StartSequence");

	AFGStartingPod_StartSequence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGStartingPod.OnPlayerSkipIntroSequence
// ()

void AFGStartingPod::OnPlayerSkipIntroSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStartingPod.OnPlayerSkipIntroSequence");

	AFGStartingPod_OnPlayerSkipIntroSequence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGStartingPod.GetCachedPlayer
// ()
// Parameters:
// class AFGCharacterPlayer*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterPlayer* AFGStartingPod::GetCachedPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStartingPod.GetCachedPlayer");

	AFGStartingPod_GetCachedPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGStorySubsystem.SetupDelegates
// ()

void AFGStorySubsystem::SetupDelegates()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStorySubsystem.SetupDelegates");

	AFGStorySubsystem_SetupDelegates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGStorySubsystem.OnSchematicPurchased
// ()
// Parameters:
// class UClass*                  newSchematic                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGStorySubsystem::OnSchematicPurchased(class UClass* newSchematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStorySubsystem.OnSchematicPurchased");

	AFGStorySubsystem_OnSchematicPurchased_Params params;
	params.newSchematic = newSchematic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGStorySubsystem.OnResearchRewardClaimed
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGStorySubsystem::OnResearchRewardClaimed(class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStorySubsystem.OnResearchRewardClaimed");

	AFGStorySubsystem_OnResearchRewardClaimed_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGStorySubsystem.OnResearchRecipeTimerComplete
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGStorySubsystem::OnResearchRecipeTimerComplete(class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStorySubsystem.OnResearchRecipeTimerComplete");

	AFGStorySubsystem_OnResearchRecipeTimerComplete_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGStorySubsystem.OnPlayerAddedItemToInventory
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            numAdded                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGStorySubsystem::OnPlayerAddedItemToInventory(class UClass* ItemClass, int numAdded)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStorySubsystem.OnPlayerAddedItemToInventory");

	AFGStorySubsystem_OnPlayerAddedItemToInventory_Params params;
	params.ItemClass = ItemClass;
	params.numAdded = numAdded;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGStorySubsystem.OnNewResearchRecipeAvailable
// ()
// Parameters:
// class UClass*                  researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGStorySubsystem::OnNewResearchRecipeAvailable(class UClass* researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStorySubsystem.OnNewResearchRecipeAvailable");

	AFGStorySubsystem_OnNewResearchRecipeAvailable_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGStorySubsystem.OnMapAreaVisited
// ()
// Parameters:
// class UClass*                  mapArea                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGStorySubsystem::OnMapAreaVisited(class UClass* mapArea)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStorySubsystem.OnMapAreaVisited");

	AFGStorySubsystem_OnMapAreaVisited_Params params;
	params.mapArea = mapArea;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGStorySubsystem.AddPlayer
// ()
// Parameters:
// class AFGCharacterPlayer*      inPlayer                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGStorySubsystem::AddPlayer(class AFGCharacterPlayer* inPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStorySubsystem.AddPlayer");

	AFGStorySubsystem_AddPlayer_Params params;
	params.inPlayer = inPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPoint.SetWaitTime
// ()
// Parameters:
// float                          newWaitTime                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGTargetPoint::SetWaitTime(float newWaitTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.SetWaitTime");

	AFGTargetPoint_SetWaitTime_Params params;
	params.newWaitTime = newWaitTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPoint.SetVisibility
// ()
// Parameters:
// bool                           inVisible                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGTargetPoint::SetVisibility(bool inVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.SetVisibility");

	AFGTargetPoint_SetVisibility_Params params;
	params.inVisible = inVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPoint.SetTargetSpeed
// ()
// Parameters:
// int                            newSpeed                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGTargetPoint::SetTargetSpeed(int newSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.SetTargetSpeed");

	AFGTargetPoint_SetTargetSpeed_Params params;
	params.newSpeed = newSpeed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPoint.SetOwningVehicle
// ()
// Parameters:
// class AFGWheeledVehicle*       newVehicle                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGTargetPoint::SetOwningVehicle(class AFGWheeledVehicle* newVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.SetOwningVehicle");

	AFGTargetPoint_SetOwningVehicle_Params params;
	params.newVehicle = newVehicle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPoint.OnRep_Visibility
// ()

void AFGTargetPoint::OnRep_Visibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.OnRep_Visibility");

	AFGTargetPoint_OnRep_Visibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPoint.IsTargetSpeedStill
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTargetPoint::IsTargetSpeedStill()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.IsTargetSpeedStill");

	AFGTargetPoint_IsTargetSpeedStill_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTargetPoint.IncreaseWaitTime
// ()
// Parameters:
// float                          addedWaitTime                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGTargetPoint::IncreaseWaitTime(float addedWaitTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.IncreaseWaitTime");

	AFGTargetPoint_IncreaseWaitTime_Params params;
	params.addedWaitTime = addedWaitTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPoint.GetWaitTime
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTargetPoint::GetWaitTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.GetWaitTime");

	AFGTargetPoint_GetWaitTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTargetPoint.GetTargetSpeed
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGTargetPoint::GetTargetSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.GetTargetSpeed");

	AFGTargetPoint_GetTargetSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTargetPoint.GetOwningVehicle
// ()
// Parameters:
// class AFGWheeledVehicle*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGWheeledVehicle* AFGTargetPoint::GetOwningVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.GetOwningVehicle");

	AFGTargetPoint_GetOwningVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTargetPointLinkedList.SetPathVisibility
// ()
// Parameters:
// bool                           inVisible                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGTargetPointLinkedList::SetPathVisibility(bool inVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.SetPathVisibility");

	UFGTargetPointLinkedList_SetPathVisibility_Params params;
	params.inVisible = inVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPointLinkedList.SetNextTarget
// ()

void UFGTargetPointLinkedList::SetNextTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.SetNextTarget");

	UFGTargetPointLinkedList_SetNextTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPointLinkedList.SetCurrentTarget
// ()
// Parameters:
// class AFGTargetPoint*          newTarget                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGTargetPointLinkedList::SetCurrentTarget(class AFGTargetPoint* newTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.SetCurrentTarget");

	UFGTargetPointLinkedList_SetCurrentTarget_Params params;
	params.newTarget = newTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPointLinkedList.SetClosestPointAsTarget
// ()

void UFGTargetPointLinkedList::SetClosestPointAsTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.SetClosestPointAsTarget");

	UFGTargetPointLinkedList_SetClosestPointAsTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPointLinkedList.RemoveItem
// ()
// Parameters:
// class AFGTargetPoint*          targetToRemove                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGTargetPointLinkedList::RemoveItem(class AFGTargetPoint* targetToRemove)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.RemoveItem");

	UFGTargetPointLinkedList_RemoveItem_Params params;
	params.targetToRemove = targetToRemove;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPointLinkedList.InsertItem
// ()
// Parameters:
// class AFGTargetPoint*          newTarget                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGTargetPointLinkedList::InsertItem(class AFGTargetPoint* newTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.InsertItem");

	UFGTargetPointLinkedList_InsertItem_Params params;
	params.newTarget = newTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPointLinkedList.GetLastTarget
// ()
// Parameters:
// class AFGTargetPoint*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGTargetPoint* UFGTargetPointLinkedList::GetLastTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.GetLastTarget");

	UFGTargetPointLinkedList_GetLastTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTargetPointLinkedList.GetFirstTarget
// ()
// Parameters:
// class AFGTargetPoint*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGTargetPoint* UFGTargetPointLinkedList::GetFirstTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.GetFirstTarget");

	UFGTargetPointLinkedList_GetFirstTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTargetPointLinkedList.GetCurrentTarget
// ()
// Parameters:
// class AFGTargetPoint*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGTargetPoint* UFGTargetPointLinkedList::GetCurrentTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.GetCurrentTarget");

	UFGTargetPointLinkedList_GetCurrentTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTargetPointLinkedList.ClearRecording
// ()

void UFGTargetPointLinkedList::ClearRecording()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.ClearRecording");

	UFGTargetPointLinkedList_ClearRecording_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTimeOfDaySubsystem.UpdateServerDaySeconds
// ()

void AFGTimeOfDaySubsystem::UpdateServerDaySeconds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.UpdateServerDaySeconds");

	AFGTimeOfDaySubsystem_UpdateServerDaySeconds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTimeOfDaySubsystem.SetTimeSpeedMultiplier
// ()
// Parameters:
// float                          Multiplier                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGTimeOfDaySubsystem::SetTimeSpeedMultiplier(float Multiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.SetTimeSpeedMultiplier");

	AFGTimeOfDaySubsystem_SetTimeSpeedMultiplier_Params params;
	params.Multiplier = Multiplier;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTimeOfDaySubsystem.OnRep_ReplicatedDaySeconds
// ()

void AFGTimeOfDaySubsystem::OnRep_ReplicatedDaySeconds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.OnRep_ReplicatedDaySeconds");

	AFGTimeOfDaySubsystem_OnRep_ReplicatedDaySeconds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTimeOfDaySubsystem.IsNight
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTimeOfDaySubsystem::IsNight()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.IsNight");

	AFGTimeOfDaySubsystem_IsNight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.IsDay
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTimeOfDaySubsystem::IsDay()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.IsDay");

	AFGTimeOfDaySubsystem_IsDay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetTimeOfDayHours
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTimeOfDaySubsystem::GetTimeOfDayHours()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetTimeOfDayHours");

	AFGTimeOfDaySubsystem_GetTimeOfDayHours_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetSeconds
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTimeOfDaySubsystem::GetSeconds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetSeconds");

	AFGTimeOfDaySubsystem_GetSeconds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetPassedDays
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGTimeOfDaySubsystem::GetPassedDays()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetPassedDays");

	AFGTimeOfDaySubsystem_GetPassedDays_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetNormalizedTimeOfDay
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTimeOfDaySubsystem::GetNormalizedTimeOfDay()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetNormalizedTimeOfDay");

	AFGTimeOfDaySubsystem_GetNormalizedTimeOfDay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetNighttimeSeconds
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTimeOfDaySubsystem::GetNighttimeSeconds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetNighttimeSeconds");

	AFGTimeOfDaySubsystem_GetNighttimeSeconds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetNightPct
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTimeOfDaySubsystem::GetNightPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetNightPct");

	AFGTimeOfDaySubsystem_GetNightPct_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetMinutes
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGTimeOfDaySubsystem::GetMinutes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetMinutes");

	AFGTimeOfDaySubsystem_GetMinutes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetHours
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGTimeOfDaySubsystem::GetHours()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetHours");

	AFGTimeOfDaySubsystem_GetHours_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetDaytimeSeconds
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTimeOfDaySubsystem::GetDaytimeSeconds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetDaytimeSeconds");

	AFGTimeOfDaySubsystem_GetDaytimeSeconds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetDaySeconds
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTimeOfDaySubsystem::GetDaySeconds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetDaySeconds");

	AFGTimeOfDaySubsystem_GetDaySeconds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetDayPct
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTimeOfDaySubsystem::GetDayPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetDayPct");

	AFGTimeOfDaySubsystem_GetDayPct_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetDayMinutes
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGTimeOfDaySubsystem::GetDayMinutes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetDayMinutes");

	AFGTimeOfDaySubsystem_GetDayMinutes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.Get
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGTimeOfDaySubsystem*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGTimeOfDaySubsystem* AFGTimeOfDaySubsystem::Get(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.Get");

	AFGTimeOfDaySubsystem_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.UpdateTutorial
// ()
// Parameters:
// EIntroTutorialSteps            nextTutorialStep               (Parm, ZeroConstructor, IsPlainOldData)

void AFGTutorialIntroManager::UpdateTutorial(EIntroTutorialSteps nextTutorialStep)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.UpdateTutorial");

	AFGTutorialIntroManager_UpdateTutorial_Params params;
	params.nextTutorialStep = nextTutorialStep;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.StartSkipIntroSequence
// ()

void AFGTutorialIntroManager::StartSkipIntroSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.StartSkipIntroSequence");

	AFGTutorialIntroManager_StartSkipIntroSequence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.SetInputGatesFromTutorialLevel
// ()
// Parameters:
// class AFGPlayerController*     PlayerController               (Parm, ZeroConstructor, IsPlainOldData)

void AFGTutorialIntroManager::SetInputGatesFromTutorialLevel(class AFGPlayerController* PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.SetInputGatesFromTutorialLevel");

	AFGTutorialIntroManager_SetInputGatesFromTutorialLevel_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.SetCanSkipTutorialIntro
// ()
// Parameters:
// bool                           canSkip                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGTutorialIntroManager::SetCanSkipTutorialIntro(bool canSkip)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.SetCanSkipTutorialIntro");

	AFGTutorialIntroManager_SetCanSkipTutorialIntro_Params params;
	params.canSkip = canSkip;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.OnSchematicPurchased
// ()
// Parameters:
// class UClass*                  newSchematic                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGTutorialIntroManager::OnSchematicPurchased(class UClass* newSchematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.OnSchematicPurchased");

	AFGTutorialIntroManager_OnSchematicPurchased_Params params;
	params.newSchematic = newSchematic;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.OnRep_TradingPostLevel
// ()

void AFGTutorialIntroManager::OnRep_TradingPostLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.OnRep_TradingPostLevel");

	AFGTutorialIntroManager_OnRep_TradingPostLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.OnPlayerAddedItemToInventory
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            numAdded                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGTutorialIntroManager::OnPlayerAddedItemToInventory(class UClass* ItemClass, int numAdded)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.OnPlayerAddedItemToInventory");

	AFGTutorialIntroManager_OnPlayerAddedItemToInventory_Params params;
	params.ItemClass = ItemClass;
	params.numAdded = numAdded;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.OnPlayerAddedItemToArmSlot
// ()
// Parameters:
// class UClass*                  ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            numAdded                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGTutorialIntroManager::OnPlayerAddedItemToArmSlot(class UClass* ItemClass, int numAdded)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.OnPlayerAddedItemToArmSlot");

	AFGTutorialIntroManager_OnPlayerAddedItemToArmSlot_Params params;
	params.ItemClass = ItemClass;
	params.numAdded = numAdded;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.OnBuildingBuiltGlobal
// ()
// Parameters:
// class AFGBuildable*            buildable                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGTutorialIntroManager::OnBuildingBuiltGlobal(class AFGBuildable* buildable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.OnBuildingBuiltGlobal");

	AFGTutorialIntroManager_OnBuildingBuiltGlobal_Params params;
	params.buildable = buildable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.IntroDone
// ()

void AFGTutorialIntroManager::IntroDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.IntroDone");

	AFGTutorialIntroManager_IntroDone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.HasTradingpostBeenBuilt
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTutorialIntroManager::HasTradingpostBeenBuilt()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.HasTradingpostBeenBuilt");

	AFGTutorialIntroManager_HasTradingpostBeenBuilt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.GetTradingPostLevel
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGTutorialIntroManager::GetTradingPostLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.GetTradingPostLevel");

	AFGTutorialIntroManager_GetTradingPostLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.GetNormalizedProgressToSkip
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTutorialIntroManager::GetNormalizedProgressToSkip()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.GetNormalizedProgressToSkip");

	AFGTutorialIntroManager_GetNormalizedProgressToSkip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.GetIsTutorialCompleted
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTutorialIntroManager::GetIsTutorialCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.GetIsTutorialCompleted");

	AFGTutorialIntroManager_GetIsTutorialCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.GetIsIntroSequenceDone
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTutorialIntroManager::GetIsIntroSequenceDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.GetIsIntroSequenceDone");

	AFGTutorialIntroManager_GetIsIntroSequenceDone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.GetCurrentTutorialStep
// ()
// Parameters:
// EIntroTutorialSteps            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EIntroTutorialSteps AFGTutorialIntroManager::GetCurrentTutorialStep()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.GetCurrentTutorialStep");

	AFGTutorialIntroManager_GetCurrentTutorialStep_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.GetCanSkipTutorial
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTutorialIntroManager::GetCanSkipTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.GetCanSkipTutorial");

	AFGTutorialIntroManager_GetCanSkipTutorial_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.Get
// ()
// Parameters:
// class UObject*                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGTutorialIntroManager* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGTutorialIntroManager* AFGTutorialIntroManager::Get(class UObject* WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.Get");

	AFGTutorialIntroManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.EndSkipIntroSequence
// ()

void AFGTutorialIntroManager::EndSkipIntroSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.EndSkipIntroSequence");

	AFGTutorialIntroManager_EndSkipIntroSequence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.CompleteTutorial
// ()

void AFGTutorialIntroManager::CompleteTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.CompleteTutorial");

	AFGTutorialIntroManager_CompleteTutorial_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.CancelSkipIntroSequence
// ()

void AFGTutorialIntroManager::CancelSkipIntroSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.CancelSkipIntroSequence");

	AFGTutorialIntroManager_CancelSkipIntroSequence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialSubsystem.OnBuildingBuilt
// ()
// Parameters:
// class UClass*                  itemDesc                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGTutorialSubsystem::OnBuildingBuilt(class UClass* itemDesc)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialSubsystem.OnBuildingBuilt");

	UFGTutorialSubsystem_OnBuildingBuilt_Params params;
	params.itemDesc = itemDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialSubsystem.ClearBuiltData
// ()

void UFGTutorialSubsystem::ClearBuiltData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialSubsystem.ClearBuiltData");

	UFGTutorialSubsystem_ClearBuiltData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialSubsystem.AddToBuiltClasses
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGTutorialSubsystem::AddToBuiltClasses(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialSubsystem.AddToBuiltClasses");

	UFGTutorialSubsystem_AddToBuiltClasses_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUseableInterface.UpdateUseState
// ()
// Parameters:
// class AFGCharacterPlayer*      byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 atLocation                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UPrimitiveComponent*     componentHit                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FUseState               out_useState                   (Parm, OutParm, ReferenceParm)

void UFGUseableInterface::UpdateUseState(class AFGCharacterPlayer* byCharacter, const struct FVector& atLocation, class UPrimitiveComponent* componentHit, struct FUseState* out_useState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.UpdateUseState");

	UFGUseableInterface_UpdateUseState_Params params;
	params.byCharacter = byCharacter;
	params.atLocation = atLocation;
	params.componentHit = componentHit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_useState != nullptr)
		*out_useState = params.out_useState;
}


// Function FactoryGame.FGUseableInterface.UnregisterInteractingPlayer
// ()
// Parameters:
// class AFGCharacterPlayer*      Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGUseableInterface::UnregisterInteractingPlayer(class AFGCharacterPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.UnregisterInteractingPlayer");

	UFGUseableInterface_UnregisterInteractingPlayer_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUseableInterface.StopIsLookedAt
// ()
// Parameters:
// class AFGCharacterPlayer*      byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUseState               State                          (ConstParm, Parm, OutParm, ReferenceParm)

void UFGUseableInterface::StopIsLookedAt(class AFGCharacterPlayer* byCharacter, const struct FUseState& State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.StopIsLookedAt");

	UFGUseableInterface_StopIsLookedAt_Params params;
	params.byCharacter = byCharacter;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUseableInterface.StartIsLookedAt
// ()
// Parameters:
// class AFGCharacterPlayer*      byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUseState               State                          (ConstParm, Parm, OutParm, ReferenceParm)

void UFGUseableInterface::StartIsLookedAt(class AFGCharacterPlayer* byCharacter, const struct FUseState& State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.StartIsLookedAt");

	UFGUseableInterface_StartIsLookedAt_Params params;
	params.byCharacter = byCharacter;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUseableInterface.RegisterInteractingPlayer
// ()
// Parameters:
// class AFGCharacterPlayer*      Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGUseableInterface::RegisterInteractingPlayer(class AFGCharacterPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.RegisterInteractingPlayer");

	UFGUseableInterface_RegisterInteractingPlayer_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUseableInterface.OnUseStop
// ()
// Parameters:
// class AFGCharacterPlayer*      byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUseState               State                          (ConstParm, Parm, OutParm, ReferenceParm)

void UFGUseableInterface::OnUseStop(class AFGCharacterPlayer* byCharacter, const struct FUseState& State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.OnUseStop");

	UFGUseableInterface_OnUseStop_Params params;
	params.byCharacter = byCharacter;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUseableInterface.OnUse
// ()
// Parameters:
// class AFGCharacterPlayer*      byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUseState               State                          (ConstParm, Parm, OutParm, ReferenceParm)

void UFGUseableInterface::OnUse(class AFGCharacterPlayer* byCharacter, const struct FUseState& State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.OnUse");

	UFGUseableInterface_OnUse_Params params;
	params.byCharacter = byCharacter;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUseableInterface.IsUseable
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGUseableInterface::IsUseable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.IsUseable");

	UFGUseableInterface_IsUseable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGUseableInterface.GetLookAtDecription
// ()
// Parameters:
// class AFGCharacterPlayer*      byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUseState               State                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGUseableInterface::GetLookAtDecription(class AFGCharacterPlayer* byCharacter, const struct FUseState& State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.GetLookAtDecription");

	UFGUseableInterface_GetLookAtDecription_Params params;
	params.byCharacter = byCharacter;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicleCollisionBoxComponent.OnOverlapBegin
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UFGVehicleCollisionBoxComponent::OnOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicleCollisionBoxComponent.OnOverlapBegin");

	UFGVehicleCollisionBoxComponent_OnOverlapBegin_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicleDescriptor.GetVehicleClass
// ()
// Parameters:
// class UClass*                  inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGVehicleDescriptor::GetVehicleClass(class UClass* inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicleDescriptor.GetVehicleClass");

	UFGVehicleDescriptor_GetVehicleClass_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicleDestroyableInterface.GetForceThreshold
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGVehicleDestroyableInterface::GetForceThreshold()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicleDestroyableInterface.GetForceThreshold");

	UFGVehicleDestroyableInterface_GetForceThreshold_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicleDestroyableInterface.GetDestroyEffect
// ()
// Parameters:
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* UFGVehicleDestroyableInterface::GetDestroyEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicleDestroyableInterface.GetDestroyEffect");

	UFGVehicleDestroyableInterface_GetDestroyEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicleDestroyableInterface.GetDestroyAudioEvent
// ()
// Parameters:
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* UFGVehicleDestroyableInterface::GetDestroyAudioEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicleDestroyableInterface.GetDestroyAudioEvent");

	UFGVehicleDestroyableInterface_GetDestroyAudioEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVersionFunctionLibrary.IsPublicBuild
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGVersionFunctionLibrary::IsPublicBuild()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVersionFunctionLibrary.IsPublicBuild");

	UFGVersionFunctionLibrary_IsPublicBuild_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVersionFunctionLibrary.GetVersionString
// ()
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGVersionFunctionLibrary::GetVersionString()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVersionFunctionLibrary.GetVersionString");

	UFGVersionFunctionLibrary_GetVersionString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVersionFunctionLibrary.GetGameVersion
// ()
// Parameters:
// EGameVersion                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EGameVersion UFGVersionFunctionLibrary::GetGameVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVersionFunctionLibrary.GetGameVersion");

	UFGVersionFunctionLibrary_GetGameVersion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVirtualCursorFunctionLibrary.EnableVirtualCursor
// ()
// Parameters:
// class APlayerController*       PC                             (Parm, ZeroConstructor, IsPlainOldData)

void UFGVirtualCursorFunctionLibrary::EnableVirtualCursor(class APlayerController* PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVirtualCursorFunctionLibrary.EnableVirtualCursor");

	UFGVirtualCursorFunctionLibrary_EnableVirtualCursor_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVirtualCursorFunctionLibrary.DisableVirtualCursor
// ()
// Parameters:
// class APlayerController*       PC                             (Parm, ZeroConstructor, IsPlainOldData)

void UFGVirtualCursorFunctionLibrary::DisableVirtualCursor(class APlayerController* PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVirtualCursorFunctionLibrary.DisableVirtualCursor");

	UFGVirtualCursorFunctionLibrary_DisableVirtualCursor_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVolumeMapArea.OnPrimitiveComponentEntered
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           fromSweep                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFGVolumeMapArea::OnPrimitiveComponentEntered(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool fromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVolumeMapArea.OnPrimitiveComponentEntered");

	AFGVolumeMapArea_OnPrimitiveComponentEntered_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.fromSweep = fromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVolumeMapArea.GetMapArea
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGVolumeMapArea::GetMapArea()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVolumeMapArea.GetMapArea");

	AFGVolumeMapArea_GetMapArea_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWaterAudio.OnPawnHitSurface
// ()
// Parameters:
// class AFGWaterVolume*          waterVolume                    (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   Pawn                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 surfaceLocation                (Parm, IsPlainOldData)

void UFGWaterAudio::OnPawnHitSurface(class AFGWaterVolume* waterVolume, class APawn* Pawn, const struct FVector& surfaceLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWaterAudio.OnPawnHitSurface");

	UFGWaterAudio_OnPawnHitSurface_Params params;
	params.waterVolume = waterVolume;
	params.Pawn = Pawn;
	params.surfaceLocation = surfaceLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWaterAudio.OnCameraExitedWater
// ()
// Parameters:
// class AFGWaterVolume*          waterVolume                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 exitLocation                   (Parm, IsPlainOldData)
// class AFGPlayerController*     PC                             (Parm, ZeroConstructor, IsPlainOldData)

void UFGWaterAudio::OnCameraExitedWater(class AFGWaterVolume* waterVolume, const struct FVector& exitLocation, class AFGPlayerController* PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWaterAudio.OnCameraExitedWater");

	UFGWaterAudio_OnCameraExitedWater_Params params;
	params.waterVolume = waterVolume;
	params.exitLocation = exitLocation;
	params.PC = PC;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWaterAudio.OnCameraEnteredWater
// ()
// Parameters:
// class AFGWaterVolume*          waterVolume                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 enterLocation                  (Parm, IsPlainOldData)
// class AFGPlayerController*     PC                             (Parm, ZeroConstructor, IsPlainOldData)

void UFGWaterAudio::OnCameraEnteredWater(class AFGWaterVolume* waterVolume, const struct FVector& enterLocation, class AFGPlayerController* PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWaterAudio.OnCameraEnteredWater");

	UFGWaterAudio_OnCameraEnteredWater_Params params;
	params.waterVolume = waterVolume;
	params.enterLocation = enterLocation;
	params.PC = PC;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWaterAudio.GetImpactEvent
// ()
// Parameters:
// class APawn*                   Pawn                           (Parm, ZeroConstructor, IsPlainOldData)
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* UFGWaterAudio::GetImpactEvent(class APawn* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWaterAudio.GetImpactEvent");

	UFGWaterAudio_GetImpactEvent_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWaterVolume.OnPrimitiveComponentExited
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGWaterVolume::OnPrimitiveComponentExited(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWaterVolume.OnPrimitiveComponentExited");

	AFGWaterVolume_OnPrimitiveComponentExited_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWaterVolume.OnPrimitiveComponentEntered
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           fromSweep                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFGWaterVolume::OnPrimitiveComponentEntered(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool fromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWaterVolume.OnPrimitiveComponentEntered");

	AFGWaterVolume_OnPrimitiveComponentEntered_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.fromSweep = fromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponChild.NotifyReloading
// ()

void AFGWeaponChild::NotifyReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponChild.NotifyReloading");

	AFGWeaponChild_NotifyReloading_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponChild.NotifyReloadComplete
// ()

void AFGWeaponChild::NotifyReloadComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponChild.NotifyReloadComplete");

	AFGWeaponChild_NotifyReloadComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponChild.NotifyPrimaryFireExecuted
// ()

void AFGWeaponChild::NotifyPrimaryFireExecuted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponChild.NotifyPrimaryFireExecuted");

	AFGWeaponChild_NotifyPrimaryFireExecuted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponChild.NotifyFailedToFire
// ()

void AFGWeaponChild::NotifyFailedToFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponChild.NotifyFailedToFire");

	AFGWeaponChild_NotifyFailedToFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponChild.NotifyEndSecondaryFire
// ()

void AFGWeaponChild::NotifyEndSecondaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponChild.NotifyEndSecondaryFire");

	AFGWeaponChild_NotifyEndSecondaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponChild.NotifyEndPrimaryFire
// ()

void AFGWeaponChild::NotifyEndPrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponChild.NotifyEndPrimaryFire");

	AFGWeaponChild_NotifyEndPrimaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponChild.NotifyBeginSecondaryFire
// ()

void AFGWeaponChild::NotifyBeginSecondaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponChild.NotifyBeginSecondaryFire");

	AFGWeaponChild_NotifyBeginSecondaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponChild.NotifyBeginPrimaryFire
// ()

void AFGWeaponChild::NotifyBeginPrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponChild.NotifyBeginPrimaryFire");

	AFGWeaponChild_NotifyBeginPrimaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.WantsToMove
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::WantsToMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.WantsToMove");

	AFGWheeledVehicle_WantsToMove_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.UseReplicatedState
// ()

void AFGWheeledVehicle::UseReplicatedState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.UseReplicatedState");

	AFGWheeledVehicle_UseReplicatedState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.SetPathVisibility
// ()
// Parameters:
// bool                           inVisible                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::SetPathVisibility(bool inVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.SetPathVisibility");

	AFGWheeledVehicle_SetPathVisibility_Params params;
	params.inVisible = inVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.SetPathFromArray
// ()
// Parameters:
// TArray<class AFGTargetPoint*>  targetPoints                   (Parm, ZeroConstructor)

void AFGWheeledVehicle::SetPathFromArray(TArray<class AFGTargetPoint*> targetPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.SetPathFromArray");

	AFGWheeledVehicle_SetPathFromArray_Params params;
	params.targetPoints = targetPoints;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.SetMovementComponent
// ()
// Parameters:
// class UWheeledVehicleMovementComponent* MovementComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AFGWheeledVehicle::SetMovementComponent(class UWheeledVehicleMovementComponent* MovementComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.SetMovementComponent");

	AFGWheeledVehicle_SetMovementComponent_Params params;
	params.MovementComponent = MovementComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.SetIsDrifting
// ()
// Parameters:
// bool                           newDrifting                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::SetIsDrifting(bool newDrifting)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.SetIsDrifting");

	AFGWheeledVehicle_SetIsDrifting_Params params;
	params.newDrifting = newDrifting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.SetAddedAngularVelocityYaw
// ()
// Parameters:
// float                          yawToAdd                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::SetAddedAngularVelocityYaw(float yawToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.SetAddedAngularVelocityYaw");

	AFGWheeledVehicle_SetAddedAngularVelocityYaw_Params params;
	params.yawToAdd = yawToAdd;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.SetAddedAngularVelocityPitch
// ()
// Parameters:
// float                          pitchToAdd                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::SetAddedAngularVelocityPitch(float pitchToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.SetAddedAngularVelocityPitch");

	AFGWheeledVehicle_SetAddedAngularVelocityPitch_Params params;
	params.pitchToAdd = pitchToAdd;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.ServerUpdateAssistedVelocitiesState
// ()
// Parameters:
// bool                           inDrifting                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          inInputYaw                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          inInputPitch                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::ServerUpdateAssistedVelocitiesState(bool inDrifting, float inInputYaw, float inInputPitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.ServerUpdateAssistedVelocitiesState");

	AFGWheeledVehicle_ServerUpdateAssistedVelocitiesState_Params params;
	params.inDrifting = inDrifting;
	params.inInputYaw = inInputYaw;
	params.inInputPitch = inInputPitch;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.ResetAddedAngularVelocityValues
// ()

void AFGWheeledVehicle::ResetAddedAngularVelocityValues()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.ResetAddedAngularVelocityValues");

	AFGWheeledVehicle_ResetAddedAngularVelocityValues_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.RemoveTargetPoint
// ()
// Parameters:
// class AFGTargetPoint*          targetToRemove                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::RemoveTargetPoint(class AFGTargetPoint* targetToRemove)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.RemoveTargetPoint");

	AFGWheeledVehicle_RemoveTargetPoint_Params params;
	params.targetToRemove = targetToRemove;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.PlayFoliageDestroyedEffect
// ()
// Parameters:
// class UParticleSystem*         destroyEffect                  (Parm, ZeroConstructor, IsPlainOldData)
// class UAkAudioEvent*           destroyAudioEvent              (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, IsPlainOldData)

void AFGWheeledVehicle::PlayFoliageDestroyedEffect(class UParticleSystem* destroyEffect, class UAkAudioEvent* destroyAudioEvent, const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.PlayFoliageDestroyedEffect");

	AFGWheeledVehicle_PlayFoliageDestroyedEffect_Params params;
	params.destroyEffect = destroyEffect;
	params.destroyAudioEvent = destroyAudioEvent;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.OnRep_TransferStatusChanged
// ()

void AFGWheeledVehicle::OnRep_TransferStatusChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.OnRep_TransferStatusChanged");

	AFGWheeledVehicle_OnRep_TransferStatusChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.OnRep_IsSimulated
// ()

void AFGWheeledVehicle::OnRep_IsSimulated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.OnRep_IsSimulated");

	AFGWheeledVehicle_OnRep_IsSimulated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.OnOverlapEnd
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::OnOverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.OnOverlapEnd");

	AFGWheeledVehicle_OnOverlapEnd_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.OnOverlapBegin
// ()
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFGWheeledVehicle::OnOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.OnOverlapBegin");

	AFGWheeledVehicle_OnOverlapBegin_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.NumWheelsOnGround
// ()
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGWheeledVehicle::NumWheelsOnGround()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.NumWheelsOnGround");

	AFGWheeledVehicle_NumWheelsOnGround_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.IsValidFuel
// ()
// Parameters:
// class UClass*                  Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::IsValidFuel(class UClass* Resource)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.IsValidFuel");

	AFGWheeledVehicle_IsValidFuel_Params params;
	params.Resource = Resource;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.IsSimulated
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::IsSimulated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.IsSimulated");

	AFGWheeledVehicle_IsSimulated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.HasFuel
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::HasFuel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.HasFuel");

	AFGWheeledVehicle_HasFuel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetVehicleMovementComponent
// ()
// Parameters:
// class UWheeledVehicleMovementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWheeledVehicleMovementComponent* AFGWheeledVehicle::GetVehicleMovementComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetVehicleMovementComponent");

	AFGWheeledVehicle_GetVehicleMovementComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetTireData
// ()
// Parameters:
// TArray<struct FTireData>       out_tireData                   (Parm, OutParm, ZeroConstructor)

void AFGWheeledVehicle::GetTireData(TArray<struct FTireData>* out_tireData)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetTireData");

	AFGWheeledVehicle_GetTireData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_tireData != nullptr)
		*out_tireData = params.out_tireData;
}


// Function FactoryGame.FGWheeledVehicle.GetTargetNodeLinkedList
// ()
// Parameters:
// class UFGTargetPointLinkedList* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGTargetPointLinkedList* AFGWheeledVehicle::GetTargetNodeLinkedList()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetTargetNodeLinkedList");

	AFGWheeledVehicle_GetTargetNodeLinkedList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetStorageInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGWheeledVehicle::GetStorageInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetStorageInventory");

	AFGWheeledVehicle_GetStorageInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetSimulationComponent
// ()
// Parameters:
// class UFloatingPawnMovement*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFloatingPawnMovement* AFGWheeledVehicle::GetSimulationComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetSimulationComponent");

	AFGWheeledVehicle_GetSimulationComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetPathVisibility
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::GetPathVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetPathVisibility");

	AFGWheeledVehicle_GetPathVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetIsInAir
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::GetIsInAir()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetIsInAir");

	AFGWheeledVehicle_GetIsInAir_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetIsGrounded
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::GetIsGrounded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetIsGrounded");

	AFGWheeledVehicle_GetIsGrounded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetIsDrifting
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::GetIsDrifting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetIsDrifting");

	AFGWheeledVehicle_GetIsDrifting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetFuelInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGWheeledVehicle::GetFuelInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetFuelInventory");

	AFGWheeledVehicle_GetFuelInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetForwardSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGWheeledVehicle::GetForwardSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetForwardSpeed");

	AFGWheeledVehicle_GetForwardSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetDriftForceOffset
// ()
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector AFGWheeledVehicle::GetDriftForceOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetDriftForceOffset");

	AFGWheeledVehicle_GetDriftForceOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.FilterFuelClasses
// ()
// Parameters:
// class UClass*                  Object                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::FilterFuelClasses(class UClass* Object, int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.FilterFuelClasses");

	AFGWheeledVehicle_FilterFuelClasses_Params params;
	params.Object = Object;
	params.idx = idx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.CreateInventoryItemDrops
// ()

void AFGWheeledVehicle::CreateInventoryItemDrops()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.CreateInventoryItemDrops");

	AFGWheeledVehicle_CreateInventoryItemDrops_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicleMovementComponent4W.GetLargestTireLoadValue
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWheeledVehicleMovementComponent4W::GetLargestTireLoadValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicleMovementComponent4W.GetLargestTireLoadValue");

	UFGWheeledVehicleMovementComponent4W_GetLargestTireLoadValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicleMovementComponent4W.GetLargestLongitudinalSlip
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWheeledVehicleMovementComponent4W::GetLargestLongitudinalSlip()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicleMovementComponent4W.GetLargestLongitudinalSlip");

	UFGWheeledVehicleMovementComponent4W_GetLargestLongitudinalSlip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicleMovementComponent4W.GetLargestLateralSlip
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWheeledVehicleMovementComponent4W::GetLargestLateralSlip()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicleMovementComponent4W.GetLargestLateralSlip");

	UFGWheeledVehicleMovementComponent4W_GetLargestLateralSlip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicleMovementComponent6W.GetLargestTireLoadValue
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWheeledVehicleMovementComponent6W::GetLargestTireLoadValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicleMovementComponent6W.GetLargestTireLoadValue");

	UFGWheeledVehicleMovementComponent6W_GetLargestTireLoadValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicleMovementComponent6W.GetLargestLongitudinalSlip
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWheeledVehicleMovementComponent6W::GetLargestLongitudinalSlip()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicleMovementComponent6W.GetLargestLongitudinalSlip");

	UFGWheeledVehicleMovementComponent6W_GetLargestLongitudinalSlip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicleMovementComponent6W.GetLargestLateralSlip
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWheeledVehicleMovementComponent6W::GetLargestLateralSlip()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicleMovementComponent6W.GetLargestLateralSlip");

	UFGWheeledVehicleMovementComponent6W_GetLargestLateralSlip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWidgetSwitcher.FadeOut
// ()

void UFGWidgetSwitcher::FadeOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWidgetSwitcher.FadeOut");

	UFGWidgetSwitcher_FadeOut_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWidgetSwitcher.ExitAnimationTookToLong
// ()

void UFGWidgetSwitcher::ExitAnimationTookToLong()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWidgetSwitcher.ExitAnimationTookToLong");

	UFGWidgetSwitcher_ExitAnimationTookToLong_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWidgetSwitcher.EnterAnimationTookToLong
// ()

void UFGWidgetSwitcher::EnterAnimationTookToLong()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWidgetSwitcher.EnterAnimationTookToLong");

	UFGWidgetSwitcher_EnterAnimationTookToLong_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWindow.GetCloseButton
// ()
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* UFGWindow::GetCloseButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWindow.GetCloseButton");

	UFGWindow_GetCloseButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWireHologram.OnAutomaticPoleDisableToggle
// ()
// Parameters:
// bool                           Disabled                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGWireHologram::OnAutomaticPoleDisableToggle(bool Disabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWireHologram.OnAutomaticPoleDisableToggle");

	AFGWireHologram_OnAutomaticPoleDisableToggle_Params params;
	params.Disabled = Disabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorkBench.SetWorkBenchUser
// ()
// Parameters:
// class AFGCharacterPlayer*      newUser                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGWorkBench::SetWorkBenchUser(class AFGCharacterPlayer* newUser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.SetWorkBenchUser");

	UFGWorkBench_SetWorkBenchUser_Params params;
	params.newUser = newUser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorkBench.SetRecipe
// ()
// Parameters:
// class UClass*                  Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGWorkBench::SetRecipe(class UClass* Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.SetRecipe");

	UFGWorkBench_SetRecipe_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorkBench.SetIsPressingProduce
// ()
// Parameters:
// bool                           isPressingProduce              (Parm, ZeroConstructor, IsPlainOldData)

void UFGWorkBench::SetIsPressingProduce(bool isPressingProduce)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.SetIsPressingProduce");

	UFGWorkBench_SetIsPressingProduce_Params params;
	params.isPressingProduce = isPressingProduce;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorkBench.SetInventory
// ()
// Parameters:
// class UFGInventoryComponent*   newInventory                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGWorkBench::SetInventory(class UFGInventoryComponent* newInventory)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.SetInventory");

	UFGWorkBench_SetInventory_Params params;
	params.newInventory = newInventory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorkBench.SetHoldToProduce
// ()
// Parameters:
// bool                           newHold                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGWorkBench::SetHoldToProduce(bool newHold)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.SetHoldToProduce");

	UFGWorkBench_SetHoldToProduce_Params params;
	params.newHold = newHold;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorkBench.RemoveIngredientsAndAwardRewards
// ()
// Parameters:
// class UFGInventoryComponent*   inventory                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UClass*                  Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGWorkBench::RemoveIngredientsAndAwardRewards(class UFGInventoryComponent* inventory, class UClass* Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.RemoveIngredientsAndAwardRewards");

	UFGWorkBench_RemoveIngredientsAndAwardRewards_Params params;
	params.inventory = inventory;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorkBench.Produce
// ()
// Parameters:
// float                          produceSpeed                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGWorkBench::Produce(float produceSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.Produce");

	UFGWorkBench_Produce_Params params;
	params.produceSpeed = produceSpeed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorkBench.IsProducing
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGWorkBench::IsProducing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.IsProducing");

	UFGWorkBench_IsProducing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.GetWorkBenchUser
// ()
// Parameters:
// class AFGCharacterPlayer*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterPlayer* UFGWorkBench::GetWorkBenchUser()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.GetWorkBenchUser");

	UFGWorkBench_GetWorkBenchUser_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.GetProduceClickSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWorkBench::GetProduceClickSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.GetProduceClickSpeed");

	UFGWorkBench_GetProduceClickSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.GetPlayerWorkingAtBench
// ()
// Parameters:
// class AFGCharacterPlayer*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterPlayer* UFGWorkBench::GetPlayerWorkingAtBench()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.GetPlayerWorkingAtBench");

	UFGWorkBench_GetPlayerWorkingAtBench_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.GetManufacturingSpeed
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWorkBench::GetManufacturingSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.GetManufacturingSpeed");

	UFGWorkBench_GetManufacturingSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.GetManufacturingProgress
// ()
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWorkBench::GetManufacturingProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.GetManufacturingProgress");

	UFGWorkBench_GetManufacturingProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.GetInventory
// ()
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* UFGWorkBench::GetInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.GetInventory");

	UFGWorkBench_GetInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.GetHoldToProduce
// ()
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGWorkBench::GetHoldToProduce()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.GetHoldToProduce");

	UFGWorkBench_GetHoldToProduce_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.GetCurrentRecipe
// ()
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGWorkBench::GetCurrentRecipe()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.GetCurrentRecipe");

	UFGWorkBench_GetCurrentRecipe_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.CraftComplete
// ()

void UFGWorkBench::CraftComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.CraftComplete");

	UFGWorkBench_CraftComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorkBench.CanProduce
// ()
// Parameters:
// class UClass*                  Recipe                         (Parm, ZeroConstructor, IsPlainOldData)
// class UFGInventoryComponent*   inventory                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGWorkBench::CanProduce(class UClass* Recipe, class UFGInventoryComponent* inventory)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.CanProduce");

	UFGWorkBench_CanProduce_Params params;
	params.Recipe = Recipe;
	params.inventory = inventory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorldSettings.UpdateWorldBounds
// ()

void AFGWorldSettings::UpdateWorldBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorldSettings.UpdateWorldBounds");

	AFGWorldSettings_UpdateWorldBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorldSettings.GetLevelStartedAkEvent
// ()
// Parameters:
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* AFGWorldSettings::GetLevelStartedAkEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorldSettings.GetLevelStartedAkEvent");

	AFGWorldSettings_GetLevelStartedAkEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
